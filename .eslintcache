[{"/home/aureen/the_odin_project/breadit/src/index.jsx":"1","/home/aureen/the_odin_project/breadit/src/App.jsx":"2","/home/aureen/the_odin_project/breadit/src/hooks/useSubreadit.js":"3","/home/aureen/the_odin_project/breadit/src/firebase.js":"4","/home/aureen/the_odin_project/breadit/src/contexts/AuthContext.jsx":"5","/home/aureen/the_odin_project/breadit/src/routes/Main.jsx":"6","/home/aureen/the_odin_project/breadit/src/routes/Post.jsx":"7","/home/aureen/the_odin_project/breadit/src/routes/Subreadit.jsx":"8","/home/aureen/the_odin_project/breadit/src/routes/create/CreateSubreadit.jsx":"9","/home/aureen/the_odin_project/breadit/src/routes/create/CreatePost.jsx":"10","/home/aureen/the_odin_project/breadit/src/hooks/usePost.js":"11","/home/aureen/the_odin_project/breadit/src/hooks/useDragAndDrop.js":"12","/home/aureen/the_odin_project/breadit/src/hooks/useStorage.js":"13","/home/aureen/the_odin_project/breadit/src/components/Nav.jsx":"14","/home/aureen/the_odin_project/breadit/src/components/entry/SignIn.jsx":"15","/home/aureen/the_odin_project/breadit/src/components/entry/SignUp.jsx":"16","/home/aureen/the_odin_project/breadit/src/hooks/useSignUp.js":"17","/home/aureen/the_odin_project/breadit/src/hooks/useUser.js":"18","/home/aureen/the_odin_project/breadit/src/hooks/useSignIn.js":"19","/home/aureen/the_odin_project/breadit/src/components/entry/Entry.jsx":"20","/home/aureen/the_odin_project/breadit/src/components/entry/ForgotPassword.jsx":"21","/home/aureen/the_odin_project/breadit/src/hooks/useForgotPassword.js":"22","/home/aureen/the_odin_project/breadit/src/routes/All.jsx":"23","/home/aureen/the_odin_project/breadit/src/components/posts/PostPreview.jsx":"24","/home/aureen/the_odin_project/breadit/src/hooks/useComment.js":"25","/home/aureen/the_odin_project/breadit/src/components/posts/Comment.jsx":"26","/home/aureen/the_odin_project/breadit/src/hooks/useVote.js":"27","/home/aureen/the_odin_project/breadit/src/routes/settings/Settings.jsx":"28","/home/aureen/the_odin_project/breadit/src/hooks/useUserSettings.js":"29","/home/aureen/the_odin_project/breadit/src/components/TextEditor.jsx":"30"},{"size":201,"mtime":1612017068402,"results":"31","hashOfConfig":"32"},{"size":1308,"mtime":1612625160490,"results":"33","hashOfConfig":"32"},{"size":1974,"mtime":1612530900671,"results":"34","hashOfConfig":"32"},{"size":641,"mtime":1612019104468,"results":"35","hashOfConfig":"32"},{"size":1535,"mtime":1612389461790,"results":"36","hashOfConfig":"32"},{"size":111,"mtime":1612113134855,"results":"37","hashOfConfig":"32"},{"size":1965,"mtime":1612627700850,"results":"38","hashOfConfig":"32"},{"size":1345,"mtime":1612533943450,"results":"39","hashOfConfig":"32"},{"size":2775,"mtime":1612445662788,"results":"40","hashOfConfig":"32"},{"size":6220,"mtime":1612624675202,"results":"41","hashOfConfig":"32"},{"size":1089,"mtime":1612286153824,"results":"42","hashOfConfig":"32"},{"size":1299,"mtime":1612108923795,"results":"43","hashOfConfig":"32"},{"size":817,"mtime":1612271690810,"results":"44","hashOfConfig":"32"},{"size":886,"mtime":1612368072308,"results":"45","hashOfConfig":"32"},{"size":2013,"mtime":1612269124487,"results":"46","hashOfConfig":"32"},{"size":2442,"mtime":1612269125187,"results":"47","hashOfConfig":"32"},{"size":2641,"mtime":1612270189398,"results":"48","hashOfConfig":"32"},{"size":1500,"mtime":1612529816454,"results":"49","hashOfConfig":"32"},{"size":1592,"mtime":1612213068669,"results":"50","hashOfConfig":"32"},{"size":1517,"mtime":1612367897024,"results":"51","hashOfConfig":"32"},{"size":1550,"mtime":1612268860943,"results":"52","hashOfConfig":"32"},{"size":1291,"mtime":1612217686725,"results":"53","hashOfConfig":"32"},{"size":847,"mtime":1612531581096,"results":"54","hashOfConfig":"32"},{"size":5019,"mtime":1612634078426,"results":"55","hashOfConfig":"32"},{"size":2200,"mtime":1612304590833,"results":"56","hashOfConfig":"32"},{"size":3476,"mtime":1612627808970,"results":"57","hashOfConfig":"32"},{"size":3189,"mtime":1612446304573,"results":"58","hashOfConfig":"32"},{"size":9414,"mtime":1612389869618,"results":"59","hashOfConfig":"32"},{"size":4757,"mtime":1612389734554,"results":"60","hashOfConfig":"32"},{"size":8277,"mtime":1612632654893,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"yck5r3",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":3,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":7,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":13,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","errorCount":10,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":26,"warningCount":0,"fixableErrorCount":7,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"65"},{"filePath":"126","messages":"127","errorCount":22,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"65"},{"filePath":"129","messages":"130","errorCount":5,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"65"},{"filePath":"135","messages":"136","errorCount":7,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aureen/the_odin_project/breadit/src/index.jsx",["137"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["138","139","140","141","142"],"/home/aureen/the_odin_project/breadit/src/App.jsx",[],"/home/aureen/the_odin_project/breadit/src/hooks/useSubreadit.js",[],"/home/aureen/the_odin_project/breadit/src/firebase.js",[],"/home/aureen/the_odin_project/breadit/src/contexts/AuthContext.jsx",[],"/home/aureen/the_odin_project/breadit/src/routes/Main.jsx",["143","144","145","146"],"import React from 'react'\n\nfunction Main() {\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport default Main\n","/home/aureen/the_odin_project/breadit/src/routes/Post.jsx",["147","148","149","150"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport usePost from \"../hooks/usePost\";\nimport useComment from \"../hooks/useComment\";\nimport PostPreview from \"../components/posts/PostPreview\";\nimport TextEditor from \"../components/TextEditor\";\nimport Comment from \"../components/posts/Comment\";\n\nfunction Post({ match }) {\n  const [post, setPost] = useState();\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const { getPost } = usePost();\n  const { createComment, getComments } = useComment();\n  const { currentUser } = useAuth();\n  const { postId } = match.params;\n\n  // Loads the post itself\n  useEffect(() => {\n    (async () => {\n      const post = await getPost(postId);\n      setPost(post.data());\n      console.log(post.data().subreadit);\n    })();\n  }, []);\n\n  // Loads the comments\n  useEffect(() => {\n    (async () => {\n      const comments = await getComments(postId);\n      setComments(comments);\n    })();\n  }, []);\n\n  return (\n    <div>\n      {post && (\n        <PostPreview\n          subreaditId={post.subreadit}\n          author={post.author.name}\n          title={post.title}\n          date={post.date}\n          content={post.content}\n          id={post.id}\n        />\n      )}\n\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          createComment(postId, currentUser, comment);\n        }}\n      >\n        <TextEditor type=\"comment\" sendContent={setComment} />\n        <button type=\"submit\">Comment</button>\n      </form>\n\n      <div>\n        {comments.map((commentId) => {\n          return <Comment key={commentId} commentId={commentId} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nPost.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      postId: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Post;\n","/home/aureen/the_odin_project/breadit/src/routes/Subreadit.jsx",["151","152","153","154","155","156","157"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport usePost from \"../hooks/usePost\";\nimport PropTypes from \"prop-types\";\nimport useSubreadit from \"../hooks/useSubreadit\";\nimport PostPreview from \"../components/posts/PostPreview\";\n\nfunction Subreadit({ match }) {\n  const [subreadit, setSubreadit] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [limit, setLimit] = useState(20);\n  const { getSubreaditByName, getSubreaditPosts } = useSubreadit();\n  const subreaditName = match.params.subreadit;\n\n  useEffect(() => {\n    (async () => {\n      const subreadit = await getSubreaditByName(subreaditName);\n      const posts = await getSubreaditPosts(subreadit.id, limit);\n      setSubreadit(subreadit);\n      setPosts(posts);\n    })();\n  }, []);\n\n  return (\n    <div>\n      {posts.map((post) => {\n        return (\n          <PostPreview\n            key={post.id}\n            subreaditId={post.subreadit}\n            author={post.author.name}\n            date={post.date}\n            title={post.title}\n            content={post.content}\n            id={post.id}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nSubreadit.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      subreadit: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Subreadit;\n","/home/aureen/the_odin_project/breadit/src/routes/create/CreateSubreadit.jsx",["158"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport styled from \"styled-components\";\nimport useSubreadit from \"../../hooks/useSubreadit\";\n\nconst Form = styled.form``;\n\nconst Field = styled.div``;\n\nconst Label = styled.label``;\n\nconst Input = styled.input``;\n\nconst Textarea = styled.textarea``;\n\nconst Message = styled.div``;\n\nconst Error = styled(Message)``;\n\nconst Button = styled.button``;\n\nfunction CreateSubreadit() {\n  const [name, setName] = useState(\"\");\n  const [nameError, setNameError] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [descriptionError, setDescriptionError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const { currentUser } = useAuth();\n  const { createSubreadit, isNameAvailable } = useSubreadit();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setNameError(\"\");\n    setDescriptionError(\"\");\n    setMessage(\"\");\n\n    // Form verification\n    if (!name) {\n      setNameError(\"A Community Name is required.\");\n      return;\n    }\n\n    if (!isNameAvailable(name)) {\n      setNameError(\"This Community Name is already taken.\");\n      return;\n    }\n\n    if (!description) {\n      setDescriptionError(\"A Community Description is required.\");\n      return;\n    }\n\n    try {\n      createSubreadit(name, description, currentUser.uid);\n      setMessage(\n        \"Your Subreadit has been created. You will be redirected shortly.\"\n      );\n      setTimeout(() => history.push(`/b/${name}`), 1000);\n    } catch (err) {\n      setMessage(\"Sorry, something went wrong. Please try again later.\");\n    }\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Field>\n          <Label htmlFor=\"name\">Name</Label>\n          <Message>\n            Community names including capitalization cannot be changed.\n          </Message>\n\n          <Input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            id=\"name\"\n            name=\"name\"\n          />\n          <Error>{nameError}</Error>\n        </Field>\n\n        <Field>\n          <Label htmlFor=\"description\">Description</Label>\n          <Message>\n            This is how new members come to understand your community.\n          </Message>\n\n          <Textarea\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            id=\"description\"\n            name=\"description\"\n          />\n          <Error>{descriptionError}</Error>\n        </Field>\n\n        <Button type=\"submit\">Create Community</Button>\n        <Message>{message}</Message>\n      </Form>\n    </div>\n  );\n}\n\nexport default CreateSubreadit;\n","/home/aureen/the_odin_project/breadit/src/routes/create/CreatePost.jsx",["159","160","161","162","163","164","165","166","167","168","169","170","171"],"/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport usePost from \"../../hooks/usePost\";\nimport useSubreadit from \"../../hooks/useSubreadit\";\nimport useDragAndDrop from \"../../hooks/useDragAndDrop\";\nimport useStorage from \"../../hooks/useStorage\";\nimport TextEditor from \"../../components/TextEditor\";\n\nconst Form = styled.form``;\n\nconst Field = styled.div``;\n\nconst Label = styled.label``;\n\nconst Input = styled.input``;\n\nconst DropArea = styled.div`\n  max-width: 600px;\n  min-height: 200px;\n  border: 1px solid ${(props) => (props.areFilesDragged ? \"red\" : \"blue\")};\n`;\n\nconst Preview = styled.div`\n  max-width: 100%;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 1rem;\n`;\n\nconst Image = styled.img`\n  width: 7.5rem;\n  height: 7.5rem;\n`;\n\nconst Textarea = styled.textarea``;\n\nconst Buttons = styled.div`\n  margin-top: 4rem;\n`;\n\nconst Button = styled.button``;\n\nfunction CreatePost() {\n  const [type, setType] = useState(\"post\");\n  const [title, setTitle] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  const [images, setImages] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [linkError, setLinkError] = useState(\"\");\n  const [spoiler, setSpoiler] = useState(false);\n  const [subreadits, setSubreadits] = useState([]);\n  const [subreadit, setSubreadit] = useState();\n\n  const { currentUser } = useAuth();\n  const { getSubreadits } = useSubreadit();\n  const { createPost } = usePost();\n  const { uploadImage } = useStorage();\n  const history = useHistory();\n  const {\n    inDragZone,\n    files,\n    preview,\n    handleDragEnter,\n    handleDragLeave,\n    handleDragOver,\n    handleDrop,\n  } = useDragAndDrop();\n\n  // Get list of subreadits\n  useEffect(() => {\n    (async () => {\n      const subreaditsList = await getSubreadits();\n      setSubreadits(subreaditsList);\n    })();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let content;\n    switch (type) {\n      case \"image\": {\n        // If the user wants to create an image post:\n        // Upload the images to the storage and turns them into links.\n        const imagesUrls = [];\n        await Promise.all(\n          files.map(async (file) => {\n            const imageUrl = await uploadImage(file);\n            imagesUrls.push(imageUrl);\n          })\n        );\n        content = imagesUrls;\n        break;\n      }\n\n      case \"link\":\n        // Checks if the link is valid.\n        if (\n          !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(\n            link\n          )\n        ) {\n          setLinkError(\"This link doesn't seem to be valid.\");\n          return;\n        }\n        content = link;\n\n        break;\n\n      case \"post\":\n        content = post;\n        break;\n      default:\n    }\n    const postId = await createPost(\n      currentUser,\n      subreadit.id,\n      title,\n      type,\n      content,\n      spoiler\n    );\n    history.push(`/${postId}`);\n  };\n\n  return (\n    <>\n      <div>{subreadit ? subreadit.name : \"Choose a community\"}</div>\n      <ul>\n        {subreadits.map((subreadit) => {\n          return (\n            <li key={subreadit.id} onClick={() => setSubreadit(subreadit)}>\n              {subreadit.name}\n            </li>\n          );\n        })}\n      </ul>\n\n      <div>\n        <button type=\"button\" onClick={() => setType(\"post\")}>\n          Post\n        </button>\n        <button type=\"button\" onClick={() => setType(\"image\")}>\n          Image\n        </button>\n        <button type=\"button\" onClick={() => setType(\"link\")}>\n          Link\n        </button>\n      </div>\n      <Form onSubmit={handleSubmit}>\n        <Field>\n          <div>\n            <Label htmlFor=\"title\">\n              <Input\n                type=\"text\"\n                value={title}\n                id=\"title\"\n                name=\"title\"\n                onChange={(e) => setTitle(e.target.value)}\n                placeholder=\"Title\"\n              />\n            </Label>\n            <div>{title.length} / 300</div>\n          </div>\n        </Field>\n\n        {type === \"post\" && (\n          <Field>\n            <Label htmlFor=\"text\">\n              <div>\n                <TextEditor type=\"post\" sendContent={setPost} />\n              </div>\n            </Label>\n          </Field>\n        )}\n\n        {type === \"image\" && (\n          <Field>\n            <DropArea\n              onDragOver={handleDragOver}\n              onDragEnter={handleDragEnter}\n              onDragLeave={handleDragLeave}\n              onDrop={handleDrop}\n              areFilesDragged={inDragZone}\n            >\n              {files ? (\n                <Preview>\n                  {preview.map((image, index) => {\n                    return (\n                      <Image\n                        key={`preview_${index}`}\n                        src={image}\n                        alt=\"preview\"\n                      />\n                    );\n                  })}\n                </Preview>\n              ) : (\n                \"Drag and drop or Upload\"\n              )}\n            </DropArea>\n            <useDragAndDrop />\n          </Field>\n        )}\n\n        {type === \"link\" && (\n          <Field>\n            <Label htmlFor=\"link\">\n              <Textarea\n                id=\"link\"\n                name=\"link\"\n                value={link}\n                onChange={(e) => setLink(e.target.value)}\n              />\n            </Label>\n          </Field>\n        )}\n\n        <Buttons>\n          <Button type=\"button\" onClick={() => setSpoiler(!spoiler)}>\n            Spoiler\n          </Button>\n          <Button\n            type=\"submit\"\n            disabled={\n              (type === \"post\" && (!title || !post)) ||\n              (type === \"link\" && (!title || !link)) ||\n              (type === \"media\" && (!title || !images))\n            }\n          >\n            Post\n          </Button>\n        </Buttons>\n      </Form>\n    </>\n  );\n}\n\nexport default CreatePost;\n","/home/aureen/the_odin_project/breadit/src/hooks/usePost.js",[],"/home/aureen/the_odin_project/breadit/src/hooks/useDragAndDrop.js",[],"/home/aureen/the_odin_project/breadit/src/hooks/useStorage.js",[],"/home/aureen/the_odin_project/breadit/src/components/Nav.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/entry/SignIn.jsx",["172"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport useSignIn from \"../../hooks/useSignIn\";\n\nconst Field = styled.div``;\n\nconst Label = styled.label`\n  position: absolute;\n  top: -9999px;\n`;\n\nconst Input = styled.input``;\n\nconst Message = styled.div``;\n\nconst SmallFont = styled(Message)``;\n\nconst Button = styled.button``;\n\nconst ChangeTab = styled.button``;\n\nfunction SignIn({ changeTab }) {\n  const {\n    email,\n    setEmail,\n    emailError,\n    password,\n    setPassword,\n    passwordError,\n    loading,\n    message,\n    handleSignIn,\n  } = useSignIn();\n\n  return (\n    <>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSignIn();\n        }}\n      >\n        <Field>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <Message>{emailError}</Message>\n        </Field>\n\n        <Field>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Message>{passwordError}</Message>\n        </Field>\n\n        <Button type=\"submit\">Log In</Button>\n        <Message>{message}</Message>\n      </form>\n\n      <SmallFont>\n        Forgot your\n        <ChangeTab type=\"button\" onClick={() => changeTab(\"forgotPassword\")}>\n          password\n        </ChangeTab>\n        ?\n      </SmallFont>\n\n      <Message>\n        New to breadit ?\n        <ChangeTab type=\"button\" onClick={() => changeTab(\"signUp\")}>\n          Sign up\n        </ChangeTab>\n      </Message>\n    </>\n  );\n}\n\nSignIn.propTypes = {\n  changeTab: PropTypes.func,\n};\n\nSignIn.defaultProps = {\n  changeTab: () => {},\n};\n\nexport default SignIn;\n","/home/aureen/the_odin_project/breadit/src/components/entry/SignUp.jsx",["173"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport useSignUp from \"../../hooks/useSignUp\";\n\nconst Field = styled.div``;\n\nconst Label = styled.label`\n  position: absolute;\n  top: -9999px;\n`;\n\nconst Input = styled.input``;\n\nconst Message = styled.div``;\n\nconst Button = styled.button``;\n\nconst ChangeTab = styled.button``;\n\nfunction SignUp({ changeTab }) {\n  const {\n    email,\n    setEmail,\n    emailError,\n    username,\n    setUsername,\n    usernameError,\n    password,\n    setPassword,\n    passwordError,\n    loading,\n    checkUsername,\n    checkEmail,\n    checkPassword,\n    handleSignUp,\n  } = useSignUp();\n\n  return (\n    <>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSignUp(username, email, password);\n        }}\n      >\n        <Field>\n          <Label htmlFor=\"username\">Username</Label>\n          <Input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            onBlur={(e) => checkUsername(e.target.value)}\n          />\n          <Message>{usernameError}</Message>\n        </Field>\n\n        <Field>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            onBlur={(e) => checkEmail(e.target.value)}\n          />\n          <Message>{emailError}</Message>\n        </Field>\n\n        <Field>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            onBlur={(e) => checkPassword(e.target.value)}\n          />\n          <Message>{passwordError}</Message>\n        </Field>\n\n        <Button type=\"submit\">Sign Up</Button>\n      </form>\n\n      <Message>\n        Already a breaditor ?\n        <ChangeTab type=\"button\" onClick={() => changeTab(\"signIn\")}>\n          Log In\n        </ChangeTab>\n      </Message>\n    </>\n  );\n}\n\nSignUp.propTypes = {\n  changeTab: PropTypes.func,\n};\n\nSignUp.defaultProps = {\n  changeTab: () => {},\n};\n\nexport default SignUp;\n","/home/aureen/the_odin_project/breadit/src/hooks/useSignUp.js",["174","175","176","177","178","179","180","181","182","183"],"import { useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useUser from \"./useUser\";\n\nfunction useSignUp() {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { signUp, updateUsername, updatePicture } = useAuth();\n  const { createUser, isUsernameAvailable } = useUser();\n\n  const checkUsername = async (username) => {\n    if (!username) {\n      setUsernameError(\"This field is required.\");\n      return false;\n    }\n\n    if (!(await isUsernameAvailable(username))) {\n      setUsernameError(\"That username is already taken.\");\n      return false;\n    }\n    setUsernameError(\"\");\n    return true;\n  };\n\n  const checkEmail = async (email) => {\n    if (!email) {\n      setEmailError(\"This field is required\");\n      return false;\n    }\n  };\n\n  const checkPassword = (password) => {\n    if (!password) {\n      setPasswordError(\"This field is required\");\n      return false;\n    }\n\n    if (password.length < 6) {\n      setPasswordError(\"The password must be 6 characters long or more\");\n      return false;\n    }\n    setPasswordError(\"\");\n    return true;\n  };\n\n  const validateForm = (username, email, password) => {\n    return (\n      checkUsername(username) && checkEmail(email) && checkPassword(password)\n    );\n  };\n\n  const handleSignUp = async (username, email, password) => {\n    if (!validateForm(username, email, password)) return;\n    setLoading(true);\n    try {\n      const user = await signUp(email, password);\n      updateUsername(user.user, username);\n      updatePicture(user.user, \"defaultpic\");\n      if (user) await createUser(user.user.uid, username);\n    } catch (err) {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n          setEmailError(\"Fix your email to continue\");\n          break;\n        case \"email-already-in-use\":\n          setEmailError(\"This email already belongs to an user\");\n          break;\n        case \"weak-password\":\n          setPasswordError(\"The password must be 6 characters long or more\");\n          break;\n        default:\n      }\n    }\n    setLoading(false);\n  };\n\n  return {\n    email,\n    setEmail,\n    username,\n    setUsername,\n    password,\n    setPassword,\n    emailError,\n    passwordError,\n    usernameError,\n    loading,\n    checkUsername,\n    checkEmail,\n    checkPassword,\n    handleSignUp,\n  };\n}\n\nexport default useSignUp;\n","/home/aureen/the_odin_project/breadit/src/hooks/useUser.js",[],"/home/aureen/the_odin_project/breadit/src/hooks/useSignIn.js",[],"/home/aureen/the_odin_project/breadit/src/components/entry/Entry.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/entry/ForgotPassword.jsx",[],"/home/aureen/the_odin_project/breadit/src/hooks/useForgotPassword.js",[],"/home/aureen/the_odin_project/breadit/src/routes/All.jsx",["184","185","186"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport usePost from \"../hooks/usePost\";\nimport PostPreview from \"../components/posts/PostPreview\";\n\nfunction All() {\n  const [posts, setPosts] = useState([]);\n  const [limit, setLimit] = useState(20);\n  const { getPosts } = usePost();\n\n  useEffect(() => {\n    (async () => {\n      const posts = await getPosts(limit);\n      setPosts(posts);\n    })();\n  }, [limit]);\n\n  return (\n    <div>\n      {posts.map((post) => {\n        return (\n          <PostPreview\n            key={post.id}\n            subreaditId={post.subreadit}\n            author={post.author.name}\n            date={post.date}\n            title={post.title}\n            content={post.content}\n            id={post.id}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default All;\n","/home/aureen/the_odin_project/breadit/src/components/posts/PostPreview.jsx",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"/home/aureen/the_odin_project/breadit/src/hooks/useComment.js",[],"/home/aureen/the_odin_project/breadit/src/components/posts/Comment.jsx",["213","214","215"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { convertFromRaw } from \"draft-js\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport useComment from \"../../hooks/useComment\";\nimport useVote from \"../../hooks/useVote\";\nimport Entry from \"../entry/Entry\";\nimport TextEditor from \"../TextEditor\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { ReactComponent as IconUp } from \"../../assets/icons/icon-upvote.svg\";\nimport { ReactComponent as IconDown } from \"../../assets/icons/icon-downvote.svg\";\n\nconst Container = styled.div`\n  & > * {\n    margin-left: 1rem;\n  }\n`;\n\nconst Vote = styled.button`\n  color: ${(props) => (props.active ? \"red\" : \"black\")};\n`;\n\nfunction Comment({ commentId }) {\n  const [comment, setComment] = useState();\n  const [reply, setReply] = useState(\"\");\n  const [isReplying, setIsReplying] = useState(false);\n  const [isEntryOpen, setIsEntryOpen] = useState(false);\n  const { currentUser } = useAuth();\n  const { getComment, createComment } = useComment();\n  const { vote, votes, handleUpvote, handleDownvote } = useVote(\n    \"comments\",\n    commentId,\n    currentUser && currentUser.uid\n  );\n\n  useEffect(() => {\n    (async () => {\n      const comment = await getComment(commentId);\n      setComment(comment.data());\n    })();\n  }, []);\n\n  return (\n    <>\n      <Container>\n        {comment && (\n          <>\n            <div>\n              <Vote\n                type=\"button\"\n                active={vote === 1}\n                onClick={() => {\n                  // eslint-disable-next-line no-unused-expressions\n                  currentUser\n                    ? handleUpvote(\"posts\", commentId, currentUser.uid, vote)\n                    : setIsEntryOpen(true);\n                }}\n              >\n                <IconUp />\n              </Vote>\n              <span>{votes}</span>\n              <Vote\n                type=\"button\"\n                active={vote === -1}\n                onClick={() => {\n                  // eslint-disable-next-line no-unused-expressions\n                  currentUser\n                    ? handleDownvote(\"posts\", commentId, currentUser.uid, vote)\n                    : setIsEntryOpen(true);\n                }}\n              >\n                <IconDown />\n              </Vote>\n            </div>\n            <div>\n              {comment.author.name}\n{\" \"}\n              {ReactHtmlParser(\n                stateToHTML(convertFromRaw(JSON.parse(comment.text)))\n              )}\n            </div>\n            <button type=\"button\" onClick={() => setIsReplying(!isReplying)}>\n              Reply\n            </button>\n            {isReplying && (\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  createComment(comment.id, currentUser, reply, commentId);\n                }}\n              >\n                <TextEditor type=\"comment\" sendContent={setReply} />\n                <button type=\"submit\">Comment</button>\n              </form>\n            )}\n            {comment.children.map((child) => {\n              return <Comment key={child} commentId={child} />;\n            })}\n          </>\n        )}\n      </Container>\n      {isEntryOpen && <Entry close={() => setIsEntryOpen(false)} />}\n    </>\n  );\n}\n\nComment.propTypes = {\n  commentId: PropTypes.string.isRequired,\n};\n\nexport default Comment;\n","/home/aureen/the_odin_project/breadit/src/hooks/useVote.js",["216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237"],"import { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { firestore } from \"../firebase\";\n\nfunction useVote(type, id, userId) {\n  const [votes, setVotes] = useState(0); // Number of votes a post / comment has.\n  const [vote, setVote] = useState(); // Current user's vote\n\n  // Type is either: post / comment\n  // id is the postId / commentId.\n  const upvote = (type, id, userId) => {\n    return firestore\n      .collection(type)\n      .doc(id)\n      .update({\n        [`votes.${userId}`]: 1,\n      });\n  };\n\n  const downvote = (type, id, userId) => {\n    return firestore\n      .collection(type)\n      .doc(id)\n      .update({\n        [`votes.${userId}`]: -1,\n      });\n  };\n\n  const removeVote = (type, id, userId) => {\n    return firestore\n      .collection(type)\n      .doc(id)\n      .update({\n        [`votes.${userId}`]: firebase.firestore.FieldValue.delete(),\n      });\n  };\n\n  const getVote = async (type, id, userId) => {\n    const doc = await firestore.collection(type).doc(id).get();\n    return doc.data().votes[userId];\n  };\n\n  const countVotes = async (type, id) => {\n    const doc = await firestore.collection(type).doc(id).get();\n    if (!doc) return 0;\n    return Object.values(doc.data().votes).reduce(\n      (sum, current) => sum + current,\n      0\n    );\n  };\n\n  const handleUpvote = async (type, id, userId, vote) => {\n    if (!userId) return;\n    switch (vote) {\n      // User already upvoted the post:\n      // - Remove the upvote\n      case 1:\n        removeVote(type, id, userId);\n        setVote(null);\n        setVotes((prev) => prev - 1);\n        break;\n\n      // User downvoted the post:\n      // - Replace the downvote (-1) by an upvote (+1)\n      // User hasn't voted yet\n      // - Simply adds an upvote.\n      case -1:\n        upvote(type, id, userId);\n        setVote(1);\n        setVotes((prev) => prev + 2);\n        break;\n      default:\n        upvote(type, id, userId);\n        setVote(1);\n        setVotes((prev) => prev + 1);\n    }\n  };\n\n  const handleDownvote = async (type, id, userId, vote) => {\n    if (!userId) return;\n    switch (vote) {\n      // User already downvoted the post:\n      // - Remove the downvote\n      case -1:\n        removeVote(type, id, userId);\n        setVote(null);\n        setVotes((prev) => prev + 1);\n        break;\n\n      // User upvoted the post:\n      // - Replace the upvote (+1) by a downvote (-1)\n      // User hasn't voted yet:\n      // - Simply adds an upvote.\n      case 1:\n        downvote(type, id, userId);\n        setVote(-1);\n        setVotes((prev) => prev - 2);\n        break;\n      default:\n        downvote(type, id, userId);\n        setVote(-1);\n        setVotes((prev) => prev - 1);\n    }\n  };\n\n  // Get current number of votes\n  useEffect(() => {\n    (async () => {\n      const currentVotes = await countVotes(type, id);\n      setVotes(currentVotes);\n    })();\n  }, []);\n\n  // Get the user's vote\n  useEffect(() => {\n    if (!userId) return;\n    (async () => {\n      const currentVote = await getVote(type, id, userId);\n      setVote(currentVote);\n    })();\n  }, []);\n\n  return {\n    vote,\n    votes,\n    handleUpvote,\n    handleDownvote,\n  };\n}\n\nexport default useVote;\n","/home/aureen/the_odin_project/breadit/src/routes/settings/Settings.jsx",["238","239","240","241","242"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useUserSettings from \"../../hooks/useUserSettings\";\n\nconst Container = styled.div``;\n\nconst AvatarInput = styled.input`\n  display: none;\n`;\n\nconst Avatar = styled.img`\n  width: 5rem;\n  height: 5rem;\n  border-radius: 100%;\n`;\n\nconst SettingsModal = styled(Modal)``;\n\nconst Button = styled.button``;\n\nconst ButtonFilled = styled(Button)``;\n\nconst Heading = styled.h1``;\n\nconst Subheading = styled.h2``;\n\nconst SettingType = styled.h3``;\n\nconst Setting = styled.div``;\n\nconst Message = styled.div``;\n\nconst Field = styled.div``;\n\nconst Input = styled.input``;\n\nconst Textarea = styled.textarea``;\n\nconst Label = styled.label``;\n\nfunction Settings() {\n  const { currentUser } = useAuth();\n  const [isEmailModalOpen, setIsEmailModalOpen] = useState(false);\n  const [isPasswordModalOpen, setIsPasswordModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const {\n    email,\n    setEmail,\n    emailError,\n    currentPassword,\n    setCurrentPassword,\n    currentPasswordError,\n    newPassword,\n    setNewPassword,\n    newPasswordError,\n    newPasswordConfirmation,\n    setNewPasswordConfirmation,\n    newPasswordConfirmationError,\n    message,\n    about,\n    setAbout,\n    aboutMessage,\n    reset,\n    avatar,\n    handleUpdateEmail,\n    handleUpdatePassword,\n    handleUpdateAbout,\n    handleUpdateAvatar,\n    handleDeleteAccount,\n  } = useUserSettings();\n  useUserSettings();\n\n  return (\n    <>\n      <Container>\n        <Heading>User Settings</Heading>\n\n        <div>\n          <div>\n            <AvatarInput\n              type=\"file\"\n              id=\"avatar\"\n              name=\"avatar\"\n              accept=\"image/png, image/jpeg, image/jpg, image/bmp\"\n              onChange={(e) => {\n                if (e.target.files.length > 0)\n                  handleUpdateAvatar(e.target.files[0]);\n              }}\n            />\n            <label htmlFor=\"avatar\">\n              <Avatar src={avatar} alt=\"Current avatar\" />\n            </label>\n          </div>\n          <Subheading>{currentUser.displayName}</Subheading>\n        </div>\n\n        <Setting>\n          <SettingType>Username</SettingType>\n          <Message>{currentUser.displayName}</Message>\n        </Setting>\n\n        <Setting>\n          <SettingType>Email address</SettingType>\n          <Message>{currentUser.email}</Message>\n          <Button\n            type=\"button\"\n            onClick={() => {\n              setIsEmailModalOpen(true);\n              reset();\n            }}\n          >\n            Change\n          </Button>\n        </Setting>\n\n        <Setting>\n          <SettingType>Change Password</SettingType>\n          <Message>Password must be at least 6 characters long</Message>\n          <Button\n            type=\"button\"\n            onClick={() => {\n              setIsPasswordModalOpen(true);\n              reset();\n            }}\n          >\n            Change\n          </Button>\n        </Setting>\n\n        <Setting>\n          <div>\n            <SettingType>About</SettingType>\n            (optional)\n          </div>\n          <Message>\n            A brief description of yourself shown on your profile.\n          </Message>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              handleUpdateAbout();\n            }}\n          >\n            <Label htmlFor=\"about\" />\n            <Textarea\n              id=\"about\"\n              name=\"about\"\n              value={about}\n              onChange={(e) => setAbout(e.target.value)}\n            />\n            <Message>{aboutMessage}</Message>\n            <ButtonFilled type=\"submit\">Save</ButtonFilled>\n          </form>\n        </Setting>\n\n        <Setting>\n          <SettingType>Account Removal</SettingType>\n          <Message>\n            If you delete your account, you will not be able to recover it.\n          </Message>\n          <Button type=\"button\" onClick={() => setIsDeleteModalOpen(true)}>\n            Delete\n          </Button>\n        </Setting>\n      </Container>\n\n      {/* Email change modal */}\n      <SettingsModal\n        isOpen={isEmailModalOpen}\n        onRequestClose={() => setIsEmailModalOpen(false)}\n      >\n        <Subheading>Update your email</Subheading>\n        <p>\n          Update your email below by entering your new email address and current\n          password.\n        </p>\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            const wasChanged = await handleUpdateEmail();\n            if (wasChanged) {\n              {\n                /* setTimeout is used so that the user can read a confirmation message before the modal closes */\n              }\n              setTimeout(() => {\n                setIsEmailModalOpen(false);\n                reset();\n              }, 1000);\n            }\n          }}\n        >\n          <Field>\n            <Label htmlFor=\"email_password\">Current Password</Label>\n            <Input\n              type=\"password\"\n              value={currentPassword}\n              onChange={(e) => setCurrentPassword(e.target.value)}\n              id=\"email_password\"\n              name=\"email_password\"\n            />\n            <Message>{currentPasswordError}</Message>\n          </Field>\n\n          <Field>\n            <Label htmlFor=\"email\">New Email Address</Label>\n            <Input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              id=\"email\"\n              name=\"email\"\n            />\n            <Message>{emailError}</Message>\n          </Field>\n\n          <ButtonFilled type=\"submit\" disabled={!email || !currentPassword}>\n            Save\n          </ButtonFilled>\n          <Message>{message}</Message>\n        </form>\n      </SettingsModal>\n\n      {/* Password change modal */}\n      <SettingsModal\n        isOpen={isPasswordModalOpen}\n        onRequestClose={() => setIsPasswordModalOpen(false)}\n      >\n        <Subheading>Update your password</Subheading>\n        <p>\n          Update your password below by entering your current and new passwords.\n        </p>\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            const wasChanged = await handleUpdatePassword();\n            if (wasChanged) {\n              {\n                /* setTimeout is used so that the user can read a confirmation message before the modal closes */\n              }\n              setTimeout(() => {\n                setIsPasswordModalOpen(false);\n                reset();\n              }, 1000);\n            }\n          }}\n        >\n          <Field>\n            <Label htmlFor=\"password_password\">Current Password</Label>\n            <Input\n              type=\"password\"\n              value={currentPassword}\n              onChange={(e) => setCurrentPassword(e.target.value)}\n              id=\"email_password\"\n              name=\"email_password\"\n            />\n            <Message>{currentPasswordError}</Message>\n          </Field>\n\n          <Field>\n            <Label htmlFor=\"new_password\">New Password</Label>\n            <Input\n              type=\"password\"\n              value={newPassword}\n              onChange={(e) => setNewPassword(e.target.value)}\n              id=\"new_password\"\n              name=\"new_password\"\n            />\n            <Message>{newPasswordError}</Message>\n          </Field>\n\n          <Field>\n            <Label htmlFor=\"new_password_confirmation\">\n              Confirm New Password\n            </Label>\n            <Input\n              type=\"password\"\n              value={newPasswordConfirmation}\n              onChange={(e) => setNewPasswordConfirmation(e.target.value)}\n              id=\"new_password_confirmation\"\n              name=\"new_password_confirmation\"\n            />\n            <Message>{newPasswordConfirmationError}</Message>\n          </Field>\n\n          <ButtonFilled\n            type=\"submit\"\n            disabled={\n              !newPassword || !currentPassword || !newPasswordConfirmation\n            }\n          >\n            Save\n          </ButtonFilled>\n          <Message>{message}</Message>\n        </form>\n      </SettingsModal>\n\n      {/* Delete account modal */}\n      <SettingsModal\n        isOpen={isDeleteModalOpen}\n        onRequestClose={() => setIsDeleteModalOpen(false)}\n      >\n        <Subheading>Delete your account</Subheading>\n        <p>\n          Are you sure you would like to delete your account? <br />\n          You will be unable to recover it.\n        </p>\n\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleDeleteAccount();\n          }}\n        >\n          <Field>\n            <Label htmlFor=\"delete_password\">Current Password</Label>\n            <Input\n              type=\"password\"\n              value={currentPassword}\n              onChange={(e) => setCurrentPassword(e.target.value)}\n              id=\"delete_password\"\n              name=\"delete_password\"\n            />\n            <Message>{currentPasswordError}</Message>\n          </Field>\n\n          <div>\n            <Button type=\"button\">Cancel</Button>\n            <ButtonFilled type=\"submit\">Delete</ButtonFilled>\n          </div>\n        </form>\n      </SettingsModal>\n    </>\n  );\n}\n\nexport default Settings;\n","/home/aureen/the_odin_project/breadit/src/hooks/useUserSettings.js",["243","244","245","246"],"import { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { firestore } from \"../firebase\";\nimport useStorage from \"./useStorage\";\n\nfunction useUserSettings() {\n  const { currentUser, updatePicture } = useAuth();\n  const { uploadImage } = useStorage();\n\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [currentPasswordError, setCurrentPasswordError] = useState(\"\");\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [newPasswordError, setNewPasswordError] = useState(\"\");\n\n  const [newPasswordConfirmation, setNewPasswordConfirmation] = useState(\"\");\n  const [\n    newPasswordConfirmationError,\n    setNewPasswordConfirmationError,\n  ] = useState(\"\");\n\n  const [about, setAbout] = useState(\"\");\n  const [aboutMessage, setAboutMessage] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n\n  useEffect(() => {\n    if (!currentUser) return;\n    setAvatar(currentUser.photoURL);\n  }, [currentUser]);\n\n  // Check if the user entered the right password before updating his data.\n  const checkPassword = async () => {\n    const credential = await firebase.auth.EmailAuthProvider.credential(\n      currentUser.email,\n      currentPassword\n    );\n    try {\n      await currentUser.reauthenticateWithCredential(credential);\n      return true;\n    } catch (err) {\n      setCurrentPasswordError(\n        \"Enter your password properly to save the changes.\"\n      );\n    }\n    return false;\n  };\n\n  // When the user changes password, check if they entered the new password properly twice.\n  const checkNewPasswords = () => {\n    if (newPassword !== newPasswordConfirmation) {\n      setNewPasswordError(\n        \"New password and password confirmation do not match.\"\n      );\n      setNewPasswordConfirmationError(\n        \"New password and password confirmation do not match.\"\n      );\n      return false;\n    }\n    return true;\n  };\n\n  const handleUpdateEmail = async () => {\n    if (!(await checkPassword())) return;\n    try {\n      await currentUser.updateEmail(email);\n      setEmail(email);\n      setMessage(\"Your email address was successfully updated.\");\n      return true;\n    } catch (err) {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n          setEmailError(\"Not a well formed email address.\");\n          break;\n        case \"auth/email-already-in-use\":\n          setEmailError(\"This email is already registered.\");\n          break;\n        default:\n      }\n      setMessage(\"Sorry, we were unable to update your information.\");\n    }\n    return false;\n  };\n\n  const handleUpdatePassword = async () => {\n    if (!checkNewPasswords()) return;\n    if (!(await checkPassword())) return;\n    try {\n      await currentUser.updatePassword(newPassword);\n      setMessage(\"Your password was successfully updated.\");\n      return true;\n    } catch (err) {\n      switch (err.code) {\n        case \"weak-password\":\n          setNewPasswordError(\"Must be 6 or more in length.\");\n          break;\n        default:\n      }\n      setMessage(\"Sorry, we were unable to update your information.\");\n      return false;\n    }\n  };\n\n  const handleDeleteAccount = async () => {\n    if (!(await checkPassword())) return;\n    await currentUser.delete();\n  };\n\n  const handleUpdateAbout = async () => {\n    setAboutMessage(\"\");\n    try {\n      await firestore\n        .collection(\"users\")\n        .doc(currentUser.uid)\n        .update({ about });\n      setAboutMessage(\"Your description was successfully updated.\");\n    } catch (err) {\n      setAboutMessage(\"Sorry, we were unable to update your description.\");\n    }\n  };\n\n  const handleUpdateAvatar = async (image) => {\n    const imageUrl = await uploadImage(image);\n    updatePicture(currentUser, imageUrl);\n    setAvatar(imageUrl);\n  };\n\n  const reset = () => {\n    setEmail(\"\");\n    setCurrentPassword(\"\");\n    setNewPassword(\"\");\n    setNewPasswordConfirmation(\"\");\n    setEmailError(\"\");\n    setCurrentPasswordError(\"\");\n    setNewPasswordError(\"\");\n    setNewPasswordConfirmationError(\"\");\n    setMessage(\"\");\n  };\n\n  return {\n    email,\n    setEmail,\n    emailError,\n    currentPassword,\n    setCurrentPassword,\n    currentPasswordError,\n    newPassword,\n    setNewPassword,\n    newPasswordError,\n    newPasswordConfirmation,\n    setNewPasswordConfirmation,\n    newPasswordConfirmationError,\n    message,\n    setMessage,\n    about,\n    setAbout,\n    aboutMessage,\n    avatar,\n    reset,\n    handleUpdateAbout,\n    handleUpdateEmail,\n    handleUpdatePassword,\n    handleUpdateAvatar,\n    handleDeleteAccount,\n  };\n}\n\nexport default useUserSettings;\n","/home/aureen/the_odin_project/breadit/src/components/TextEditor.jsx",["247","248","249","250","251","252","253"],{"ruleId":"254","severity":2,"message":"255","line":3,"column":17,"nodeType":"256","endLine":3,"endColumn":28},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","severity":2,"message":"268","line":1,"column":19,"nodeType":null,"endLine":1,"endColumn":26,"fix":"269"},{"ruleId":"267","severity":2,"message":"270","line":4,"column":10,"nodeType":null,"endLine":8,"endColumn":4,"fix":"271"},{"ruleId":"272","severity":2,"message":"273","line":5,"column":5,"nodeType":"274","endLine":5,"endColumn":10,"fix":"275"},{"ruleId":"267","severity":2,"message":"276","line":11,"column":20,"nodeType":null,"endLine":11,"endColumn":20,"fix":"277"},{"ruleId":"278","severity":2,"message":"279","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":14},{"ruleId":"282","severity":2,"message":"283","line":23,"column":13,"nodeType":"280","messageId":"284","endLine":23,"endColumn":17},{"ruleId":"285","severity":1,"message":"286","line":25,"column":7,"nodeType":"287","messageId":"288","endLine":25,"endColumn":18},{"ruleId":"282","severity":2,"message":"289","line":32,"column":13,"nodeType":"280","messageId":"284","endLine":32,"endColumn":21},{"ruleId":"278","severity":2,"message":"279","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":14},{"ruleId":"278","severity":2,"message":"290","line":3,"column":8,"nodeType":"280","messageId":"281","endLine":3,"endColumn":15},{"ruleId":"291","severity":2,"message":"292","line":4,"column":1,"nodeType":"293","endLine":4,"endColumn":36,"fix":"294"},{"ruleId":"278","severity":2,"message":"295","line":9,"column":10,"nodeType":"280","messageId":"281","endLine":9,"endColumn":19},{"ruleId":"278","severity":2,"message":"296","line":11,"column":17,"nodeType":"280","messageId":"281","endLine":11,"endColumn":25},{"ruleId":"282","severity":2,"message":"297","line":17,"column":13,"nodeType":"280","messageId":"284","endLine":17,"endColumn":22},{"ruleId":"282","severity":2,"message":"298","line":18,"column":13,"nodeType":"280","messageId":"284","endLine":18,"endColumn":18},{"ruleId":"291","severity":2,"message":"299","line":4,"column":1,"nodeType":"293","endLine":4,"endColumn":40,"fix":"300"},{"ruleId":"278","severity":2,"message":"301","line":50,"column":18,"nodeType":"280","messageId":"281","endLine":50,"endColumn":27},{"ruleId":"278","severity":2,"message":"302","line":52,"column":10,"nodeType":"280","messageId":"281","endLine":52,"endColumn":19},{"ruleId":"303","severity":2,"message":"304","line":101,"column":49,"nodeType":"256","messageId":"305","endLine":101,"endColumn":50,"suggestions":"306"},{"ruleId":"303","severity":2,"message":"307","line":101,"column":51,"nodeType":"256","messageId":"305","endLine":101,"endColumn":52,"suggestions":"308"},{"ruleId":"303","severity":2,"message":"304","line":101,"column":90,"nodeType":"256","messageId":"305","endLine":101,"endColumn":91,"suggestions":"309"},{"ruleId":"303","severity":2,"message":"307","line":101,"column":92,"nodeType":"256","messageId":"305","endLine":101,"endColumn":93,"suggestions":"310"},{"ruleId":"303","severity":2,"message":"304","line":101,"column":123,"nodeType":"256","messageId":"305","endLine":101,"endColumn":124,"suggestions":"311"},{"ruleId":"303","severity":2,"message":"312","line":101,"column":127,"nodeType":"256","messageId":"305","endLine":101,"endColumn":128,"suggestions":"313"},{"ruleId":"303","severity":2,"message":"304","line":101,"column":146,"nodeType":"256","messageId":"305","endLine":101,"endColumn":147,"suggestions":"314"},{"ruleId":"282","severity":2,"message":"297","line":132,"column":26,"nodeType":"280","messageId":"284","endLine":132,"endColumn":35},{"ruleId":"315","severity":2,"message":"316","line":134,"column":13,"nodeType":"274","endLine":134,"endColumn":76},{"ruleId":"317","severity":2,"message":"318","line":134,"column":13,"nodeType":"274","endLine":134,"endColumn":76},{"ruleId":"319","severity":2,"message":"320","line":193,"column":30,"nodeType":"321","endLine":193,"endColumn":48},{"ruleId":"278","severity":2,"message":"322","line":31,"column":5,"nodeType":"280","messageId":"281","endLine":31,"endColumn":12},{"ruleId":"278","severity":2,"message":"322","line":32,"column":5,"nodeType":"280","messageId":"281","endLine":32,"endColumn":12},{"ruleId":"282","severity":2,"message":"323","line":16,"column":32,"nodeType":"280","messageId":"284","endLine":16,"endColumn":40},{"ruleId":"282","severity":2,"message":"324","line":30,"column":29,"nodeType":"280","messageId":"284","endLine":30,"endColumn":34},{"ruleId":"325","severity":2,"message":"326","line":30,"column":36,"nodeType":"327","messageId":"328"},{"ruleId":"282","severity":2,"message":"329","line":37,"column":26,"nodeType":"280","messageId":"284","endLine":37,"endColumn":34},{"ruleId":"282","severity":2,"message":"323","line":51,"column":25,"nodeType":"280","messageId":"284","endLine":51,"endColumn":33},{"ruleId":"282","severity":2,"message":"324","line":51,"column":35,"nodeType":"280","messageId":"284","endLine":51,"endColumn":40},{"ruleId":"282","severity":2,"message":"329","line":51,"column":42,"nodeType":"280","messageId":"284","endLine":51,"endColumn":50},{"ruleId":"282","severity":2,"message":"323","line":57,"column":31,"nodeType":"280","messageId":"284","endLine":57,"endColumn":39},{"ruleId":"282","severity":2,"message":"324","line":57,"column":41,"nodeType":"280","messageId":"284","endLine":57,"endColumn":46},{"ruleId":"282","severity":2,"message":"329","line":57,"column":48,"nodeType":"280","messageId":"284","endLine":57,"endColumn":56},{"ruleId":"278","severity":2,"message":"279","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":14},{"ruleId":"278","severity":2,"message":"296","line":8,"column":17,"nodeType":"280","messageId":"281","endLine":8,"endColumn":25},{"ruleId":"282","severity":2,"message":"298","line":13,"column":13,"nodeType":"280","messageId":"284","endLine":13,"endColumn":18},{"ruleId":"278","severity":2,"message":"330","line":6,"column":10,"nodeType":"280","messageId":"281","endLine":6,"endColumn":24},{"ruleId":"331","severity":2,"message":"332","line":35,"column":11,"nodeType":"327","endLine":35,"endColumn":71},{"ruleId":"331","severity":2,"message":"332","line":36,"column":13,"nodeType":"327","endLine":36,"endColumn":65},{"ruleId":"331","severity":2,"message":"332","line":37,"column":16,"nodeType":"327","endLine":37,"endColumn":66},{"ruleId":"331","severity":2,"message":"332","line":38,"column":11,"nodeType":"327","endLine":38,"endColumn":67},{"ruleId":"331","severity":2,"message":"332","line":39,"column":14,"nodeType":"327","endLine":39,"endColumn":86},{"ruleId":"267","severity":2,"message":"333","line":39,"column":37,"nodeType":null,"endLine":39,"endColumn":86,"fix":"334"},{"ruleId":"267","severity":2,"message":"335","line":42,"column":42,"nodeType":null,"endLine":42,"endColumn":47,"fix":"336"},{"ruleId":"337","severity":2,"message":"338","line":42,"column":51,"nodeType":"339","endLine":42,"endColumn":65},{"ruleId":"331","severity":2,"message":"332","line":43,"column":16,"nodeType":"327","endLine":43,"endColumn":92},{"ruleId":"267","severity":2,"message":"340","line":43,"column":39,"nodeType":null,"endLine":43,"endColumn":92,"fix":"341"},{"ruleId":"331","severity":2,"message":"332","line":44,"column":17,"nodeType":"327","endLine":44,"endColumn":94},{"ruleId":"267","severity":2,"message":"342","line":44,"column":40,"nodeType":null,"endLine":44,"endColumn":94,"fix":"343"},{"ruleId":"282","severity":2,"message":"297","line":61,"column":13,"nodeType":"280","messageId":"284","endLine":61,"endColumn":22},{"ruleId":"282","severity":2,"message":"344","line":68,"column":23,"nodeType":"280","messageId":"284","endLine":68,"endColumn":30},{"ruleId":"267","severity":2,"message":"345","line":69,"column":12,"nodeType":null,"endLine":73,"endColumn":6,"fix":"346"},{"ruleId":"278","severity":2,"message":"347","line":76,"column":9,"nodeType":"280","messageId":"281","endLine":76,"endColumn":20},{"ruleId":"282","severity":2,"message":"348","line":76,"column":31,"nodeType":"280","messageId":"284","endLine":76,"endColumn":36},{"ruleId":"278","severity":2,"message":"349","line":84,"column":9,"nodeType":"280","messageId":"281","endLine":84,"endColumn":21},{"ruleId":"278","severity":2,"message":"350","line":84,"column":25,"nodeType":"280","messageId":"281","endLine":84,"endColumn":31},{"ruleId":"278","severity":2,"message":"351","line":84,"column":33,"nodeType":"280","messageId":"281","endLine":84,"endColumn":38},{"ruleId":"282","severity":2,"message":"348","line":84,"column":33,"nodeType":"280","messageId":"284","endLine":84,"endColumn":38},{"ruleId":"278","severity":2,"message":"352","line":88,"column":9,"nodeType":"280","messageId":"281","endLine":88,"endColumn":19},{"ruleId":"278","severity":2,"message":"353","line":88,"column":23,"nodeType":"280","messageId":"281","endLine":88,"endColumn":27},{"ruleId":"267","severity":2,"message":"354","line":136,"column":21,"nodeType":null,"endLine":137,"endColumn":1,"fix":"355"},{"ruleId":"356","severity":2,"message":"357","line":137,"column":1,"nodeType":"358","endLine":137,"endColumn":6,"fix":"359"},{"ruleId":"282","severity":2,"message":"360","line":40,"column":13,"nodeType":"280","messageId":"284","endLine":40,"endColumn":20},{"ruleId":"267","severity":2,"message":"354","line":78,"column":36,"nodeType":null,"endLine":79,"endColumn":1,"fix":"361"},{"ruleId":"356","severity":2,"message":"362","line":79,"column":1,"nodeType":"358","endLine":79,"endColumn":6,"fix":"363"},{"ruleId":"282","severity":2,"message":"364","line":11,"column":19,"nodeType":"280","messageId":"284","endLine":11,"endColumn":23},{"ruleId":"282","severity":2,"message":"365","line":11,"column":25,"nodeType":"280","messageId":"284","endLine":11,"endColumn":27},{"ruleId":"282","severity":2,"message":"366","line":11,"column":29,"nodeType":"280","messageId":"284","endLine":11,"endColumn":35},{"ruleId":"282","severity":2,"message":"364","line":20,"column":21,"nodeType":"280","messageId":"284","endLine":20,"endColumn":25},{"ruleId":"282","severity":2,"message":"365","line":20,"column":27,"nodeType":"280","messageId":"284","endLine":20,"endColumn":29},{"ruleId":"282","severity":2,"message":"366","line":20,"column":31,"nodeType":"280","messageId":"284","endLine":20,"endColumn":37},{"ruleId":"282","severity":2,"message":"364","line":29,"column":23,"nodeType":"280","messageId":"284","endLine":29,"endColumn":27},{"ruleId":"282","severity":2,"message":"365","line":29,"column":29,"nodeType":"280","messageId":"284","endLine":29,"endColumn":31},{"ruleId":"282","severity":2,"message":"366","line":29,"column":33,"nodeType":"280","messageId":"284","endLine":29,"endColumn":39},{"ruleId":"282","severity":2,"message":"364","line":38,"column":26,"nodeType":"280","messageId":"284","endLine":38,"endColumn":30},{"ruleId":"282","severity":2,"message":"365","line":38,"column":32,"nodeType":"280","messageId":"284","endLine":38,"endColumn":34},{"ruleId":"282","severity":2,"message":"366","line":38,"column":36,"nodeType":"280","messageId":"284","endLine":38,"endColumn":42},{"ruleId":"282","severity":2,"message":"364","line":43,"column":29,"nodeType":"280","messageId":"284","endLine":43,"endColumn":33},{"ruleId":"282","severity":2,"message":"365","line":43,"column":35,"nodeType":"280","messageId":"284","endLine":43,"endColumn":37},{"ruleId":"282","severity":2,"message":"364","line":52,"column":31,"nodeType":"280","messageId":"284","endLine":52,"endColumn":35},{"ruleId":"282","severity":2,"message":"365","line":52,"column":37,"nodeType":"280","messageId":"284","endLine":52,"endColumn":39},{"ruleId":"282","severity":2,"message":"366","line":52,"column":41,"nodeType":"280","messageId":"284","endLine":52,"endColumn":47},{"ruleId":"282","severity":2,"message":"367","line":52,"column":49,"nodeType":"280","messageId":"284","endLine":52,"endColumn":53},{"ruleId":"282","severity":2,"message":"364","line":79,"column":33,"nodeType":"280","messageId":"284","endLine":79,"endColumn":37},{"ruleId":"282","severity":2,"message":"365","line":79,"column":39,"nodeType":"280","messageId":"284","endLine":79,"endColumn":41},{"ruleId":"282","severity":2,"message":"366","line":79,"column":43,"nodeType":"280","messageId":"284","endLine":79,"endColumn":49},{"ruleId":"282","severity":2,"message":"367","line":79,"column":51,"nodeType":"280","messageId":"284","endLine":79,"endColumn":55},{"ruleId":"278","severity":2,"message":"368","line":1,"column":27,"nodeType":"280","messageId":"281","endLine":1,"endColumn":36},{"ruleId":"369","severity":2,"message":"370","line":92,"column":13,"nodeType":"274","endLine":92,"endColumn":37},{"ruleId":"371","severity":2,"message":"372","line":184,"column":15,"nodeType":"373","messageId":"374","endLine":186,"endColumn":16},{"ruleId":"371","severity":2,"message":"372","line":239,"column":15,"nodeType":"373","messageId":"374","endLine":241,"endColumn":16},{"ruleId":"375","severity":2,"message":"376","line":306,"column":63,"nodeType":"339","endLine":306,"endColumn":69,"fix":"377"},{"ruleId":"325","severity":2,"message":"378","line":73,"column":7,"nodeType":"379","messageId":"380","endLine":73,"endColumn":19},{"ruleId":"325","severity":2,"message":"378","line":86,"column":5,"nodeType":"379","messageId":"380","endLine":86,"endColumn":18},{"ruleId":"325","severity":2,"message":"378","line":95,"column":7,"nodeType":"379","messageId":"380","endLine":95,"endColumn":19},{"ruleId":"325","severity":2,"message":"378","line":104,"column":7,"nodeType":"379","messageId":"380","endLine":104,"endColumn":20},{"ruleId":"381","severity":2,"message":"382","line":37,"column":17,"nodeType":"383","endLine":37,"endColumn":29},{"ruleId":"381","severity":2,"message":"384","line":37,"column":31,"nodeType":"383","endLine":37,"endColumn":40},{"ruleId":"381","severity":2,"message":"385","line":37,"column":42,"nodeType":"383","endLine":37,"endColumn":50},{"ruleId":"381","severity":2,"message":"386","line":38,"column":32,"nodeType":"280","endLine":38,"endColumn":41},{"ruleId":"282","severity":2,"message":"364","line":150,"column":11,"nodeType":"280","messageId":"284","endLine":150,"endColumn":15},{"ruleId":"282","severity":2,"message":"387","line":166,"column":24,"nodeType":"280","messageId":"284","endLine":166,"endColumn":35},{"ruleId":"282","severity":2,"message":"387","line":314,"column":24,"nodeType":"280","messageId":"284","endLine":314,"endColumn":35},"import/extensions","Unexpected use of file extension \"jsx\" for \"./App.jsx\"","Literal","lines-around-directive",["388"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"prettier/prettier","Replace `'react'` with `\"react\";`",{"range":"389","text":"390"},"Replace `(⏎····<div>⏎······⏎····</div>⏎··)` with `<div></div>;`",{"range":"391","text":"392"},"react/self-closing-comp","Empty components are self-closing","JSXOpeningElement",{"range":"393","text":"394"},"Insert `;`",{"range":"395","text":"396"},"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","no-shadow","'post' is already declared in the upper scope.","noShadow","no-console","Unexpected console statement.","MemberExpression","unexpected","'comments' is already declared in the upper scope.","'usePost' is defined but never used.","import/order","`prop-types` import should occur before import of `../hooks/usePost`","ImportDeclaration",{"range":"397","text":"398"},"'subreadit' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'subreadit' is already declared in the upper scope.","'posts' is already declared in the upper scope.","`styled-components` import should occur before import of `../../contexts/AuthContext`",{"range":"399","text":"400"},"'setImages' is assigned a value but never used.","'linkError' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\+.","unnecessaryEscape",["401","402"],"Unnecessary escape character: \\$.",["403","404"],["405","406"],["407","408"],["409","410"],"Unnecessary escape character: \\/.",["411","412"],["413","414"],"jsx-a11y/click-events-have-key-events","Visible, non-interactive elements with click handlers must have at least one keyboard listener.","jsx-a11y/no-noninteractive-element-interactions","Non-interactive elements should not be assigned mouse or keyboard event listeners.","react/no-array-index-key","Do not use Array index in keys","TemplateLiteral","'loading' is assigned a value but never used.","'username' is already declared in the upper scope.","'email' is already declared in the upper scope.","consistent-return","Expected to return a value at the end of async arrow function.","ArrowFunctionExpression","missingReturn","'password' is already declared in the upper scope.","'convertFromRaw' is defined but never used.","react/display-name","Component definition is missing display name","Replace `<h2·className=\"heading\"·key={key}>{children}</h2>` with `(⏎······<h2·className=\"heading\"·key={key}>⏎········{children}⏎······</h2>⏎····)`",{"range":"415","text":"416"},"Replace `child` with `(child)`",{"range":"417","text":"418"},"react/jsx-key","Missing \"key\" prop for element in iterator","JSXElement","Replace `<div·key={key}·className=\"codeBlock\">{children}</div>` with `(⏎······<div·key={key}·className=\"codeBlock\">⏎········{children}⏎······</div>⏎····)`",{"range":"419","text":"420"},"Replace `<div·key={key}·className=\"quoteBlock\">{children}</div>` with `(⏎······<div·key={key}·className=\"quoteBlock\">⏎········{children}⏎······</div>⏎····)`",{"range":"421","text":"422"},"'content' is already declared in the upper scope.","Replace `(⏎······<div>⏎········{redraft(JSON.parse(content),·renderers)}⏎······</div>⏎····)` with `<div>{redraft(JSON.parse(content),·renderers)}</div>`",{"range":"423","text":"424"},"'renderImage' is assigned a value but never used.","'title' is already declared in the upper scope.","'renderImages' is assigned a value but never used.","'images' is defined but never used.","'title' is defined but never used.","'renderLink' is assigned a value but never used.","'link' is defined but never used.","Delete `⏎`",{"range":"425","text":"426"},"react/jsx-indent","Expected indentation of 18 space characters but found 0.","JSXExpressionContainer",{"range":"427","text":"428"},"'comment' is already declared in the upper scope.",{"range":"429","text":"426"},"Expected indentation of 14 space characters but found 0.",{"range":"430","text":"431"},"'type' is already declared in the upper scope.","'id' is already declared in the upper scope.","'userId' is already declared in the upper scope.","'vote' is already declared in the upper scope.","'useEffect' is defined but never used.","jsx-a11y/label-has-associated-control","A form label must be associated with a control.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-one-expression-per-line","`br` must be placed on a new line",{"range":"432","text":"433"},"Async arrow function expected no return value.","ReturnStatement","unexpectedReturnValue","react/prop-types","'contentState' is missing in props validation","Property","'entityKey' is missing in props validation","'children' is missing in props validation","'contentState.getEntity' is missing in props validation","'editorState' is already declared in the upper scope.","padding-line-between-statements",[18,25],"\"react\";",[54,87],"<div></div>;",[64,83]," />",[110,110],";",[92,168],"import PropTypes from \"prop-types\";\nimport usePost from \"../hooks/usePost\";\n",[88,182],"import styled from \"styled-components\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n",{"messageId":"434","fix":"435","desc":"436"},{"messageId":"437","fix":"438","desc":"439"},{"messageId":"434","fix":"440","desc":"436"},{"messageId":"437","fix":"441","desc":"439"},{"messageId":"434","fix":"442","desc":"436"},{"messageId":"437","fix":"443","desc":"439"},{"messageId":"434","fix":"444","desc":"436"},{"messageId":"437","fix":"445","desc":"439"},{"messageId":"434","fix":"446","desc":"436"},{"messageId":"437","fix":"447","desc":"439"},{"messageId":"434","fix":"448","desc":"436"},{"messageId":"437","fix":"449","desc":"439"},{"messageId":"434","fix":"450","desc":"436"},{"messageId":"437","fix":"451","desc":"439"},[1403,1452],"(\n      <h2 className=\"heading\" key={key}>\n        {children}\n      </h2>\n    )",[1512,1517],"(child)",[1576,1629],"(\n      <div key={key} className=\"codeBlock\">\n        {children}\n      </div>\n    )",[1670,1724],"(\n      <div key={key} className=\"quoteBlock\">\n        {children}\n      </div>\n    )",[2394,2476],"<div>{redraft(JSON.parse(content), renderers)}</div>",[4087,4088],"",[4088,4088],"                  ",[2469,2470],[2470,2470],"              ",[8588,8594],"\n{' '}\n<br />","removeEscape",{"range":"452","text":"426"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"453","text":"454"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"455","text":"426"},{"range":"456","text":"454"},{"range":"457","text":"426"},{"range":"458","text":"454"},{"range":"459","text":"426"},{"range":"460","text":"454"},{"range":"461","text":"426"},{"range":"462","text":"454"},{"range":"463","text":"426"},{"range":"464","text":"454"},{"range":"465","text":"426"},{"range":"466","text":"454"},[2675,2676],[2675,2675],"\\",[2677,2678],[2677,2677],[2716,2717],[2716,2716],[2718,2719],[2718,2718],[2749,2750],[2749,2749],[2753,2754],[2753,2753],[2772,2773],[2772,2772]]