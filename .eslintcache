[{"/home/aureen/the_odin_project/breadit/src/index.jsx":"1","/home/aureen/the_odin_project/breadit/src/App.jsx":"2","/home/aureen/the_odin_project/breadit/src/hooks/useSubreadit.js":"3","/home/aureen/the_odin_project/breadit/src/firebase.js":"4","/home/aureen/the_odin_project/breadit/src/contexts/AuthContext.jsx":"5","/home/aureen/the_odin_project/breadit/src/routes/create/CreateSubreadit.jsx":"6","/home/aureen/the_odin_project/breadit/src/routes/create/CreatePost.jsx":"7","/home/aureen/the_odin_project/breadit/src/hooks/usePost.js":"8","/home/aureen/the_odin_project/breadit/src/hooks/useDragAndDrop.js":"9","/home/aureen/the_odin_project/breadit/src/hooks/useStorage.js":"10","/home/aureen/the_odin_project/breadit/src/components/entry/SignIn.jsx":"11","/home/aureen/the_odin_project/breadit/src/components/entry/SignUp.jsx":"12","/home/aureen/the_odin_project/breadit/src/hooks/useSignUp.js":"13","/home/aureen/the_odin_project/breadit/src/hooks/useUser.js":"14","/home/aureen/the_odin_project/breadit/src/hooks/useSignIn.js":"15","/home/aureen/the_odin_project/breadit/src/components/entry/Entry.jsx":"16","/home/aureen/the_odin_project/breadit/src/components/entry/ForgotPassword.jsx":"17","/home/aureen/the_odin_project/breadit/src/hooks/useForgotPassword.js":"18","/home/aureen/the_odin_project/breadit/src/hooks/useComment.js":"19","/home/aureen/the_odin_project/breadit/src/hooks/useVote.js":"20","/home/aureen/the_odin_project/breadit/src/hooks/useUserSettings.js":"21","/home/aureen/the_odin_project/breadit/src/hooks/useCarousel.js":"22","/home/aureen/the_odin_project/breadit/src/routes/settings/UserSettings.jsx":"23","/home/aureen/the_odin_project/breadit/src/hooks/useDropdown.js":"24","/home/aureen/the_odin_project/breadit/src/components/aside/Footer.jsx":"25","/home/aureen/the_odin_project/breadit/src/components/aside/LatestPosts.jsx":"26","/home/aureen/the_odin_project/breadit/src/components/aside/Create.jsx":"27","/home/aureen/the_odin_project/breadit/src/components/aside/SubreaditInfo.jsx":"28","/home/aureen/the_odin_project/breadit/src/components/aside/SubreaditRules.jsx":"29","/home/aureen/the_odin_project/breadit/src/components/aside/TopSubreadits.jsx":"30","/home/aureen/the_odin_project/breadit/src/routes/settings/SubreaditSettings.jsx":"31","/home/aureen/the_odin_project/breadit/src/hooks/useSubreaditSettings.js":"32","/home/aureen/the_odin_project/breadit/src/contexts/SubscriptionContext.jsx":"33","/home/aureen/the_odin_project/breadit/src/components/header/Header.jsx":"34","/home/aureen/the_odin_project/breadit/src/components/header/UserDropdown.jsx":"35","/home/aureen/the_odin_project/breadit/src/routes/feeds/Main.jsx":"36","/home/aureen/the_odin_project/breadit/src/routes/feeds/All.jsx":"37","/home/aureen/the_odin_project/breadit/src/routes/user/User.jsx":"38","/home/aureen/the_odin_project/breadit/src/routes/user/Overview.jsx":"39","/home/aureen/the_odin_project/breadit/src/routes/user/Posts.jsx":"40","/home/aureen/the_odin_project/breadit/src/routes/user/Comments.jsx":"41","/home/aureen/the_odin_project/breadit/src/components/sort/Sort.jsx":"42","/home/aureen/the_odin_project/breadit/src/routes/feeds/Subreadit.jsx":"43","/home/aureen/the_odin_project/breadit/src/components/sort/SortDropdown.jsx":"44","/home/aureen/the_odin_project/breadit/src/components/header/NavDropdown.jsx":"45","/home/aureen/the_odin_project/breadit/src/hooks/useScroll.js":"46","/home/aureen/the_odin_project/breadit/src/routes/content/Post.jsx":"47","/home/aureen/the_odin_project/breadit/src/routes/content/Comment.jsx":"48","/home/aureen/the_odin_project/breadit/src/contexts/SaveContext.jsx":"49","/home/aureen/the_odin_project/breadit/src/routes/user/Saved.jsx":"50","/home/aureen/the_odin_project/breadit/src/components/user/settings/Email.jsx":"51","/home/aureen/the_odin_project/breadit/src/components/user/settings/Images.jsx":"52","/home/aureen/the_odin_project/breadit/src/components/user/settings/Password.jsx":"53","/home/aureen/the_odin_project/breadit/src/components/user/settings/DeleteAccount.jsx":"54","/home/aureen/the_odin_project/breadit/src/components/user/settings/About.jsx":"55","/home/aureen/the_odin_project/breadit/src/components/user/Nav.jsx":"56","/home/aureen/the_odin_project/breadit/src/hooks/useNotification.js":"57","/home/aureen/the_odin_project/breadit/src/routes/inbox/Inbox.jsx":"58","/home/aureen/the_odin_project/breadit/src/routes/inbox/Overview.jsx":"59","/home/aureen/the_odin_project/breadit/src/routes/inbox/Notifications.jsx":"60","/home/aureen/the_odin_project/breadit/src/components/inbox/Nav.jsx":"61","/home/aureen/the_odin_project/breadit/src/routes/create/CreateMessage.jsx":"62","/home/aureen/the_odin_project/breadit/src/hooks/useMessage.js":"63","/home/aureen/the_odin_project/breadit/src/routes/inbox/messages/Messages.jsx":"64","/home/aureen/the_odin_project/breadit/src/components/inbox/notifications/PostNotification.jsx":"65","/home/aureen/the_odin_project/breadit/src/components/inbox/notifications/CommentNotification.jsx":"66","/home/aureen/the_odin_project/breadit/src/routes/inbox/messages/Received.jsx":"67","/home/aureen/the_odin_project/breadit/src/routes/inbox/messages/Sent.jsx":"68","/home/aureen/the_odin_project/breadit/src/components/inbox/messages/Nav.jsx":"69","/home/aureen/the_odin_project/breadit/src/components/inbox/messages/Message.jsx":"70","/home/aureen/the_odin_project/breadit/src/components/header/LinkInbox.jsx":"71","/home/aureen/the_odin_project/breadit/src/components/feed/PostPreview.jsx":"72","/home/aureen/the_odin_project/breadit/src/components/shared/TextEditor.jsx":"73","/home/aureen/the_odin_project/breadit/src/components/user/aside/Profile.jsx":"74","/home/aureen/the_odin_project/breadit/src/components/user/content/Comment.jsx":"75","/home/aureen/the_odin_project/breadit/src/components/user/content/Post.jsx":"76","/home/aureen/the_odin_project/breadit/src/components/feed/LinkPreview.jsx":"77","/home/aureen/the_odin_project/breadit/src/components/feed/NestedPostPreview.jsx":"78","/home/aureen/the_odin_project/breadit/src/styles/global/globalStyles.js":"79","/home/aureen/the_odin_project/breadit/src/styles/themes/light.js":"80","/home/aureen/the_odin_project/breadit/src/components/content/post/Post.jsx":"81","/home/aureen/the_odin_project/breadit/src/components/content/comment/Comment.jsx":"82","/home/aureen/the_odin_project/breadit/src/components/content/post/Information.jsx":"83","/home/aureen/the_odin_project/breadit/src/hooks/useWindowSize.js":"84","/home/aureen/the_odin_project/breadit/src/components/content/post/Buttons.jsx":"85","/home/aureen/the_odin_project/breadit/src/components/content/shared/ModifyButtons.jsx":"86","/home/aureen/the_odin_project/breadit/src/utils/const.js":"87","/home/aureen/the_odin_project/breadit/src/components/content/shared/Carousel.jsx":"88","/home/aureen/the_odin_project/breadit/src/components/content/shared/Vote.jsx":"89","/home/aureen/the_odin_project/breadit/src/components/content/comment/Information.jsx":"90","/home/aureen/the_odin_project/breadit/src/components/content/comment/Buttons.jsx":"91"},{"size":201,"mtime":1612017068402,"results":"92","hashOfConfig":"93"},{"size":3319,"mtime":1614679015791,"results":"94","hashOfConfig":"93"},{"size":4605,"mtime":1614692496498,"results":"95","hashOfConfig":"93"},{"size":641,"mtime":1612019104468,"results":"96","hashOfConfig":"93"},{"size":1535,"mtime":1612389461790,"results":"97","hashOfConfig":"93"},{"size":2785,"mtime":1614461010741,"results":"98","hashOfConfig":"93"},{"size":14043,"mtime":1614472407255,"results":"99","hashOfConfig":"93"},{"size":4943,"mtime":1614464645477,"results":"100","hashOfConfig":"93"},{"size":1443,"mtime":1613079300736,"results":"101","hashOfConfig":"93"},{"size":819,"mtime":1613407422781,"results":"102","hashOfConfig":"93"},{"size":3859,"mtime":1614677997119,"results":"103","hashOfConfig":"93"},{"size":4377,"mtime":1614677876127,"results":"104","hashOfConfig":"93"},{"size":2804,"mtime":1614632874280,"results":"105","hashOfConfig":"93"},{"size":4113,"mtime":1614691133394,"results":"106","hashOfConfig":"93"},{"size":1592,"mtime":1612213068669,"results":"107","hashOfConfig":"93"},{"size":2260,"mtime":1614684479208,"results":"108","hashOfConfig":"93"},{"size":3390,"mtime":1614677998247,"results":"109","hashOfConfig":"93"},{"size":1291,"mtime":1612217686725,"results":"110","hashOfConfig":"93"},{"size":4797,"mtime":1614697138702,"results":"111","hashOfConfig":"93"},{"size":3667,"mtime":1614594547038,"results":"112","hashOfConfig":"93"},{"size":1524,"mtime":1613396102875,"results":"113","hashOfConfig":"93"},{"size":1984,"mtime":1612777902466,"results":"114","hashOfConfig":"93"},{"size":3618,"mtime":1614691119750,"results":"115","hashOfConfig":"93"},{"size":882,"mtime":1613489839066,"results":"116","hashOfConfig":"93"},{"size":1223,"mtime":1614454850192,"results":"117","hashOfConfig":"93"},{"size":3245,"mtime":1614454901160,"results":"118","hashOfConfig":"93"},{"size":1260,"mtime":1614701479006,"results":"119","hashOfConfig":"93"},{"size":1510,"mtime":1614455064140,"results":"120","hashOfConfig":"93"},{"size":1120,"mtime":1614455072696,"results":"121","hashOfConfig":"93"},{"size":3903,"mtime":1614455360412,"results":"122","hashOfConfig":"93"},{"size":6921,"mtime":1613752359924,"results":"123","hashOfConfig":"93"},{"size":913,"mtime":1613426281696,"results":"124","hashOfConfig":"93"},{"size":1452,"mtime":1613840343103,"results":"125","hashOfConfig":"93"},{"size":2373,"mtime":1614471961036,"results":"126","hashOfConfig":"93"},{"size":4942,"mtime":1614691072734,"results":"127","hashOfConfig":"93"},{"size":2124,"mtime":1614457837768,"results":"128","hashOfConfig":"93"},{"size":1811,"mtime":1614589731775,"results":"129","hashOfConfig":"93"},{"size":1679,"mtime":1614378036734,"results":"130","hashOfConfig":"93"},{"size":3376,"mtime":1614378024480,"results":"131","hashOfConfig":"93"},{"size":1967,"mtime":1614378027437,"results":"132","hashOfConfig":"93"},{"size":2427,"mtime":1614378017484,"results":"133","hashOfConfig":"93"},{"size":1628,"mtime":1614609512045,"results":"134","hashOfConfig":"93"},{"size":2340,"mtime":1614461604386,"results":"135","hashOfConfig":"93"},{"size":2651,"mtime":1614703205418,"results":"136","hashOfConfig":"93"},{"size":5077,"mtime":1614457096988,"results":"137","hashOfConfig":"93"},{"size":1078,"mtime":1614589913577,"results":"138","hashOfConfig":"93"},{"size":4189,"mtime":1614702260522,"results":"139","hashOfConfig":"93"},{"size":1489,"mtime":1614593406111,"results":"140","hashOfConfig":"93"},{"size":2345,"mtime":1614105459344,"results":"141","hashOfConfig":"93"},{"size":2345,"mtime":1614378031495,"results":"142","hashOfConfig":"93"},{"size":5826,"mtime":1614182785481,"results":"143","hashOfConfig":"93"},{"size":3059,"mtime":1614182785860,"results":"144","hashOfConfig":"93"},{"size":6862,"mtime":1614182786919,"results":"145","hashOfConfig":"93"},{"size":4901,"mtime":1614182785033,"results":"146","hashOfConfig":"93"},{"size":2246,"mtime":1614183000831,"results":"147","hashOfConfig":"93"},{"size":856,"mtime":1614361173728,"results":"148","hashOfConfig":"93"},{"size":3301,"mtime":1614372303476,"results":"149","hashOfConfig":"93"},{"size":721,"mtime":1614457947852,"results":"150","hashOfConfig":"93"},{"size":4464,"mtime":1614360714604,"results":"151","hashOfConfig":"93"},{"size":2985,"mtime":1614360715560,"results":"152","hashOfConfig":"93"},{"size":528,"mtime":1614266029192,"results":"153","hashOfConfig":"93"},{"size":2316,"mtime":1614377969196,"results":"154","hashOfConfig":"93"},{"size":2626,"mtime":1614372355296,"results":"155","hashOfConfig":"93"},{"size":578,"mtime":1614345808869,"results":"156","hashOfConfig":"93"},{"size":3622,"mtime":1614450629455,"results":"157","hashOfConfig":"93"},{"size":5060,"mtime":1614450624993,"results":"158","hashOfConfig":"93"},{"size":1710,"mtime":1614351550163,"results":"159","hashOfConfig":"93"},{"size":1188,"mtime":1614346119400,"results":"160","hashOfConfig":"93"},{"size":470,"mtime":1614341644021,"results":"161","hashOfConfig":"93"},{"size":2847,"mtime":1614450610118,"results":"162","hashOfConfig":"93"},{"size":1543,"mtime":1614457045300,"results":"163","hashOfConfig":"93"},{"size":4794,"mtime":1614696149460,"results":"164","hashOfConfig":"93"},{"size":17917,"mtime":1614696942248,"results":"165","hashOfConfig":"93"},{"size":2191,"mtime":1614691090314,"results":"166","hashOfConfig":"93"},{"size":3410,"mtime":1614377870055,"results":"167","hashOfConfig":"93"},{"size":8654,"mtime":1614378136512,"results":"168","hashOfConfig":"93"},{"size":3819,"mtime":1614456304412,"results":"169","hashOfConfig":"93"},{"size":4967,"mtime":1614685272817,"results":"170","hashOfConfig":"93"},{"size":785,"mtime":1614692188026,"results":"171","hashOfConfig":"93"},{"size":1086,"mtime":1614703154282,"results":"172","hashOfConfig":"93"},{"size":5899,"mtime":1614702018758,"results":"173","hashOfConfig":"93"},{"size":6577,"mtime":1614701478182,"results":"174","hashOfConfig":"93"},{"size":3727,"mtime":1614692330450,"results":"175","hashOfConfig":"93"},{"size":532,"mtime":1614599154945,"results":"176","hashOfConfig":"93"},{"size":3584,"mtime":1614628194988,"results":"177","hashOfConfig":"93"},{"size":3126,"mtime":1614693821666,"results":"178","hashOfConfig":"93"},{"size":244,"mtime":1614684157263,"results":"179","hashOfConfig":"93"},{"size":3265,"mtime":1614685149491,"results":"180","hashOfConfig":"93"},{"size":2840,"mtime":1614696490566,"results":"181","hashOfConfig":"93"},{"size":1519,"mtime":1614692517402,"results":"182","hashOfConfig":"93"},{"size":1799,"mtime":1614699025409,"results":"183","hashOfConfig":"93"},{"filePath":"184","messages":"185","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"187"},"yck5r3",{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"198","messages":"199","errorCount":13,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"187"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"207","messages":"208","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"187"},{"filePath":"210","messages":"211","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"187"},{"filePath":"213","messages":"214","errorCount":10,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"187"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"220","messages":"221","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"187"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"227","messages":"228","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":24,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"187"},{"filePath":"232","messages":"233","errorCount":26,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"187"},{"filePath":"235","messages":"236","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"187"},{"filePath":"238","messages":"239","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"187"},{"filePath":"241","messages":"242","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"187"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"246","messages":"247","errorCount":6,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"187"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"187"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"256","messages":"257","errorCount":3,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"187"},{"filePath":"259","messages":"260","errorCount":14,"warningCount":0,"fixableErrorCount":7,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"187"},{"filePath":"262","messages":"263","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"187"},{"filePath":"265","messages":"266","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"187"},{"filePath":"268","messages":"269","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"187"},{"filePath":"271","messages":"272","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"187"},{"filePath":"274","messages":"275","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"187"},{"filePath":"277","messages":"278","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"187"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"282","messages":"283","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"187"},{"filePath":"285","messages":"286","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"187"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"290","messages":"291","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"187"},{"filePath":"293","messages":"294","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"187"},{"filePath":"296","messages":"297","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"300","messages":"301","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"187"},{"filePath":"303","messages":"304","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"187"},{"filePath":"308","messages":"309","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"187"},{"filePath":"311","messages":"312","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"187"},{"filePath":"314","messages":"315","errorCount":4,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"187"},{"filePath":"317","messages":"318","errorCount":10,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"187"},{"filePath":"320","messages":"321","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"187"},{"filePath":"323","messages":"324","errorCount":4,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"187"},{"filePath":"326","messages":"327","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"187"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"331","messages":"332","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"187"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"336","messages":"337","errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"187"},{"filePath":"339","messages":"340","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"187"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"344","messages":"345","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"187"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"363","messages":"364","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"187"},{"filePath":"366","messages":"367","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","errorCount":16,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"374","messages":"375","errorCount":5,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"187"},{"filePath":"377","messages":"378","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"187"},{"filePath":"380","messages":"381","errorCount":11,"warningCount":0,"fixableErrorCount":7,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"187"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":5,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"187"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"402","messages":"403","errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"187"},{"filePath":"405","messages":"406","errorCount":4,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"187"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aureen/the_odin_project/breadit/src/index.jsx",["412"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["413","414","415","416","417"],"/home/aureen/the_odin_project/breadit/src/App.jsx",[],"/home/aureen/the_odin_project/breadit/src/hooks/useSubreadit.js",[],"/home/aureen/the_odin_project/breadit/src/firebase.js",[],"/home/aureen/the_odin_project/breadit/src/contexts/AuthContext.jsx",[],"/home/aureen/the_odin_project/breadit/src/routes/create/CreateSubreadit.jsx",[],"/home/aureen/the_odin_project/breadit/src/routes/create/CreatePost.jsx",["418","419","420","421","422","423","424","425","426","427","428","429","430"],"/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport usePost from \"../../hooks/usePost\";\nimport useSubreadit from \"../../hooks/useSubreadit\";\nimport useDragAndDrop from \"../../hooks/useDragAndDrop\";\nimport useStorage from \"../../hooks/useStorage\";\nimport useDropdown from \"../../hooks/useDropdown\";\nimport TextEditor from \"../../components/shared/TextEditor\";\n\n// Icons\nimport { ReactComponent as IconCaretDown } from \"../../assets/icons/general/icon-caret-down.svg\";\nimport { ReactComponent as IconPost } from \"../../assets/icons/general/icon-post.svg\";\nimport { ReactComponent as IconImage } from \"../../assets/icons/general/icon-image.svg\";\nimport { ReactComponent as IconLink } from \"../../assets/icons/general/icon-link.svg\";\nimport { ReactComponent as IconPlus } from \"../../assets/icons/general/icon-plus.svg\";\nimport { ReactComponent as IconCheck } from \"../../assets/icons/general/icon-check.svg\";\nimport { ReactComponent as IconClose } from \"../../assets/icons/general/icon-x.svg\";\n\nfunction CreatePost() {\n  const [type, setType] = useState(\"post\");\n  const [title, setTitle] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  const [images, setImages] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [linkError, setLinkError] = useState(\"\");\n  const [spoiler, setSpoiler] = useState(false);\n  const [subreadits, setSubreadits] = useState([]);\n  const [isHovered, setIsHovered] = useState();\n\n  const { currentUser } = useAuth();\n  const { getSubreadits } = useSubreadit();\n  const { createPost } = usePost();\n  const { uploadImage } = useStorage();\n  const history = useHistory();\n  const {\n    inDragZone,\n    files,\n    deleteFile,\n    preview,\n    handleDragEnter,\n    handleDragLeave,\n    handleDragOver,\n    handleDrop,\n  } = useDragAndDrop();\n  const dropdownRef = useRef();\n  const {\n    isDropdownOpen,\n    setIsDropdownOpen,\n    current,\n    handleChoice,\n  } = useDropdown(dropdownRef);\n\n  // Get list of subreadits\n  useEffect(() => {\n    (async () => {\n      const subreaditsList = await getSubreadits();\n      setSubreadits(subreaditsList);\n    })();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let content;\n    switch (type) {\n      case \"image\": {\n        // If the user wants to create an image post:\n        // Upload the images to the storage and turns them into links.\n        const imagesUrls = [];\n        await Promise.all(\n          files.map(async (file) => {\n            const imageUrl = await uploadImage(file);\n            imagesUrls.push(imageUrl);\n          })\n        );\n        content = imagesUrls;\n        break;\n      }\n\n      case \"link\":\n        // Checks if the link is valid.\n        if (\n          !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(\n            link\n          )\n        ) {\n          setLinkError(\"This link doesn't seem to be valid.\");\n          return;\n        }\n        content = link;\n\n        break;\n\n      case \"post\":\n        content = post;\n        break;\n      default:\n    }\n    const postId = await createPost(\n      currentUser,\n      current,\n      title,\n      type,\n      content,\n      spoiler\n    );\n    setTimeout(() => history.push(`/b/${current.name}/${postId}`), 1000);\n  };\n\n  return (\n    <>\n      <Container>\n        <div>\n          <Heading>Create a post</Heading>\n        </div>\n\n        <Dropdown ref={dropdownRef}>\n          <DropdownHeader\n            isDropdownOpen={isDropdownOpen}\n            onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n          >\n            {current ? current.name : \"Choose a community\"}\n            <IconCaretDown />\n          </DropdownHeader>\n          {isDropdownOpen && (\n            <DropdownList>\n              {subreadits.map((subreadit) => {\n                return (\n                  <li key={subreadit.id}>\n                    <DropdownChoice onClick={() => handleChoice(subreadit)}>\n                      <SubreaditIcon\n                        src={subreadit.icon}\n                        alt={subreadit.name}\n                      />\n                      <div>\n                        <Bold>b/{subreadit.name}</Bold>\n                        <Small>\n                          {subreadit.members} member\n                          {subreadit.members !== 1 && \"s\"}\n                        </Small>\n                      </div>\n                    </DropdownChoice>\n                  </li>\n                );\n              })}\n            </DropdownList>\n          )}\n        </Dropdown>\n\n        <Main>\n          <Tabs>\n            <Tab\n              type=\"button\"\n              onClick={() => setType(\"post\")}\n              isSelected={type === \"post\"}\n            >\n              <IconPost /> Post\n            </Tab>\n            <Tab\n              type=\"button\"\n              onClick={() => setType(\"image\")}\n              isSelected={type === \"image\"}\n            >\n              <IconImage /> Image\n            </Tab>\n            <Tab\n              type=\"button\"\n              onClick={() => setType(\"link\")}\n              isSelected={type === \"link\"}\n            >\n              <IconLink /> Link\n            </Tab>\n          </Tabs>\n          <Form onSubmit={handleSubmit}>\n            <Field>\n              <label htmlFor=\"title\">\n                <Input\n                  type=\"text\"\n                  value={title}\n                  id=\"title\"\n                  name=\"title\"\n                  onChange={(e) => {\n                    e.target.value.length > 300\n                      ? setTitle(e.target.value.slice(0, 300))\n                      : setTitle(e.target.value);\n                  }}\n                  placeholder=\"Title\"\n                />\n              </label>\n              <TitleLength>{title.length}/300</TitleLength>\n            </Field>\n\n            {type === \"post\" && (\n              <Field>\n                <TextEditor\n                  type=\"post\"\n                  sendContent={setPost}\n                  placeholder=\"Text (optional)\"\n                />\n              </Field>\n            )}\n\n            {type === \"image\" && (\n              <Field>\n                <DropArea\n                  onDragOver={handleDragOver}\n                  onDragEnter={handleDragEnter}\n                  onDragLeave={handleDragLeave}\n                  onDrop={handleDrop}\n                  areFilesDragged={inDragZone}\n                  center={files.length === 0}\n                >\n                  {files.length !== 0 ? (\n                    <Preview>\n                      {preview.map((image, index) => {\n                        return (\n                          <ImageContainer\n                            key={image}\n                            onMouseEnter={() => setIsHovered(index)}\n                            onMouseLeave={() => setIsHovered(null)}\n                          >\n                            <Image src={image} alt=\"preview\" />\n                            {isHovered === index && (\n                              <DeleteButton onClick={() => deleteFile(index)}>\n                                <IconClose />\n                              </DeleteButton>\n                            )}\n                          </ImageContainer>\n                        );\n                      })}\n                    </Preview>\n                  ) : (\n                    <div>\n                      Drag and drop or{\" \"}\n                      <Upload>\n                        <HiddenInput type=\"file\" />\n                        Upload\n                      </Upload>\n                    </div>\n                  )}\n                </DropArea>\n              </Field>\n            )}\n\n            {type === \"link\" && (\n              <Field>\n                <label htmlFor=\"link\">\n                  <Textarea\n                    id=\"link\"\n                    name=\"link\"\n                    value={link}\n                    onChange={(e) => setLink(e.target.value)}\n                    placeholder=\"Url\"\n                  />\n                </label>\n              </Field>\n            )}\n\n            <Buttons>\n              <ButtonBool\n                type=\"button\"\n                onClick={() => setSpoiler(!spoiler)}\n                isChecked={spoiler === true}\n              >\n                {spoiler ? <IconCheck /> : <IconPlus />}\n                Spoiler\n              </ButtonBool>\n              <SubmitBtn\n                type=\"submit\"\n                disabled={\n                  (type === \"post\" && (!title || !current)) ||\n                  (type === \"link\" && (!title || !link || !current)) ||\n                  (type === \"image\" && (!title || !images || !current))\n                }\n              >\n                Post\n              </SubmitBtn>\n            </Buttons>\n          </Form>\n        </Main>\n      </Container>\n    </>\n  );\n}\n\nexport default CreatePost;\n\nconst colors = {\n  primary: \"rgb(179, 72, 54)\",\n  secondary: \"rgb(255, 255, 255)\",\n  background: \"rgb(241, 236, 230)\",\n  border: \"rgb(242, 234, 230)\",\n  disabled: \"rgb(222, 188, 171)\",\n};\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 50rem;\n`;\n\nconst Main = styled.div`\n  background: ${colors.secondary};\n  margin-top: 1rem;\n  border-radius: 5px;\n`;\n\nconst Header = styled.div`\n  border-bottom: 1px solid blue;\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${colors.border};\n`;\n\nconst Tab = styled.button`\n  flex: 1;\n  padding: 1rem;\n  border-left: 1px solid ${colors.border};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-right: -0.5rem;\n  font-weight: ${(props) => props.isSelected && \"500\"};\n  color: ${(props) => props.isSelected && colors.primary};\n  border-bottom: ${(props) =>\n    props.isSelected ? `2px solid ${colors.primary}` : \"2px solid transparent\"};\n\n  & > *:first-child {\n    margin-right: 0.5rem;\n  }\n`;\n\nconst Heading = styled.h2`\n  font-size: 1.125rem;\n`;\n\nconst Dropdown = styled.div`\n  position: relative;\n  max-width: 20rem;\n  border: 1px solid ${colors.border};\n  z-index: 1;\n`;\n\nconst DropdownHeader = styled.button`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  background: ${colors.secondary};\n  padding: 0.75rem;\n  border-radius: ${(props) => (props.isDropdownOpen ? \"5px 5px 0 0\" : \"5px\")};\n  cursor: pointer;\n  width: 100%;\n  justify-items: start;\n`;\n\nconst DropdownList = styled.ul`\n  position: absolute;\n  left: 0;\n  right: 0;\n  background: ${colors.secondary};\n  max-height: 25rem;\n  overflow-y: auto;\n  padding: 0.75rem 0;\n\n  & > li {\n    margin: 0 0.5rem 1rem 0.5rem;\n  }\n\n  & > li:last-child {\n    margin: 0 0.5rem 0 0.5rem;\n  }\n`;\n\nconst DropdownChoice = styled.button`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 0;\n\n  & > * {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst SubreaditIcon = styled.img`\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n  margin-right: 0.5rem;\n`;\n\nconst Bold = styled.div`\n  font-weight: 500;\n`;\n\nconst Small = styled.div`\n  font-size: 0.75rem;\n  color: ${colors.secondary};\n`;\n\nconst Form = styled.form`\n  margin: 1rem;\n`;\n\nconst Field = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n`;\n\nconst input = `\n  width: 100%;\n  border: 1px solid ${colors.border};\n  padding: 0.5rem;\n  border-radius: 5px;\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${colors.primary};\n  }\n`;\n\nconst Input = styled.input`\n  ${input}\n`;\n\nconst Textarea = styled.textarea`\n  ${input}\n`;\n\nconst DropArea = styled.div`\n  max-width: 50rem;\n  min-height: 200px;\n  border: ${(props) =>\n    props.areFilesDragged\n      ? `2px dashed ${colors.primary}`\n      : `1px dashed ${colors.border}`};\n  ${(props) =>\n    props.center &&\n    `display: flex;\n    align-items: center;\n    justify-content: center;\n  `}\n`;\n\nconst Preview = styled.div`\n  max-width: 100%;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-gap: 1rem;\n  padding: 1rem;\n  justify-items: center;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  background: ${colors.backgroundImage};\n  border: 1px solid ${colors.disabled};\n  width: 8.4rem;\n  height: 8.4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n`;\n\nconst TitleLength = styled.span`\n  position: absolute;\n  font-size: 0.75rem;\n  font-weight: 500;\n  padding: 0.5rem;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nconst button = `\n  border-radius: 5rem;\n  padding: 0.45rem 1.25rem;\n  font-weight: 500;\n`;\n\nconst buttonEmpty = `\n  color: ${colors.primary};\n  border: 1px solid ${colors.primary};\n`;\n\nconst Buttons = styled.div`\n  padding: 1rem 0;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Button = styled.button`\n  ${button}\n`;\n\nconst DeleteButton = styled.button`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 0.25rem;\n  right: 0.25rem;\n  border-radius: 50%;\n  padding: 0;\n  width: 1.5rem;\n  height: 1.5rem;\n`;\n\nconst Upload = styled.label`\n  display: inline-block;\n  ${button}\n  ${buttonEmpty}\n  cursor: pointer;\n  margin-left: 0.5rem;\n`;\n\nconst HiddenInput = styled.input`\n  position: absolute;\n  top: -9999px;\n`;\n\nconst ButtonBool = styled(Button)`\n  display: flex;\n  align-items: center;\n  border: 1px solid\n    ${(props) => (props.isChecked ? colors.primary : colors.disabled)};\n  color: ${(props) => (props.isChecked ? colors.secondary : colors.disabled)};\n  background: ${(props) => props.isChecked && colors.primary};\n\n  & > *:first-child {\n    margin-left: -0.5rem;\n    margin-right: 0.5rem;\n  }\n`;\n\nconst SubmitBtn = styled(Button)`\n  color: ${colors.secondary};\n  background: ${(props) => (props.disabled ? colors.disabled : colors.primary)};\n  border: 1px solid transparent;\n`;\n","/home/aureen/the_odin_project/breadit/src/hooks/usePost.js",[],"/home/aureen/the_odin_project/breadit/src/hooks/useDragAndDrop.js",[],"/home/aureen/the_odin_project/breadit/src/hooks/useStorage.js",[],"/home/aureen/the_odin_project/breadit/src/components/entry/SignIn.jsx",["431","432"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport useSignIn from \"../../hooks/useSignIn\";\n\nfunction SignIn({ changeTab }) {\n  const {\n    email,\n    setEmail,\n    emailError,\n    password,\n    setPassword,\n    passwordError,\n    loading,\n    message,\n    handleSignIn,\n  } = useSignIn();\n\n  return (\n    <>\n      <div>\n        <h3>Sign in</h3>\n        <div>Welcome back! We are happy to see you again.</div>\n      </div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSignIn();\n        }}\n      >\n        <Field>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <MessageError>{emailError}</MessageError>\n        </Field>\n\n        <Field>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <MessageError>{passwordError}</MessageError>\n        </Field>\n\n        <Button type=\"submit\" disabled={loading}>\n          Log In\n        </Button>\n        <MessageSuccess>{message}</MessageSuccess>\n      </form>\n\n      <Message>\n        Forgot your{\" \"}\n        {changeTab ? (\n          <ChangeTab type=\"button\" onClick={() => changeTab(\"forgotPassword\")}>\n            password\n          </ChangeTab>\n        ) : (\n          <ChangeTab as={Link} to=\"/entry/password\">\n            password\n          </ChangeTab>\n        )}\n        ?\n      </Message>\n\n      <Message>\n        New to breadit ?{\" \"}\n        <>\n          {changeTab ? (\n            <ChangeTab type=\"button\" onClick={() => changeTab(\"signUp\")}>\n              Sign up\n            </ChangeTab>\n          ) : (\n            <ChangeTab as={Link} to=\"/entry/signup\">\n              Sign up\n            </ChangeTab>\n          )}\n        </>\n      </Message>\n    </>\n  );\n}\n\nSignIn.propTypes = {\n  changeTab: PropTypes.func,\n};\n\nSignIn.defaultProps = {\n  changeTab: null,\n};\n\nexport default SignIn;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > * {\n    flex: 1;\n  }\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: -9999px;\n`;\n\nconst Input = styled.input`\n  margin: 0.75rem 0 0 0;\n  padding: 0.75rem;\n  border-radius: 3px;\n  border: 1px solid\n    ${(props) =>\n      props.hasError ? props.theme.error : props.theme.borderSecondary};\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${(props) => props.theme.accent};\n  }\n\n  &::placeholder {\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 0.75rem;\n  }\n`;\n\nconst Message = styled.div`\n  font-size: 0.75rem;\n  color: ${(props) => props.theme.secondary};\n  margin-bottom: 0.5rem;\n`;\n\nconst MessageError = styled(Message)`\n  color: ${(props) => props.theme.error};\n  top: -0.5rem;\n`;\n\nconst MessageSuccess = styled(Message)`\n  color: ${(props) => props.theme.success};\n  line-height: 1rem;\n`;\n\nconst Button = styled.button`\n  display: block;\n  color: ${(props) => props.theme.backgroundSecondary};\n  background-color: ${(props) => props.theme.accent};\n  border: 1px solid ${(props) => props.theme.accent};\n  border-radius: 5rem;\n  padding: 0.45rem 1.25rem;\n  font-weight: 500;\n  align-self: center;\n  text-align: center;\n  margin: 0.75rem 0;\n\n  &:disabled {\n    background-color: ${(props) => props.theme.accentDisabled};\n    border: 1px solid ${(props) => props.theme.accentDisabled};\n    cursor: disabled;\n  }\n`;\n\nconst ChangeTab = styled.button`\n  color: ${(props) => props.theme.accent};\n`;\n","/home/aureen/the_odin_project/breadit/src/components/entry/SignUp.jsx",["433"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport useSignUp from \"../../hooks/useSignUp\";\n\nfunction SignUp({ changeTab }) {\n  const {\n    email,\n    setEmail,\n    emailError,\n    username,\n    setUsername,\n    usernameError,\n    password,\n    setPassword,\n    passwordError,\n    loading,\n    checkUsername,\n    checkEmail,\n    checkPassword,\n    handleSignUp,\n    message,\n  } = useSignUp();\n\n  return (\n    <>\n      <div>\n        <h3>Sign up</h3>\n        <div>\n          You will be able to vote on posts and comment to help everyone find\n          the best content.\n        </div>\n      </div>\n\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSignUp(username, email, password);\n        }}\n      >\n        <Field>\n          <Label htmlFor=\"username\">Username</Label>\n          <Input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            onBlur={(e) => checkUsername(e.target.value)}\n            hasError={usernameError}\n          />\n          <MessageError>{usernameError}</MessageError>\n        </Field>\n\n        <Field>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            onBlur={(e) => checkEmail(e.target.value)}\n            hasError={emailError}\n          />\n          <MessageError>{emailError}</MessageError>\n        </Field>\n\n        <Field>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            onBlur={(e) => checkPassword(e.target.value)}\n            hasError={passwordError}\n          />\n          <MessageError>{passwordError}</MessageError>\n        </Field>\n\n        <Button type=\"submit\" disabled={loading}>\n          Sign Up\n        </Button>\n      </form>\n\n      <Message>\n        Already a breaditor ?{\" \"}\n        <>\n          {changeTab ? (\n            <ChangeTab type=\"button\" onClick={() => changeTab(\"signIn\")}>\n              Log In\n            </ChangeTab>\n          ) : (\n            <ChangeTab as={Link} to=\"/entry/signin\">\n              Log In\n            </ChangeTab>\n          )}\n        </>\n      </Message>\n\n      <MessageSuccess>{message}</MessageSuccess>\n    </>\n  );\n}\n\nSignUp.propTypes = {\n  changeTab: PropTypes.func,\n};\n\nSignUp.defaultProps = {\n  changeTab: null,\n};\n\nexport default SignUp;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > * {\n    flex: 1;\n  }\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: -9999px;\n`;\n\nconst Input = styled.input`\n  margin: 0.75rem 0 0 0;\n  padding: 0.75rem;\n  border-radius: 3px;\n  border: 1px solid\n    ${(props) =>\n      props.hasError ? props.theme.error : props.theme.borderSecondary};\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${(props) => props.theme.accent};\n  }\n\n  &::placeholder {\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 0.75rem;\n  }\n`;\n\nconst Message = styled.div`\n  font-size: 0.75rem;\n  color: ${(props) => props.theme.secondary};\n  margin-bottom: 0.5rem;\n`;\n\nconst MessageError = styled(Message)`\n  color: ${(props) => props.theme.error};\n  top: -0.5rem;\n`;\n\nconst MessageSuccess = styled(Message)`\n  color: ${(props) => props.theme.success};\n  line-height: 1rem;\n`;\n\nconst Button = styled.button`\n  display: block;\n  color: ${(props) => props.theme.backgroundSecondary};\n  background-color: ${(props) => props.theme.accent};\n  border: 1px solid ${(props) => props.theme.accent};\n  border-radius: 5rem;\n  padding: 0.45rem 1.25rem;\n  font-weight: 500;\n  align-self: center;\n  text-align: center;\n  margin: 0.75rem 0;\n\n  &:disabled {\n    background-color: ${(props) => props.theme.accentDisabled};\n    border: 1px solid ${(props) => props.theme.accentDisabled};\n    cursor: disabled;\n  }\n`;\n\nconst ChangeTab = styled.button`\n  color: ${(props) => props.theme.accent};\n`;\n","/home/aureen/the_odin_project/breadit/src/hooks/useSignUp.js",["434","435","436","437","438","439","440","441","442","443"],"import { useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useUser from \"./useUser\";\n\nfunction useSignUp() {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { signUp, updateUsername, updatePicture } = useAuth();\n  const { createUser, isUsernameAvailable } = useUser();\n  const [message, setMessage] = useState(\"\");\n\n  const checkUsername = async (username) => {\n    if (!username) {\n      setUsernameError(\"This field is required.\");\n      return false;\n    }\n\n    if (!(await isUsernameAvailable(username))) {\n      setUsernameError(\"That username is already taken.\");\n      return false;\n    }\n    setUsernameError(\"\");\n    return true;\n  };\n\n  const checkEmail = async (email) => {\n    if (!email) {\n      setEmailError(\"This field is required\");\n      return false;\n    }\n  };\n\n  const checkPassword = (password) => {\n    if (!password) {\n      setPasswordError(\"This field is required\");\n      return false;\n    }\n\n    if (password.length < 6) {\n      setPasswordError(\"The password must be 6 characters long or more\");\n      return false;\n    }\n    setPasswordError(\"\");\n    return true;\n  };\n\n  const validateForm = (username, email, password) => {\n    return (\n      checkUsername(username) && checkEmail(email) && checkPassword(password)\n    );\n  };\n\n  const handleSignUp = async (username, email, password) => {\n    if (!validateForm(username, email, password)) return;\n    setLoading(true);\n    try {\n      const user = await signUp(email, password);\n      updateUsername(user.user, username);\n      updatePicture(user.user, \"defaultpic\");\n      if (user) await createUser(user.user.uid, username);\n    } catch (err) {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n          setEmailError(\"Fix your email to continue\");\n          break;\n        case \"email-already-in-use\":\n          setEmailError(\"This email already belongs to an user\");\n          break;\n        case \"weak-password\":\n          setPasswordError(\"The password must be 6 characters long or more\");\n          break;\n        default:\n      }\n    }\n    setLoading(false);\n    setMessage(\n      \"You have succesfully created an account. You will be redirected shortly.\"\n    );\n  };\n\n  return {\n    email,\n    setEmail,\n    username,\n    setUsername,\n    password,\n    setPassword,\n    emailError,\n    passwordError,\n    usernameError,\n    loading,\n    checkUsername,\n    checkEmail,\n    checkPassword,\n    handleSignUp,\n    message,\n  };\n}\n\nexport default useSignUp;\n","/home/aureen/the_odin_project/breadit/src/hooks/useUser.js",[],"/home/aureen/the_odin_project/breadit/src/hooks/useSignIn.js",[],"/home/aureen/the_odin_project/breadit/src/components/entry/Entry.jsx",["444"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport { ReactComponent as IconClose } from \"../../assets/icons/general/icon-x.svg\";\n\n// Image\nimport { ENTRY_IMG } from \"../../utils/const\";\n\nfunction Entry({ close, entryTab }) {\n  const [currentTab, setCurrentTab] = useState(entryTab);\n\n  return (\n    <Overlay onClick={close}>\n      <Container onClick={(e) => e.stopPropagation()}>\n        <Content>\n          {currentTab === \"signIn\" && <SignIn changeTab={setCurrentTab} />}\n          {currentTab === \"signUp\" && <SignUp changeTab={setCurrentTab} />}\n          {currentTab === \"forgotPassword\" && (\n            <ForgotPassword changeTab={setCurrentTab} />\n          )}\n        </Content>\n        <Close type=\"button\" onClick={close}>\n          <IconClose />\n        </Close>\n      </Container>\n    </Overlay>\n  );\n}\n\nEntry.propTypes = {\n  close: PropTypes.func,\n  entryTab: PropTypes.string,\n};\n\nEntry.defaultProps = {\n  close: () => {},\n  entryTab: \"signUp\",\n};\n\nexport default Entry;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: ${(props) => props.theme.overlay};\n  z-index: 99;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  background: ${(props) => props.theme.backgroundSecondary};\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 100;\n\n  @media all and (min-width: 576px) {\n    width: 30rem;\n    height: 30rem;\n    box-shadow: 0 0 15px ${(props) => props.theme.shadow};\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    background: linear-gradient(\n        to right,\n        transparent 30%,\n        ${(props) => props.theme.backgroundSecondary} 30%\n      ),\n      url(${ENTRY_IMG});\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    border-radius: .5rem;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > * {\n    flex: 1;\n  }\n\n  @media all and (min-width: 576px) {\n    margin-left: 12rem;\n    max-width: 15rem;\n  }\n`;\n\nconst Close = styled.button`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n`;\n","/home/aureen/the_odin_project/breadit/src/components/entry/ForgotPassword.jsx",[],"/home/aureen/the_odin_project/breadit/src/hooks/useForgotPassword.js",[],"/home/aureen/the_odin_project/breadit/src/hooks/useComment.js",["445"],"/home/aureen/the_odin_project/breadit/src/hooks/useVote.js",["446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469"],"import { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { firestore } from \"../firebase\";\n\nfunction useVote(type, id, userId) {\n  const [votes, setVotes] = useState(0); // Number of votes a post / comment has.\n  const [vote, setVote] = useState(); // Current user's vote\n\n  // Type is either: post / comment\n  // id is the postId / commentId.\n  const upvote = (type, id, userId) => {\n    return firestore\n      .collection(type)\n      .doc(id)\n      .update({\n        [`votes.list.${userId}`]: 1,\n      });\n  };\n\n  const downvote = (type, id, userId) => {\n    return firestore\n      .collection(type)\n      .doc(id)\n      .update({\n        [`votes.list.${userId}`]: -1,\n      });\n  };\n\n  const removeVote = (type, id, userId) => {\n    return firestore\n      .collection(type)\n      .doc(id)\n      .update({\n        [`votes.list.${userId}`]: firebase.firestore.FieldValue.delete(),\n      });\n  };\n\n  // Update sum of all votes\n  const updateVote = (type, id, number) => {\n    return firestore\n      .collection(type)\n      .doc(id)\n      .update({\n        \"votes.sum\": firebase.firestore.FieldValue.increment(number),\n      });\n  };\n\n  const getVote = async (type, id, userId) => {\n    const doc = await firestore.collection(type).doc(id).get();\n    return doc.data().votes.list[userId];\n  };\n\n  const countVotes = async (type, id) => {\n    const doc = await firestore.collection(type).doc(id).get();\n    if (!doc) return 0;\n    return Object.values(doc.data().votes.list).reduce(\n      (sum, current) => sum + current,\n      0\n    );\n  };\n\n  const handleUpvote = async (type, id, userId, vote) => {\n    if (!userId) return;\n    switch (vote) {\n      // User already upvoted the post:\n      // - Remove the upvote\n      case 1:\n        removeVote(type, id, userId);\n        setVote(null);\n        setVotes((prev) => prev - 1);\n        updateVote(type, id, -1);\n        break;\n\n      // User downvoted the post:\n      // - Replace the downvote (-1) by an upvote (+1)\n      // User hasn't voted yet\n      // - Simply adds an upvote.\n      case -1:\n        upvote(type, id, userId);\n        setVote(1);\n        setVotes((prev) => prev + 2);\n        updateVote(type, id, 2);\n        break;\n      default:\n        upvote(type, id, userId);\n        setVote(1);\n        setVotes((prev) => prev + 1);\n        updateVote(type, id, 1);\n    }\n  };\n\n  const handleDownvote = async (type, id, userId, vote) => {\n    if (!userId) return;\n    switch (vote) {\n      // User already downvoted the post:\n      // - Remove the downvote\n      case -1:\n        removeVote(type, id, userId);\n        setVote(null);\n        setVotes((prev) => prev + 1);\n        updateVote(type, id, 1);\n        break;\n\n      // User upvoted the post:\n      // - Replace the upvote (+1) by a downvote (-1)\n      // User hasn't voted yet:\n      // - Simply adds an upvote.\n      case 1:\n        downvote(type, id, userId);\n        setVote(-1);\n        setVotes((prev) => prev - 2);\n        updateVote(type, id, -2);\n        break;\n      default:\n        downvote(type, id, userId);\n        setVote(-1);\n        setVotes((prev) => prev - 1);\n        updateVote(type, id, -1);\n    }\n  };\n\n  // Get current number of votes\n  useEffect(() => {\n    (async () => {\n      const currentVotes = await countVotes(type, id);\n      setVotes(currentVotes);\n    })();\n  }, []);\n\n  // Get the user's vote\n  useEffect(() => {\n    if (!userId) return;\n    (async () => {\n      const currentVote = await getVote(type, id, userId);\n      setVote(currentVote);\n    })();\n  }, []);\n\n  return {\n    vote,\n    votes,\n    handleUpvote,\n    handleDownvote,\n    countVotes,\n  };\n}\n\nexport default useVote;\n","/home/aureen/the_odin_project/breadit/src/hooks/useUserSettings.js",["470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495"],"import firebase from \"firebase\";\nimport { firestore } from \"../firebase\";\n\nfunction useUserSettings() {\n  // Check if the user entered the right password before updating his data.\n  const checkPassword = async (user, email, password) => {\n    const credential = await firebase.auth.EmailAuthProvider.credential(\n      email,\n      password\n    );\n    try {\n      await user.reauthenticateWithCredential(credential);\n    } catch (err) {\n      return err.code;\n    }\n  };\n\n  // When the user changes password, check if they entered the new password properly twice.\n  const checkConfirmation = (password, confirmation) => {\n    if (password !== confirmation) {\n      return false;\n    }\n    return true;\n  };\n\n  const updateEmail = (user, email) => {\n    return user.updateEmail(email);\n  };\n\n  const updatePassword = (user, password) => {\n    return user.updatePassword(password);\n  };\n\n  const deleteAccount = (user) => {\n    return user.delete();\n  };\n\n  const updateAbout = (user, about) => {\n    return firestore.collection(\"users\").doc(user).update({ about });\n  };\n\n  const updateAvatar = (user, image) => {\n    return firestore.collection(\"users\").doc(user).update({ avatar: image });\n  };\n\n  const updateBanner = (user, image) => {\n    return firestore.collection(\"users\").doc(user).update({ banner: image });\n  };\n\n  return {\n    checkPassword,\n    checkConfirmation,\n    updateEmail,\n    updatePassword,\n    updateAbout,\n    updateAvatar,\n    updateBanner,\n    deleteAccount,\n  };\n}\n\nexport default useUserSettings;\n","/home/aureen/the_odin_project/breadit/src/hooks/useCarousel.js",["496","497"],"import { useState, useEffect } from \"react\";\n\nfunction useCarousel(images) {\n  const [slides, setSlides] = useState([...images]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [transition, setTransition] = useState(-100 / slides.length);\n  const [transitionDuration, setTransitionDuration] = useState(0.3);\n  const [isNext, setIsNext] = useState(false); // Indicates the carousel direction (previous/next)\n\n  const previous = () => {\n    setIsNext(false);\n    setTransition((prev) => prev + 100 / slides.length);\n    setCurrentSlide((prev) => {\n      return prev === 0 ? slides.length - 1 : prev - 1;\n    });\n  };\n\n  const next = () => {\n    setIsNext(true);\n    setTransition((prev) => prev - 100 / slides.length);\n    setCurrentSlide((prev) => {\n      return prev === slides.length - 1 ? 0 : prev + 1;\n    });\n  };\n\n  /* At the end of each transition:\n  - The transition duration is set to 0. It allows us to silently reset transform: translateX to 0.\n  - The slides order is changed so that there is always a \"previous slide\" and a \"next slide\" to go to without jumping too far.\n  - Thanks to useEffect, the transition duration is put back to 0.3s to have a smooth animation.\n  */\n  const handleTransitionEnd = () => {\n    setTransitionDuration(0);\n    setTransition(-100 / slides.length);\n\n    if (isNext) {\n      setSlides((prev) => {\n        const slides = [...prev];\n        const prevSlide = slides.shift();\n        slides.push(prevSlide);\n        return slides;\n      });\n    } else {\n      setSlides((prev) => {\n        const slides = [...prev];\n        const lastSlide = slides.pop();\n        slides.unshift(lastSlide);\n        return slides;\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (transitionDuration === 0) {\n      setTransitionDuration(0.3);\n    }\n  }, [transitionDuration]);\n\n  return {\n    slides,\n    currentSlide,\n    transition,\n    transitionDuration,\n    previous,\n    next,\n    handleTransitionEnd,\n  };\n}\n\nexport default useCarousel;\n","/home/aureen/the_odin_project/breadit/src/routes/settings/UserSettings.jsx",["498"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useUser from \"../../hooks/useUser\";\nimport Email from \"../../components/user/settings/Email\";\nimport Password from \"../../components/user/settings/Password\";\nimport About from \"../../components/user/settings/About\";\nimport Images from \"../../components/user/settings/Images\";\nimport DeleteAccount from \"../../components/user/settings/DeleteAccount\";\n\nfunction UserSettings() {\n  const { currentUser } = useAuth();\n  const [user, setUser] = useState();\n  const { getUser } = useUser();\n\n  // Loads the user's current avatar, banner and about.\n  useEffect(() => {\n    (async () => {\n      const user = await getUser(currentUser.uid);\n      setUser(user.data());\n    })();\n  });\n\n  return (\n    <Wrapper>\n      <Container>\n        <Heading>User Settings</Heading>\n\n        <Category>Account preferences</Category>\n\n        <Setting>\n          <div>\n            <SettingType>Username</SettingType>\n            <div>{currentUser.displayName}</div>\n          </div>\n        </Setting>\n\n        <Setting>\n          <div>\n            <SettingType>Email address</SettingType>\n            <Message>{currentUser.email}</Message>\n          </div>\n          <Email />\n        </Setting>\n\n        <Setting>\n          <div>\n            <SettingType>Change Password</SettingType>\n            <Message>Password must be at least 6 characters long</Message>\n          </div>\n          <Password />\n        </Setting>\n\n        <Category>Profile Information</Category>\n\n        <AboutField>\n          <div>\n            <SettingType>About (optional)</SettingType>\n            <Message>\n              A brief description of yourself shown on your profile.\n            </Message>\n            {user && <About prevAbout={user.about} />}\n          </div>\n        </AboutField>\n\n        <Setting>\n          <div>\n            <SettingType>Avatar and banner image</SettingType>\n            <Message>Images must be .png or .jpg format</Message>\n            {user && (\n              <Images prevAvatar={user.avatar} prevBanner={user.banner} />\n            )}\n          </div>\n        </Setting>\n\n        <Category>Deactivate account</Category>\n\n        <Setting>\n          <div>\n            <SettingType>Account Removal</SettingType>\n            <Message>\n              If you delete your account, you will not be able to recover it.\n            </Message>\n          </div>\n          <DeleteAccount />\n        </Setting>\n      </Container>\n    </Wrapper>\n  );\n}\n\nexport default UserSettings;\n\nconst colors = {\n  primary: \"black\",\n  secondary: \"grey\",\n  accent: \"red\",\n  disabled: \"blue\",\n  background: \"white\",\n  overlay: \"rgba(0, 0, 0, .8)\",\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 3rem;\n  flex: 1;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 50rem;\n`;\n\nconst Heading = styled.h1`\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 3rem;\n  margin-bottom: 1rem;\n`;\n\nconst Category = styled.h2`\n  font-weight: 500;\n  font-size: 0.75rem;\n  text-transform: uppercase;\n  line-height: 1.5rem;\n  color: ${colors.secondary};\n  border-bottom: 1px solid ${colors.secondary};\n`;\n\nconst Setting = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 2rem 0;\n`;\n\nconst AboutField = styled.div`\n  margin: 2rem 0;\n`;\n\nconst SettingType = styled.h3`\n  font-weight: 500;\n  font-size: 1rem;\n  line-height: 2rem;\n`;\n\nconst Message = styled.div`\n  font-size: 0.75rem;\n  color: ${colors.secondary};\n  margin-bottom: 0.5rem;\n`;\n","/home/aureen/the_odin_project/breadit/src/hooks/useDropdown.js",["499"],"import { useState, useEffect } from \"react\";\n\nfunction useDropdown(ref) {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [current, setCurrent] = useState();\n\n  const handleChoice = (choice) => {\n    setCurrent(choice);\n    setIsDropdownOpen(false);\n  };\n\n  // Close dropdown if clicking outside\n  const handleClickOutside = (e) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      setIsDropdownOpen(false);\n    }\n  };\n\n  // Add event listener to close the dropdown on outside click when it is open.\n  useEffect(() => {\n    if (!isDropdownOpen) return;\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, [isDropdownOpen]);\n\n  return {\n    isDropdownOpen,\n    setIsDropdownOpen,\n    current,\n    handleChoice,\n  };\n}\n\nexport default useDropdown;\n","/home/aureen/the_odin_project/breadit/src/components/aside/Footer.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/aside/LatestPosts.jsx",["500","501","502","503","504","505"],"import { formatDistanceStrict } from \"date-fns\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport usePost from \"../../hooks/usePost\";\n\n// Icons\nimport { ReactComponent as IconPost } from \"../../assets/icons/general/icon-post.svg\";\nimport { ReactComponent as IconLink } from \"../../assets/icons/general/icon-link.svg\";\n\n// Loads and displays the 5 latest breadit posts.\nfunction LatestPosts() {\n  const [posts, setPosts] = useState();\n  const { getRecentPosts } = usePost();\n\n  useEffect(() => {\n    (async () => {\n      const recentPosts = await getRecentPosts(5);\n      setPosts(recentPosts);\n    })();\n  }, []);\n\n  return (\n    <Container>\n      <Heading>Recent Posts</Heading>\n      <PostsList>\n        {posts &&\n          posts.map((post) => {\n            return (\n              <Link key={post.id} to={`/b/${post.subreadit.name}/${post.id}`}>\n                <Post>\n                  <Preview>\n                    {post.type === \"link\" && <IconLink />}\n                    {post.type === \"post\" && <IconPost />}\n                    {post.type === \"image\" && (\n                      <Image src={post.content[0]} alt={post.title} />\n                    )}\n                  </Preview>\n                  <Text>\n                    <Title title={post.title}>{post.title}</Title>\n                    <Informations>\n                      {post.votes.sum} point\n                      {post.votes.sum !== 1 && post.votes.sum !== -1 && \"s\"} •{\" \"}\n                      {post.comments} comments •{\" \"}\n                      {formatDistanceStrict(\n                        new Date(post.date.seconds * 1000),\n                        new Date()\n                      )}\n                    </Informations>\n                  </Text>\n                </Post>\n              </Link>\n            );\n          })}\n      </PostsList>\n    </Container>\n  );\n}\n\nexport default LatestPosts;\n\nconst Container = styled.div`\n  padding: 1rem;\n  background: ${(props) => props.theme.backgroundSecondary};\n  border-radius: 5px;\n`;\n\nconst Heading = styled.h2`\n  font-size: 0.75rem;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-bottom: 1rem;\n`;\n\nconst PostsList = styled.ul`\n  margin: 0;\n  padding: 0;\n\n  & > * {\n    display: block;\n    margin-bottom: 1rem;\n    padding-bottom: 1rem;\n    border-bottom: 1px solid ${(props) => props.theme.border};\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n    padding-bottom: 0;\n    border-bottom: none;\n  }\n`;\n\nconst Post = styled.li`\n  display: flex;\n`;\n\nconst Preview = styled.div`\n  width: 4rem;\n  height: 3rem;\n  min-width: 4rem;\n  min-height: 3rem;\n  border: 1px solid ${(props) => props.theme.secondary};\n  border-radius: 5px;\n  margin-right: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: cover;\n`;\n\nconst Text = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst Title = styled.div`\n  font-weight: 500;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Informations = styled.div`\n  color: ${(props) => props.theme.secondary};\n  font-size: 0.75rem;\n`;\n","/home/aureen/the_odin_project/breadit/src/components/aside/Create.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/aside/SubreaditInfo.jsx",["506","507","508"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"date-fns\";\nimport useSubreadit from \"../../hooks/useSubreadit\";\n\nfunction SubreaditInfo({ subreaditId }) {\n  const [subreadit, setSubreadit] = useState();\n  const { getSubreaditById } = useSubreadit();\n\n  useEffect(() => {\n    if (!subreaditId) return;\n    (async () => {\n      const subreadit = await getSubreaditById(subreaditId);\n      setSubreadit(subreadit.data());\n    })();\n  }, []);\n\n  return (\n    <>\n      {subreadit && (\n        <Container>\n          <Banner src={subreadit.banner} alt={`${subreadit.name}'s banner`} />\n          <div>\n            <Icon src={subreadit.icon} alt={`${subreadit.name}'s icon`} />\n            <Heading>{subreadit.name}</Heading>\n          </div>\n          <p>{subreadit.description}</p>\n          <div>{subreadit.members.length} members</div>\n          <div>\n            {format(new Date(subreadit.date.seconds * 1000), \"MMM d, yyyy\")}\n          </div>\n        </Container>\n      )}\n    </>\n  );\n}\n\nSubreaditInfo.propTypes = {\n  subreaditId: PropTypes.string.isRequired,\n};\n\nexport default SubreaditInfo;\n\nconst Container = styled.div`\n  padding: 1rem;\n  background: ${(props) => props.theme.backgroundSecondary};\n  border-radius: 5px;\n`;\n\nconst Banner = styled.img`\n  max-width: 100%;\n  height: 3rem;\n`;\n\nconst Icon = styled.img`\n  width: 5rem;\n  height: 5rem;\n  border-radius: 50%;\n`;\n\nconst Heading = styled.h2``;\n","/home/aureen/the_odin_project/breadit/src/components/aside/SubreaditRules.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/aside/TopSubreadits.jsx",["509","510","511"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useSubscription } from \"../../contexts/SubscriptionContext\";\nimport useSubreadit from \"../../hooks/useSubreadit\";\n\nfunction TopSubreadits() {\n  const [subreadits, setSubreadits] = useState([]);\n  const [isHovered, setIsHovered] = useState();\n  const {\n    getPopularSubreadits,\n    joinSubreadit,\n    leaveSubreadit,\n  } = useSubreadit();\n  const { subscriptions } = useSubscription();\n  const { currentUser } = useAuth();\n\n  useEffect(() => {\n    (async () => {\n      const subreadits = await getPopularSubreadits();\n      setSubreadits(subreadits);\n    })();\n  }, []);\n\n  return (\n    <>\n      {subreadits.length !== 0 && (\n        <Container>\n          <Heading>Most popular communities</Heading>\n          <SubreaditsList>\n            {subreadits.map((subreadit) => {\n              return (\n                <Subreadit key={subreadit.id}>\n                  <Icon src={subreadit.icon} alt={`${subreadit.name}'s Icon`} />\n                  <div>\n                    <Name to={`/b/${subreadit.name}`}>\n                      b/\n                      {subreadit.name}\n                    </Name>\n                    <Small>\n                      {subreadit.members} member\n                      {subreadit.members !== 1 && \"s\"}\n                    </Small>\n                  </div>\n                  {subscriptions.filter(\n                    (subscription) => subscription.id === subreadit.id\n                  ).length === 0 ? (\n                    <ButtonFilled\n                      type=\"button\"\n                      onClick={() => joinSubreadit(currentUser.uid, subreadit)}\n                    >\n                      Join\n                    </ButtonFilled>\n                  ) : (\n                    <Button\n                      type=\"button\"\n                      onMouseEnter={() => setIsHovered(subreadit.id)}\n                      onMouseLeave={() => setIsHovered(\"\")}\n                      onClick={() => leaveSubreadit(currentUser.uid, subreadit)}\n                    >\n                      {isHovered === subreadit.id ? \"Leave\" : \"Joined\"}\n                    </Button>\n                  )}\n                </Subreadit>\n              );\n            })}\n          </SubreaditsList>\n        </Container>\n      )}\n    </>\n  );\n}\n\nexport default TopSubreadits;\n\nconst colors = {\n  background: \"white\",\n  secondary: \"grey\",\n  accent: \"red\",\n};\n\nconst Container = styled.div`\n  padding: 1rem;\n  background: ${(props) => props.theme.backgroundSecondary};\n  line-height: 1.25rem;\n`;\n\nconst Heading = styled.h3`\n  font-size: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst SubreaditsList = styled.ul`\n  & > li {\n    margin-bottom: 1rem;\n  }\n\n  & > li:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Subreadit = styled.li`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  align-items: center;\n  grid-gap: 1rem;\n`;\n\nconst Icon = styled.img`\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n`;\n\nconst Name = styled(Link)`\n  font-weight: 500;\n  font-size: 0.825rem;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Small = styled.div`\n  font-size: 0.75rem;\n  color: ${(props) => props.theme.secondary};\n`;\n\nconst Button = styled.button`\n  border: 1px solid ${(props) => props.theme.accent};\n  color: ${(props) => props.theme.accent};\n  border-radius: 5rem;\n  padding: 0.45rem 1.25rem;\n  font-weight: 500;\n  align-self: center;\n  width: 6rem;\n`;\n\nconst ButtonFilled = styled(Button)`\n  color: ${(props) => props.theme.backgroundSecondary};\n  background-color: ${(props) => props.theme.accent};\n  border: 1px solid ${(props) => props.theme.accent};\n\n  &::disabled {\n    background-color: ${(props) => props.theme.disabled};\n    border: 1px solid ${(props) => props.theme.disabled};\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/routes/settings/SubreaditSettings.jsx",["512","513","514","515","516","517","518","519","520","521","522","523","524","525"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport useStorage from \"../../hooks/useStorage\";\nimport useSubreadit from \"../../hooks/useSubreadit\";\nimport useSubreaditSettings from \"../../hooks/useSubreaditSettings\";\n\nfunction SubreaditSettings({ match }) {\n  const [subreadit, setSubreadit] = useState();\n  const [icon, setIcon] = useState();\n  const [banner, setBanner] = useState();\n  const [description, setDescription] = useState(\"\");\n  const [rules, setRules] = useState([\"\"]);\n  const { getSubreaditByName } = useSubreadit();\n  const {\n    updateIcon,\n    updateBanner,\n    updateDescription,\n    updateRules,\n  } = useSubreaditSettings();\n  const { uploadSubreaditImage } = useStorage();\n  const subreaditName = match.params.subreadit;\n\n  useEffect(() => {\n    (async () => {\n      const subreadit = await getSubreaditByName(subreaditName);\n      setSubreadit(subreadit);\n      setIcon(subreadit.icon);\n      setBanner(subreadit.banner);\n      setRules(subreadit.rules);\n      setDescription(subreadit.description);\n    })();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (icon !== subreadit.icon) updateIcon(icon, subreadit.id);\n    if (banner !== subreadit.banner) updateBanner(banner, subreadit.id);\n    if (description !== subreadit.description)\n      updateDescription(description, subreadit.id);\n    if (rules !== subreadit.rules) updateRules(rules, subreadit.id);\n  };\n\n  return (\n    <Wrapper>\n      <Container>\n        {subreadit && (\n          <form onSubmit={handleSubmit}>\n            <Heading>b/{subreaditName} Settings</Heading>\n            <Category>General Settings</Category>\n\n            <Setting>\n              <SettingType>Name</SettingType>\n              <div>{subreadit.name}</div>\n            </Setting>\n\n            <Setting>\n              <SettingType>Description</SettingType>\n              <label htmlFor=\"description\">\n                <Textarea\n                  id=\"description\"\n                  name=\"description\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)} />\n              </label>\n            </Setting>\n\n            <Setting>\n              <SettingType>Rules</SettingType>\n              {rules.map((rule, index) => {\n                return (\n                  <React.Fragment key={rule}>\n                    <div>{index + 1}</div>\n                    <label htmlFor=\"rules\">\n                      <Textarea\n                        id=\"rules\"\n                        name=\"rules\"\n                        value={rules[index]}\n                        onChange={(e) =>\n                          setRules((prev) => {\n                            const rules = [...prev];\n                            rules[index] = e.target.value;\n                            return rules;\n                          })}\n                      />\n                    </label>\n                    <Button\n                      type=\"button\"\n                      onClick={() => {\n                        setRules(prevRules => {\n                          const rules = [...prevRules];\n                          rules.splice(index, 1);\n                          return rules;\n                        });\n                      }}\n                    >\n                      x\n                    </Button>\n                  </React.Fragment>\n                );\n              })}\n              <Button\n                type=\"button\"\n                onClick={() => {\n                  setRules([...rules, \"\"]);\n                }}\n              >\n                Add a rule\n              </Button>\n            </Setting>\n\n            <Category>Appearance</Category>\n\n            <Setting>\n              <SettingType>Icon and banner image</SettingType>\n              <Message>Images must be .png or .jpg format</Message>\n              <ImageInput\n                type=\"file\"\n                id=\"Icon\"\n                name=\"Icon\"\n                accept=\"image/png, image/jpeg, image/jpg\"\n                onChange={async (e) => {\n                  if (e.target.files.length > 0) {\n                    const iconUrl = await uploadSubreaditImage(\n                      subreadit.id,\n                      e.target.files[0]\n                    );\n                    setIcon(iconUrl);\n                  }\n                }}\n              />\n              <label htmlFor=\"Icon\">\n                <Icon src={icon} alt=\"Current Icon\" />\n              </label>\n\n              <ImageInput\n                type=\"file\"\n                id=\"banner\"\n                name=\"banner\"\n                accept=\"image/png, image/jpeg, image/jpg\"\n                onChange={async (e) => {\n                  if (e.target.files.length > 0) {\n                    const bannerUrl = await uploadSubreaditImage(\n                      subreadit.id,\n                      e.target.files[0]\n                    );\n                    setBanner(bannerUrl);\n                  }\n                }}\n              />\n              <label htmlFor=\"banner\">\n                <Banner src={banner} alt=\"Current banner\" />\n              </label>\n            </Setting>\n            <Button type=\"submit\">Save Changes</Button>\n          </form>\n        )}\n      </Container>\n    </Wrapper>\n  );\n}\n\nSubreaditSettings.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      subreadit: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default SubreaditSettings;\n\nconst colors = {\n  primary: \"black\",\n  secondary: \"grey\",\n  accent: \"red\",\n  disabled: \"blue\",\n  background: \"white\",\n  overlay: \"rgba(0, 0, 0, .8)\",\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 3rem;\n  flex: 1;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 50rem;\n`;\n\nconst Heading = styled.h1`\n  font-weight: 500;\n  font-size: 1.5rem;\n  line-height: 3rem;\n  margin-bottom: 1rem;\n`;\n\nconst Category = styled.h2`\n  font-weight: 500;\n  font-size: 0.75rem;\n  text-transform: uppercase;\n  line-height: 1.5rem;\n  color: ${colors.secondary};\n  border-bottom: 1px solid ${colors.secondary};\n`;\n\nconst Setting = styled.div`\n  margin: 2rem 0;\n`;\n\nconst SettingType = styled.h3`\n  font-weight: 500;\n  font-size: 1rem;\n  line-height: 2rem;\n`;\n\nconst Message = styled.div`\n  font-size: 0.75rem;\n  color: ${colors.secondary};\n  margin-bottom: 0.5rem;\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n`;\n\nconst Button = styled.button`\n  border: 1px solid ${colors.accent};\n  color: ${colors.accent};\n  border-radius: 5rem;\n  padding: 0.45rem 1.25rem;\n  font-weight: 500;\n  align-self: center;\n`;\n\nconst ImageInput = styled.input`\n  display: none;\n`;\n\nconst Icon = styled.img`\n  width: 5rem;\n  height: 5rem;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nconst Banner = styled.img`\n  width: 15rem;\n  height: 5rem;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","/home/aureen/the_odin_project/breadit/src/hooks/useSubreaditSettings.js",["526"],"import { firestore } from \"../firebase\";\nimport useStorage from \"./useStorage\";\n\nfunction useSubreaditSettings() {\n  const { uploadSubreaditImage } = useStorage();\n\n  const updateIcon = async (image, subreaditId) => {\n    firestore.collection(\"subreadits\").doc(subreaditId).update({\n      icon: image,\n    });\n  };\n\n  const updateBanner = async (image, subreaditId) => {\n    firestore.collection(\"subreadits\").doc(subreaditId).update({\n      banner: image,\n    });\n  };\n\n  const updateDescription = (description, subreaditId) => {\n    return firestore.collection(\"subreadits\").doc(subreaditId).update({\n      description,\n    });\n  };\n\n  const updateRules = (rules, subreaditId) => {\n    return firestore.collection(\"subreadits\").doc(subreaditId).update({\n      rules,\n    });\n  };\n\n  return {\n    updateIcon,\n    updateBanner,\n    updateDescription,\n    updateRules,\n  };\n}\n\nexport default useSubreaditSettings;\n","/home/aureen/the_odin_project/breadit/src/contexts/SubscriptionContext.jsx",["527","528"],"import React, { useContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { firestore } from \"../firebase\";\nimport { useAuth } from \"./AuthContext\";\n\nconst SubscriptionContext = React.createContext();\n\nexport function useSubscription() {\n  return useContext(SubscriptionContext);\n}\n\nexport function SubscriptionProvider({ children }) {\n  const { currentUser } = useAuth();\n  const [subscriptions, setSubscriptions] = useState([]);\n\n  const getSubscriptions = async (userId) => {\n    const subscriptionsArr = [];\n    const subreadits = await firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"subreadits\")\n      .get();\n    subreadits.docs.forEach((subreadit) => subscriptionsArr.push(subreadit.id));\n    return subscriptionsArr;\n  };\n\n  useEffect(() => {\n    if (!currentUser) {\n      setSubscriptions([]);\n      return;\n    }\n    const unsubscribe = firestore\n      .collection(\"users\")\n      .doc(currentUser.uid)\n      .collection(\"subreadits\")\n      .onSnapshot(async () => {\n        const subscriptions = await getSubscriptions(currentUser.uid);\n        setSubscriptions(subscriptions);\n      });\n    return unsubscribe;\n  }, [currentUser]);\n\n  const value = {\n    subscriptions,\n  };\n\n  SubscriptionProvider.propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n\n  return (\n    <SubscriptionContext.Provider value={value}>\n      {children}\n    </SubscriptionContext.Provider>\n  );\n}\n","/home/aureen/the_odin_project/breadit/src/components/header/Header.jsx",["529"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport Entry from \"../entry/Entry\";\nimport NavDropdown from \"./NavDropdown\";\nimport UserDropdown from \"./UserDropdown\";\nimport LinkInbox from \"./LinkInbox\";\n\n// Icons\nimport { ReactComponent as IconHome } from \"../../assets/icons/header/icon-home.svg\";\nimport { ReactComponent as IconFeed } from \"../../assets/icons/header/icon-feed.svg\";\nimport { ReactComponent as IconPost } from \"../../assets/icons/header/icon-post.svg\";\n\nfunction Header() {\n  const { currentUser } = useAuth();\n  const [isLogInModalOpen, setIsLogInModalOpen] = useState(false);\n  const [isSignUpModalOpen, setIsSignUpModalOpen] = useState(false);\n\n  return (\n    <Container>\n      <div>{/* TO-DO : Add Breadit Icon */}</div>\n\n      {currentUser && <NavDropdown />}\n\n      <Buttons>\n        {currentUser ? (\n          <>\n            <LinkIcon to=\"/\" data-tip=\"My Feed\">\n              <IconHome />\n            </LinkIcon>\n            <LinkIcon to=\"/b/all\" data-tip=\"All\">\n              <IconFeed />\n            </LinkIcon>\n            <LinkIcon to=\"/submit\" data-tip=\"Create Post\">\n              <IconPost />\n            </LinkIcon>\n            <LinkInbox />\n            <ReactTooltip effect=\"solid\" delayShow={300} />\n          </>\n        ) : (\n          <>\n            <Button type=\"button\" onClick={() => setIsLogInModalOpen(true)}>\n              Log In\n            </Button>\n            <ButtonFilled\n              type=\"button\"\n              onClick={() => setIsSignUpModalOpen(true)}\n            >\n              Sign Up\n            </ButtonFilled>\n          </>\n        )}\n      </Buttons>\n\n      <UserDropdown />\n\n      {isLogInModalOpen && (\n        <Entry close={() => setIsLogInModalOpen(false)} entryTab=\"signIn\" />\n      )}\n\n      {isSignUpModalOpen && (\n        <Entry close={() => setIsSignUpModalOpen(false)} entryTab=\"signUp\" />\n      )}\n    </Container>\n  );\n}\n\nexport default Header;\n\nconst Container = styled.header`\n  display: flex;\n  z-index: 5;\n  background: ${props => props.theme.backgroundQuaternary};\n`;\n\nconst Buttons = styled.div``;\n\nconst Button = styled.button`\n  width: 8rem;\n`;\n\nconst ButtonFilled = styled(Button)``;\n\nconst LinkIcon = styled(Link)``;\n","/home/aureen/the_odin_project/breadit/src/components/header/UserDropdown.jsx",["530","531"],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useDropdown from \"../../hooks/useDropdown\";\nimport useUser from \"../../hooks/useUser\";\nimport Entry from \"../entry/Entry\";\n\n// Icons\nimport { ReactComponent as IconUser } from \"../../assets/icons/header/icon-user.svg\";\nimport { ReactComponent as IconSettings } from \"../../assets/icons/header/icon-settings.svg\";\nimport { ReactComponent as IconLight } from \"../../assets/icons/header/icon-light.svg\";\nimport { ReactComponent as IconLogOut } from \"../../assets/icons/header/icon-logout.svg\";\nimport { ReactComponent as IconLogIn } from \"../../assets/icons/header/icon-login.svg\";\n\nfunction UserDropdown() {\n  const { currentUser, signOut } = useAuth();\n  const dropdownRef = useRef();\n  const { isDropdownOpen, setIsDropdownOpen } = useDropdown(dropdownRef);\n  const { getUser, getKarma } = useUser();\n  const [isEntryModalOpen, setIsEntryModalOpen] = useState(false);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      if (!currentUser) {\n        setUser(null);\n      } else {\n        const data = await getUser(currentUser.uid);\n        const karma = await getKarma(currentUser.uid);\n        setUser({ ...data.data(), karma });\n      }\n    })();\n  }, [currentUser]);\n\n  return (\n    <>\n      <Dropdown ref={dropdownRef}>\n        <DropdownHeader\n          isDropdownOpen={isDropdownOpen}\n          onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n        >\n          {user ? (\n            <User>\n              <Icon src={user.avatar} alt={`${user.name}'s avatar`} />\n              <Informations>\n                <Name>{user.username}</Name>\n                <div>{user.karma} karma</div>\n              </Informations>\n            </User>\n          ) : (\n            <IconUser />\n          )}\n        </DropdownHeader>\n        {isDropdownOpen && (\n          <DropdownList>\n            {currentUser && (\n              <>\n                <Category>My stuff</Category>\n                <Choice\n                  to={`/u/${currentUser.displayName}`}\n                  onClick={() => {\n                    setIsDropdownOpen(false);\n                  }}\n                >\n                  <IconUser />\n                  <div>Profile</div>\n                </Choice>\n                <Choice\n                  to=\"/settings\"\n                  onClick={() => {\n                    setIsDropdownOpen(false);\n                  }}\n                >\n                  <IconSettings />\n                  <div>User Settings</div>\n                </Choice>\n              </>\n            )}\n\n            <Category>View Options</Category>\n            <Choice\n              as=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setIsDropdownOpen(false);\n              }}\n            >\n              <IconLight />\n              <div>Night Mode</div>\n            </Choice>\n\n            {currentUser ? (\n              <Choice as=\"button\" type=\"button\" onClick={signOut}>\n                <IconLogOut />\n                <div>Log Out</div>\n              </Choice>\n            ) : (\n              <Choice\n                as=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setIsDropdownOpen(false);\n                  setIsEntryModalOpen(true);\n                }}\n              >\n                <IconLogIn />\n                <div>Log In / Sign Up</div>\n              </Choice>\n            )}\n          </DropdownList>\n        )}\n      </Dropdown>\n\n      {isEntryModalOpen && <Entry close={() => setIsEntryModalOpen(false)} />}\n    </>\n  );\n}\n\nexport default UserDropdown;\n\nconst Dropdown = styled.div`\n  position: relative;\n`;\n\nconst DropdownHeader = styled.button`\n  border: 1px solid ${(props) => props.theme.border};\n  cursor: pointer;\n  width: 15rem;\n`;\n\nconst DropdownList = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  background: ${(props) => props.theme.backgroundSecondary};\n  border: 1px solid ${(props) => props.theme.border};\n  padding-bottom: 1rem;\n  max-height: 30rem;\n  overflow: auto;\n  width: 15rem;\n`;\n\nconst Category = styled.div`\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 0.75rem;\n  margin: 1rem;\n`;\n\nconst Choice = styled(Link)`\n  display: grid;\n  grid-template-columns: 2rem 1fr;\n  grid-gap: 0.75rem;\n  align-items: center;\n  padding: 0.35rem 1.75rem;\n  justify-items: start;\n\n  &:hover {\n    background: ${(props) => props.theme.border};\n  }\n`;\n\nconst User = styled.div`\n  display: grid;\n  grid-template-columns: 2rem 1fr;\n  grid-gap: 1rem;\n  justify-items: start;\n  text-align: start;\n`;\n\nconst Informations = styled.div`\n  font-size: 0.75rem;\n`;\n\nconst Name = styled.div`\n  font-weight: 500;\n`;\n\nconst Icon = styled.img`\n  width: 2rem;\n  height: 2rem;\n  border-radius: 3px;\n`;\n","/home/aureen/the_odin_project/breadit/src/routes/feeds/Main.jsx",["532"],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useSubscription } from \"../../contexts/SubscriptionContext\";\nimport usePost from \"../../hooks/usePost\";\nimport useScroll from \"../../hooks/useScroll\";\nimport PostPreview from \"../../components/feed/PostPreview\";\nimport TopSubreadits from \"../../components/aside/TopSubreadits\";\nimport Create from \"../../components/aside/Create\";\nimport LatestPosts from \"../../components/aside/LatestPosts\";\nimport Footer from \"../../components/aside/Footer\";\nimport Sort from \"../../components/sort/Sort\";\n\nfunction Main() {\n  const [posts, setPosts] = useState([]);\n  const [sort, setSort] = useState(\"top\");\n  const { subscriptions } = useSubscription();\n  const {\n    getSubscriptionsPostsByVotes,\n    getSubscriptionsPostsByDate,\n  } = usePost();\n  const postsRef = useRef();\n  const { limit } = useScroll(postsRef, 10, 5);\n\n  // Loads the subscriptions posts depending on sort / limit.\n  useEffect(() => {\n    (async () => {\n      if (subscriptions.length === 0) return;\n      let posts;\n      if (sort === \"top\") {\n        posts = await getSubscriptionsPostsByVotes(subscriptions, limit);\n      } else {\n        posts = await getSubscriptionsPostsByDate(subscriptions, limit);\n      }\n      setPosts(posts);\n    })();\n  }, [subscriptions, sort, limit]);\n\n  return (\n    <>\n      <Container>\n        <Sort setSort={setSort} sort={sort} />\n        <PostsList ref={postsRef}>\n          {posts.map((post) => {\n            return <PostPreview key={post} postId={post} />;\n          })}\n        </PostsList>\n      </Container>\n      <Aside>\n        <TopSubreadits />\n        <Create />\n        <LatestPosts />\n        <Footer />\n      </Aside>\n    </>\n  );\n}\n\nexport default Main;\n\nconst Container = styled.div`\n  max-width: 40rem;\n  flex: 1;\n`;\n\nconst PostsList = styled.div`\n  & > * {\n    margin-bottom: 1rem;\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Aside = styled.aside`\n  max-width: 20rem;\n  margin-left: 3rem;\n\n  & > * {\n    margin-bottom: 1.5rem;\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/routes/feeds/All.jsx",["533","534"],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport usePost from \"../../hooks/usePost\";\nimport useScroll from \"../../hooks/useScroll\";\nimport PostPreview from \"../../components/feed/PostPreview\";\nimport TopSubreadits from \"../../components/aside/TopSubreadits\";\nimport Create from \"../../components/aside/Create\";\nimport LatestPosts from \"../../components/aside/LatestPosts\";\nimport Footer from \"../../components/aside/Footer\";\nimport Sort from \"../../components/sort/Sort\";\n\nfunction All() {\n  const [posts, setPosts] = useState([]);\n  const [sort, setSort] = useState(\"top\");\n  const { getPostsByVotes, getPostsByDate } = usePost();\n  const postsRef = useRef();\n  const { limit } = useScroll(postsRef, 10, 5);\n\n  useEffect(() => {\n    (async () => {\n      if (sort === \"top\") {\n        const posts = await getPostsByVotes(limit);\n        setPosts(posts);\n      } else {\n        const posts = await getPostsByDate(limit);\n        setPosts(posts);\n      }\n    })();\n  }, [sort, limit]);\n\n  return (\n    <>\n      <Container>\n        <Sort setSort={setSort} sort={sort} />\n        <PostsList ref={postsRef}>\n          {posts.map((post) => {\n            return <PostPreview key={post} postId={post} />;\n          })}\n        </PostsList>\n      </Container>\n      <Aside>\n        <TopSubreadits />\n        <Create />\n        <LatestPosts />\n        <Footer />\n      </Aside>\n    </>\n  );\n}\n\nexport default All;\n\nconst Container = styled.div`\n  max-width: 40rem;\n  flex: 1;\n`;\n\nconst PostsList = styled.div`\n  & > * {\n    margin-bottom: 1rem;\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Aside = styled.aside`\n  max-width: 20rem;\n  margin-left: 3rem;\n\n  & > * {\n    margin-bottom: 1.5rem;\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/routes/user/User.jsx",[],"/home/aureen/the_odin_project/breadit/src/routes/user/Overview.jsx",["535","536"],"import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport useUser from \"../../hooks/useUser\";\nimport usePost from \"../../hooks/usePost\";\nimport useScroll from \"../../hooks/useScroll\";\nimport useComment from \"../../hooks/useComment\";\nimport Post from \"../../components/user/content/Post\";\nimport Comment from \"../../components/user/content/Comment\";\n\nfunction Overview({ username }) {\n  const [comments, setComments] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [overview, setOverview] = useState([]);\n  const { getUserByName, getUserComments, getUserPosts } = useUser();\n  const { getCommentsNumber } = useComment();\n  const { getPost } = usePost();\n  const docsRef = useRef();\n  const { limit } = useScroll(docsRef, 20, 10);\n\n  useEffect(() => {\n    (async () => {\n      const user = await getUserByName(username);\n\n      // Get comments\n      let userComments = await getUserComments(user.id, limit);\n      userComments = await Promise.all(\n        userComments.map(async (comment) => {\n          const post = await getPost(comment.post);\n          return {\n            ...comment,\n            post: {\n              id: post.data().id,\n              author: post.data().author,\n              subreadit: post.data().subreadit,\n              title: post.data().title,\n            },\n          };\n        })\n      );\n      userComments = userComments.map((comment) => {\n        const votes = Object.keys(comment.votes).reduce(\n          (sum, current) => sum + current,\n          0\n        );\n        return { ...comment, votes };\n      });\n      setComments(userComments);\n\n      // Get posts\n      let posts = await getUserPosts(user.id, limit);\n      posts = await Promise.all(\n        posts.map(async (post) => {\n          const comments = await getCommentsNumber(post.id);\n          return { ...post, comments };\n        })\n      );\n      setPosts(posts);\n    })();\n  }, [limit]);\n\n  // Get overview by combining and sorting posts and comments\n  useEffect(() => {\n    setOverview(() => {\n      return [...comments]\n        .map((comment) => {\n          return { ...comment, type: \"comment\" };\n        })\n        .concat(\n          [...posts].map((post) => {\n            return { ...post, type: \"post\" };\n          })\n        )\n        .sort((a, b) => b.date.seconds - a.date.seconds);\n    });\n  }, [comments, posts]);\n\n  return (\n    <List ref={docsRef}>\n      {overview.map((article) => {\n        return article.type === \"post\" ? (\n          <Post\n            key={article.id}\n            author={article.author}\n            id={article.id}\n            subreadit={article.subreadit}\n            type={article.type}\n            title={article.title}\n            content={article.content}\n            date={article.date}\n            comments={article.comments}\n          />\n        ) : (\n          <Comment\n            key={article.id}\n            id={article.id}\n            author={article.author}\n            content={article.content}\n            date={article.date}\n            post={article.post}\n          />\n        );\n      })}\n    </List>\n  );\n}\n\nOverview.propTypes = {\n  username: PropTypes.string.isRequired,\n};\n\nexport default Overview;\n\nconst List = styled.div`\n  & > * {\n    margin-bottom: 0.5rem;\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/routes/user/Posts.jsx",["537"],"import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport useUser from \"../../hooks/useUser\";\nimport useScroll from \"../../hooks/useScroll\";\nimport useComment from \"../../hooks/useComment\";\nimport Post from \"../../components/user/content/Post\";\nimport Sort from \"../../components/sort/Sort\";\n\nfunction Posts({ username }) {\n  const [posts, setPosts] = useState([]);\n  const [sort, setSort] = useState(\"top\");\n  const { getUserByName, getUserPostsByVotes, getUserPostsByDate } = useUser();\n  const { getCommentsNumber } = useComment();\n  const postsRef = useRef();\n  const { limit } = useScroll(postsRef, 20, 10);\n\n  useEffect(() => {\n    (async () => {\n      const user = await getUserByName(username);\n      let posts;\n      if (sort === \"top\") {\n        posts = await getUserPostsByVotes(user.id, limit);\n      } else {\n        posts = await getUserPostsByDate(user.id, limit);\n      }\n\n      posts = await Promise.all(\n        posts.map(async (post) => {\n          const comments = await getCommentsNumber(post.id);\n          return { ...post, comments };\n        })\n      );\n      setPosts(posts);\n    })();\n  }, [sort, limit]);\n\n  return (\n    <>\n      <Sort setSort={setSort} sort={sort} />\n      <PostList ref={postsRef}>\n        {posts.map((post) => {\n          return (\n            <Post\n              key={post.id}\n              author={post.author}\n              id={post.id}\n              subreadit={post.subreadit}\n              type={post.type}\n              title={post.title}\n              content={post.content}\n              date={post.date}\n              comments={post.comments}\n            />\n          );\n        })}\n      </PostList>\n    </>\n  );\n}\n\nPosts.propTypes = {\n  username: PropTypes.string.isRequired,\n};\n\nexport default Posts;\n\nconst PostList = styled.div`\n  & > * {\n    margin-bottom: 0.5rem;\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/routes/user/Comments.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/sort/Sort.jsx",["538"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\n// Icons\nimport { ReactComponent as IconTop } from \"../../assets/icons/sort/icon-top.svg\";\nimport { ReactComponent as IconNew } from \"../../assets/icons/sort/icon-new.svg\";\n\nfunction Sort({ setSort, sort }) {\n  return (\n    <Container>\n      <Option\n        type=\"button\"\n        onClick={() => setSort(\"new\")}\n        isSelected={sort === \"new\"}\n      >\n        <IconNew />\n        New\n      </Option>\n      <Option\n        type=\"button\"\n        onClick={() => setSort(\"top\")}\n        isSelected={sort === \"top\"}\n      >\n        <IconTop />\n        Top\n      </Option>\n    </Container>\n  );\n}\n\nexport default Sort;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  background: ${(props) => props.theme.backgroundSecondary};\n  border: 1px solid ${(props) => props.theme.neutral};\n  margin: 1rem 0;\n  padding: 0.5rem 0;\n\n  &:hover {\n    border: 1px solid ${(props) => props.theme.borderHover};\n  }\n\n  @media all and (min-width: 768px) {\n    border-radius: 0.25rem;\n  }\n`;\n\nconst Option = styled.button`\n  display: flex;\n  align-items: center;\n  font-weight: ${(props) => props.isSelected && \"500\"};\n  color: ${(props) =>\n    props.isSelected ? props.theme.accent : props.theme.secondary};\n  background: ${(props) => props.isSelected && props.theme.backgroundTertiary};\n  padding: .25rem .85rem;\n  border-radius: 1rem;\n\n  & > svg {\n    margin-right: 0.5rem;\n  }\n`;\n\nSort.propTypes = {\n  setSort: PropTypes.func.isRequired,\n  sort: PropTypes.string,\n};\n\nSort.defaultProps = {\n  sort: \"new\",\n};\n","/home/aureen/the_odin_project/breadit/src/routes/feeds/Subreadit.jsx",["539","540","541"],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport useScroll from \"../../hooks/useScroll\";\nimport useSubreadit from \"../../hooks/useSubreadit\";\nimport PostPreview from \"../../components/feed/PostPreview\";\nimport SubreaditInfo from \"../../components/aside/SubreaditInfo\";\nimport SubreaditRules from \"../../components/aside/SubreaditRules\";\nimport Sort from \"../../components/sort/Sort\";\n\nfunction Subreadit({ match }) {\n  const [subreadit, setSubreadit] = useState();\n  const [sort, setSort] = useState(\"top\");\n  const [posts, setPosts] = useState([]);\n  const {\n    getSubreaditByName,\n    getSubreaditPostsByVotes,\n    getSubreaditPostsByDate,\n  } = useSubreadit();\n  const subreaditName = match.params.subreadit;\n  const postsRef = useRef();\n  const { limit } = useScroll(postsRef, 10, 5);\n\n  useEffect(() => {\n    (async () => {\n      const subreadit = await getSubreaditByName(subreaditName);\n      setSubreadit(subreadit);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      if (!subreadit) return;\n      if (sort === \"top\") {\n        const posts = await getSubreaditPostsByVotes(subreadit.id, limit);\n        setPosts(() => posts);\n      } else {\n        const posts = await getSubreaditPostsByDate(subreadit.id, limit);\n        setPosts(() => posts);\n      }\n    })();\n  }, [subreadit, sort, limit]);\n\n  return (\n    <>\n      <Container>\n        <Sort setSort={setSort} sort={sort} />\n        <PostsList ref={postsRef}>\n          {posts.map((post) => {\n            return <PostPreview key={post.id} postId={post.id} />;\n          })}\n        </PostsList>\n      </Container>\n      <Aside>\n        {subreadit && (\n          <>\n            <SubreaditInfo subreaditId={subreadit.id} />\n            <SubreaditRules subreaditId={subreadit.id} />\n          </>\n        )}\n      </Aside>\n    </>\n  );\n}\n\nSubreadit.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      subreadit: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Subreadit;\n\nconst Container = styled.main`\n  max-width: 40rem;\n  flex: 1;\n`;\n\nconst PostsList = styled.div`\n  & > * {\n    margin-bottom: 1rem;\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Aside = styled.aside`\n  max-width: 20rem;\n  margin-left: 3rem;\n`;\n","/home/aureen/the_odin_project/breadit/src/components/sort/SortDropdown.jsx",["542"],"/home/aureen/the_odin_project/breadit/src/components/header/NavDropdown.jsx",[],"/home/aureen/the_odin_project/breadit/src/hooks/useScroll.js",["543"],"import { useState, useEffect } from \"react\";\n\nfunction useScroll(ref, initial, step) {\n  const [limit, setLimit] = useState(initial);\n\n  const handleScroll = (e) => {\n    const bottom =\n      e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\n    if (bottom) {\n      setLimit((prev) => prev + step);\n    }\n  };\n\n  useEffect(() => {\n    if (!ref) return;\n\n    const scroll = () => {\n      const refBottom = ref.current.getBoundingClientRect().bottom;\n      const windowBottom = document.documentElement.clientHeight;\n\n      // If we haven't reached the end of the posts list, refBottom > windowBottom.\n      // If we scroll to the end of the posts list, then refBottom = windowBottom\n      // If we scroll past the end of the posts list, then refBottom < windowBottom.\n      if (refBottom <= windowBottom) {\n        setLimit((prev) => prev + step);\n      }\n    };\n\n    window.addEventListener(\"scroll\", scroll);\n    return () => window.removeEventListener(\"scroll\", scroll);\n  }, []);\n\n  return {\n    limit,\n    handleScroll,\n  };\n}\n\nexport default useScroll;\n","/home/aureen/the_odin_project/breadit/src/routes/content/Post.jsx",["544","545","546","547","548"],"/home/aureen/the_odin_project/breadit/src/routes/content/Comment.jsx",["549","550"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport usePost from \"../../hooks/usePost\";\nimport useComment from \"../../hooks/useComment\";\nimport PostContent from \"../../components/content/post/Post\";\nimport CommentTree from \"../../components/content/comment/Comment\";\n\nfunction Comment({ match }) {\n  const { subreadit, postId, commentId } = match.params;\n  const [post, setPost] = useState();\n  const [comment, setComment] = useState();\n  const { getPost } = usePost();\n  const { getComment } = useComment();\n\n  // Load the post itself\n  useEffect(() => {\n    (async () => {\n      const post = await getPost(postId);\n      setPost(post.data());\n    })();\n  }, []);\n\n  // Load the comment\n  useEffect(() => {\n    (async () => {\n      const comment = await getComment(commentId);\n      setComment(comment.data());\n    })();\n  }, []);\n\n  return (\n    <Container>\n      {post && <PostContent postId={postId} subreadit={subreadit} />}\n      <Link to={`/b/${subreadit}/${postId}`}>View all comments</Link>\n      {comment && <CommentTree commentId={commentId} postId={postId} />}\n    </Container>\n  );\n}\n\nComment.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      postId: PropTypes.string,\n      subreadit: PropTypes.string,\n      commentId: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Comment;\n\nconst Container = styled.div``;\n","/home/aureen/the_odin_project/breadit/src/contexts/SaveContext.jsx",["551","552","553","554"],"import React, { useContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { firestore } from \"../firebase\";\nimport { useAuth } from \"./AuthContext\";\n\nconst SaveContext = React.createContext();\n\nexport function useSave() {\n  return useContext(SaveContext);\n}\n\nexport function SaveProvider({ children }) {\n  const { currentUser } = useAuth();\n  const [saved, setSaved] = useState([]);\n\n  // doc can be a post or a comment.\n  // We indicate whether it is a post or a comment in the \"type\"\n  // field to look for the document in the proper collection to\n  // display it in the \"Saved\" Tab.\n  const save = (userId, docId, type) => {\n    return firestore\n      .collection(\"saved\")\n      .doc(userId)\n      .collection(\"saved\")\n      .doc(docId)\n      .set({\n        id: docId,\n        date: new Date(),\n        type,\n      });\n  };\n\n  const unsave = (userId, docId) => {\n    return firestore\n      .collection(\"saved\")\n      .doc(userId)\n      .collection(\"saved\")\n      .doc(docId)\n      .delete();\n  };\n\n  const getSaved = async (userId) => {\n    const savedArr = [];\n    const saved = await firestore\n      .collection(\"saved\")\n      .doc(userId)\n      .collection(\"saved\")\n      .get();\n    saved.docs.forEach((doc) => savedArr.push(doc.data()));\n    return savedArr;\n  };\n\n  const getSavedIds = async (userId) => {\n    const savedArr = [];\n    const saved = await firestore\n      .collection(\"saved\")\n      .doc(userId)\n      .collection(\"saved\")\n      .get();\n    saved.docs.forEach((doc) => savedArr.push(doc.id));\n    return savedArr;\n  };\n\n  useEffect(() => {\n    if (!currentUser) {\n      setSaved([]);\n      return;\n    }\n    const unsubscribe = firestore\n      .collection(\"saved\")\n      .doc(currentUser.uid)\n      .collection(\"saved\")\n      .onSnapshot(async () => {\n        const saved = await getSavedIds(currentUser.uid);\n        setSaved(saved);\n      });\n    return unsubscribe;\n  }, [currentUser]);\n\n  const handleSave = (userId, docId, type) => {\n    if (saved.includes(docId)) {\n      unsave(userId, docId, type);\n    } else {\n      save(userId, docId, type);\n    }\n  };\n\n  const value = {\n    saved,\n    handleSave,\n    getSaved,\n  };\n\n  SaveProvider.propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n\n  return <SaveContext.Provider value={value}>{children}</SaveContext.Provider>;\n}\n","/home/aureen/the_odin_project/breadit/src/routes/user/Saved.jsx",["555"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useSave } from \"../../contexts/SaveContext\";\nimport usePost from \"../../hooks/usePost\";\nimport useComment from \"../../hooks/useComment\";\nimport Post from \"../../components/user/content/Post\";\nimport Comment from \"../../components/user/content/Comment\";\n\nfunction Saved() {\n  const { currentUser } = useAuth();\n  const { saved, getSaved } = useSave();\n  const { getPost } = usePost();\n  const { getComment, getCommentsNumber } = useComment();\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    if (!currentUser.uid) return;\n    (async () => {\n      let saved = await getSaved(currentUser.uid);\n      saved = await Promise.all(\n        saved.map(async (doc) => {\n          if (doc.type === \"post\") {\n            const post = await getPost(doc.id);\n            const comments = await getCommentsNumber(post.data().id);\n            return { ...post.data(), comments };\n          }\n          const comment = await getComment(doc.id);\n          const post = await getPost(comment.data().post);\n          return {\n            ...comment.data(),\n            post: {\n              id: post.data().id,\n              author: post.data().author,\n              subreadit: post.data().subreadit,\n              title: post.data().title,\n            },\n          };\n        })\n      );\n      setDocs(saved);\n    })();\n  }, [saved]);\n\n  return (\n    <List>\n      {docs.map((article) => {\n        return article.type === \"post\" ? (\n          <Post\n            key={article.id}\n            author={article.author}\n            id={article.id}\n            subreadit={article.subreadit}\n            type={article.type}\n            title={article.title}\n            content={article.content}\n            date={article.date}\n            comments={article.comments}\n          />\n        ) : (\n          <Comment\n            key={article.id}\n            id={article.id}\n            author={article.author}\n            content={article.content}\n            date={article.date}\n            post={article.post}\n          />\n        );\n      })}\n    </List>\n  );\n}\n\nexport default Saved;\n\nconst List = styled.div`\n  & > * {\n    margin-bottom: 0.5rem;\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/components/user/settings/Email.jsx",["556","557","558","559"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useUserSettings from \"../../../hooks/useUserSettings\";\n\n// Icons\nimport { ReactComponent as IconClose } from \"../../../assets/icons/general/icon-x.svg\";\nimport { ReactComponent as IconMail } from \"../../../assets/icons/settings/icon-mail.svg\";\n\nfunction Email() {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { checkPassword, updateEmail } = useUserSettings();\n  const { currentUser } = useAuth();\n\n  const clear = () => {\n    setPasswordError(\"\");\n    setEmailError(\"\");\n    setMessage(\"\");\n  };\n\n  const closeModal = () => {\n    setPassword(\"\");\n    setEmail(\"\");\n    clear();\n    setIsModalOpen(false);\n  };\n\n  const handleUpdateEmail = async () => {\n    clear();\n    try {\n      await checkPassword(currentUser, currentUser.email, password);\n    } catch (err) {\n      switch (err) {\n        case \"auth/wrong-password\":\n          setPasswordError(\"The password is incorrect.\");\n          break;\n        default:\n          setPasswordError(\"The credential is invalid.\");\n      }\n      return;\n    }\n\n    try {\n      await updateEmail(currentUser, email);\n      setTimeout(() => closeModal(), 1000);\n    } catch (err) {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n          setEmailError(\"Not a well formed email address.\");\n          break;\n        case \"auth/email-already-in-use\":\n          setEmailError(\"This email is already registered.\");\n          break;\n        default:\n      }\n      setMessage(\"Sorry, we were unable to update your information.\");\n    }\n  };\n\n  return (\n    <>\n      <Button\n        type=\"button\"\n        onClick={() => {\n          setIsModalOpen(true);\n        }}\n      >\n        Change\n      </Button>\n\n      <SettingsModal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={{\n          overlay: {\n            backgroundColor: colors.overlay,\n          },\n        }}\n      >\n        <ButtonClose onClick={closeModal}>\n          <IconClose />\n        </ButtonClose>\n        <Subheading>\n          <IconMail />\n          Update your email\n        </Subheading>\n        <ModalText>\n          Update your email below by entering your new email address and current\n          password.\n        </ModalText>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleUpdateEmail();\n          }}\n        >\n          <div>\n            <label htmlFor=\"email_password\">\n              <Input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                id=\"email_password\"\n                name=\"email_password\"\n                placeholder=\"Current Password\"\n              />\n            </label>\n            <MessageError>{passwordError}</MessageError>\n          </div>\n\n          <div>\n            <label htmlFor=\"email\">\n              <Input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"New Email Address\"\n              />\n            </label>\n            <MessageError>{emailError}</MessageError>\n          </div>\n\n          <ButtonsRight>\n            <ButtonFilled type=\"submit\" disabled={!email || !password}>\n              Save email\n            </ButtonFilled>\n          </ButtonsRight>\n          <Message>{message}</Message>\n        </form>\n      </SettingsModal>\n    </>\n  );\n}\n\nexport default Email;\n\nconst colors = {\n  primary: \"black\",\n  secondary: \"grey\",\n  accent: \"red\",\n  disabled: \"blue\",\n  background: \"white\",\n  overlay: \"rgba(0, 0, 0, .8)\",\n};\n\nconst SettingsModal = styled(Modal)`\n  background: ${colors.background};\n  width: 100%;\n  max-width: 25rem;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 3rem;\n  border-radius: 5px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst ButtonsRight = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  & > * {\n    margin-left: 1rem;\n  }\n\n  & > *:first-child {\n    margin-left: 0;\n  }\n`;\n\nconst Button = styled.button`\n  border: 1px solid ${colors.accent};\n  color: ${colors.accent};\n  border-radius: 5rem;\n  padding: 0.45rem 1.25rem;\n  font-weight: 500;\n  align-self: center;\n`;\n\nconst ButtonFilled = styled(Button)`\n  color: ${colors.background};\n  background-color: ${colors.accent};\n  border: 1px solid ${colors.accent};\n\n  &::disabled {\n    background-color: ${colors.disabled};\n    border: 1px solid ${colors.disabled};\n  }\n`;\n\nconst Subheading = styled.h3`\n  font-weight: 500;\n  font-size: 1.25rem;\n  line-height: 2.5rem;\n  display: flex;\n  align-items: center;\n\n  & > svg {\n    margin-right: 1rem;\n  }\n`;\n\nconst Input = styled.input`\n  margin: 0.75rem 0;\n  width: 100%;\n  padding: 0.75rem;\n  border-radius: 3px;\n  border: 1px solid ${colors.border};\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${colors.accent};\n  }\n\n  &::placeholder {\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 0.75rem;\n  }\n`;\n\nconst ButtonClose = styled.span`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  cursor: pointer;\n`;\n\nconst ModalText = styled.p`\n  font-size: 1rem;\n  line-height: 1.25rem;\n  margin: 1rem 0;\n`;\n\nconst Message = styled.div`\n  font-size: 0.75rem;\n  color: ${colors.secondary};\n  margin-bottom: 0.5rem;\n`;\n\nconst MessageError = styled(Message)`\n  color: ${colors.error};\n  top: -0.5rem;\n`;","/home/aureen/the_odin_project/breadit/src/components/user/settings/Images.jsx",["560","561","562","563","564","565","566","567","568","569"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useUserSettings from \"../../../hooks/useUserSettings\";\nimport useStorage from \"../../../hooks/useStorage\";\n\nfunction Images({ prevAvatar, prevBanner }) {\n  const [avatar, setAvatar] = useState(prevAvatar);\n  const [banner, setBanner] = useState(prevBanner);\n  const { uploadImage } = useStorage();\n  const { updateAvatar, updateBanner } = useUserSettings();\n  const { currentUser } = useAuth();\n\n  const handleUpdateAvatar = async (image) => {\n    const imageUrl = await uploadImage(image);\n    updateAvatar(currentUser.uid, imageUrl);\n    setAvatar(imageUrl);\n  };\n\n  const handleUpdateBanner = async (image) => {\n    const imageUrl = await uploadImage(image);\n    updateBanner(currentUser.uid, imageUrl);\n    setBanner(imageUrl);\n  };\n\n  const deleteAvatar = () => {\n    updateAvatar(currentUser.uid, \"\");\n    setAvatar(\"\");\n  };\n\n  const deleteBanner = () => {\n    updateBanner(currentUser.uid, \"\");\n    setBanner(\"\");\n  };\n\n  return (\n    <Container>\n      <ImageInput\n        type=\"file\"\n        id=\"avatar\"\n        name=\"avatar\"\n        accept=\"image/png, image/jpeg, image/jpg\"\n        onChange={(e) => {\n          if (e.target.files.length > 0) handleUpdateAvatar(e.target.files[0]);\n        }}\n      />\n      <label htmlFor=\"avatar\">\n        <Avatar src={avatar} alt=\"Current avatar\">\n          {!avatar && <Message>Upload <strong>Avatar</strong></Message>}\n        </Avatar>\n      </label>\n\n      <ImageInput\n        type=\"file\"\n        id=\"banner\"\n        name=\"banner\"\n        accept=\"image/png, image/jpeg, image/jpg\"\n        onChange={(e) => {\n          if (e.target.files.length > 0) handleUpdateBanner(e.target.files[0]);\n        }}\n      />\n      <label htmlFor=\"banner\">\n        <Banner src={banner} alt=\"Current banner\">\n          {!banner && <Message>Drag and Drop or Upload <strong>Banner</strong> Image</Message>}\n        </Banner>\n      </label>\n    </Container>\n  );\n}\n\nImages.propTypes = {\n  prevAvatar: PropTypes.string,\n  prevBanner: PropTypes.string,\n};\n\nImages.defaultProps = {\n  prevAvatar: \"\",\n  prevBanner: \"\",\n};\n\nexport default Images;\nconst colors = {\n  background: \"grey\",\n  border: \"red\",\n  accent: \"red\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  margin-top: 1rem;\n\n  & > label {\n    margin-right: 2rem;\n  }\n\n  & > label:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst ImageInput = styled.input`\n  display: none;\n`;\n\nconst Image = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 5px;\n  cursor: pointer;\n  background: ${(props) =>\n    props.src ? `url(\"${props.src}\")` : colors.background};\n  border: ${(props) => !props.src && `1px dashed ${colors.border}`};\n  background-position: center;\n  background-size: cover;\n`;\n\nconst Avatar = styled(Image)`\n  width: 5rem;\n  height: 5rem;\n`;\n\nconst Banner = styled(Image)`\n  width: 15rem;\n  height: 5rem;\n`;\n\nconst Message = styled.div`\n`;","/home/aureen/the_odin_project/breadit/src/components/user/settings/Password.jsx",["570","571","572","573"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useUserSettings from \"../../../hooks/useUserSettings\";\n\n// Icons\nimport { ReactComponent as IconClose } from \"../../../assets/icons/general/icon-x.svg\";\nimport { ReactComponent as IconPassword } from \"../../../assets/icons/settings/icon-password.svg\";\n\nfunction Password() {\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [newPasswordError, setNewPasswordError] = useState(\"\");\n  const [newPasswordConfirmation, setNewPasswordConfirmation] = useState(\"\");\n  const [\n    newPasswordConfirmationError,\n    setNewPasswordConfirmationError,\n  ] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const {\n    checkPassword,\n    checkConfirmation,\n    updatePassword,\n  } = useUserSettings();\n  const { currentUser } = useAuth();\n\n  const clear = () => {\n    setPasswordError(\"\");\n    setNewPasswordError(\"\");\n    setNewPasswordConfirmationError(\"\");\n    setMessage(\"\");\n  };\n\n  const closeModal = () => {\n    setPassword(\"\");\n    setNewPassword(\"\");\n    setNewPasswordConfirmation(\"\");\n    clear();\n    setIsModalOpen(false);\n  };\n\n  const handleUpdatePassword = async () => {\n    try {\n      await checkPassword(currentUser, currentUser.email, password);\n    } catch (err) {\n      switch (err) {\n        case \"auth/wrong-password\":\n          setPasswordError(\"The password is incorrect.\");\n          break;\n        default:\n          setPasswordError(\"The credential is invalid.\");\n      }\n      return;\n    }\n\n    if (!checkConfirmation(newPassword, newPasswordConfirmation)) {\n      setNewPasswordError(\"New passwords do not match.\");\n      setNewPasswordConfirmationError(\"New passwords do not match.\");\n      return;\n    }\n\n    try {\n      await updatePassword(currentUser, newPassword);\n      closeModal();\n    } catch (err) {\n      switch (err.code) {\n        case \"weak-password\":\n          setNewPasswordError(\"Must be 6 or more in length.\");\n          break;\n        default:\n      }\n      setMessage(\"Sorry, we were unable to update your information.\");\n    }\n  };\n\n  return (\n    <>\n      <Button\n        type=\"button\"\n        onClick={() => {\n          setIsModalOpen(true);\n        }}\n      >\n        Change\n      </Button>\n\n      <SettingsModal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={{\n          overlay: {\n            backgroundColor: colors.overlay,\n          },\n        }}\n      >\n        <ButtonClose onClick={closeModal}>\n          <IconClose />\n        </ButtonClose>\n        <Subheading>\n          <IconPassword />\n          Update your password\n        </Subheading>\n        <ModalText>\n          Update your password below by entering your current and new passwords.\n        </ModalText>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleUpdatePassword();\n          }}\n        >\n          <div>\n            <label htmlFor=\"password_password\">\n              <Input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                id=\"email_password\"\n                name=\"email_password\"\n                placeholder=\"Current Password\"\n              />\n            </label>\n            <MessageError>{passwordError}</MessageError>\n          </div>\n\n          <div>\n            <label htmlFor=\"new_password\">\n              <Input\n                type=\"password\"\n                value={newPassword}\n                onChange={(e) => setNewPassword(e.target.value)}\n                id=\"new_password\"\n                name=\"new_password\"\n                placeholder=\"New Password\"\n              />\n            </label>\n            <MessageError>{newPasswordError}</MessageError>\n          </div>\n\n          <div>\n            <label htmlFor=\"new_password_confirmation\">\n              <Input\n                type=\"password\"\n                value={newPasswordConfirmation}\n                onChange={(e) => setNewPasswordConfirmation(e.target.value)}\n                id=\"new_password_confirmation\"\n                name=\"new_password_confirmation\"\n                placeholder=\"Confirm New Password\"\n              />\n            </label>\n            <MessageError>{newPasswordConfirmationError}</MessageError>\n          </div>\n\n          <ButtonsRight>\n            <ButtonFilled\n              type=\"submit\"\n              disabled={!newPassword || !password || !newPasswordConfirmation}\n            >\n              Save\n            </ButtonFilled>\n          </ButtonsRight>\n          <Message>{message}</Message>\n        </form>\n      </SettingsModal>\n    </>\n  );\n}\n\nexport default Password;\n\nconst colors = {\n  primary: \"black\",\n  secondary: \"grey\",\n  accent: \"red\",\n  disabled: \"blue\",\n  background: \"white\",\n  overlay: \"rgba(0, 0, 0, .8)\",\n};\n\nconst SettingsModal = styled(Modal)`\n  background: ${colors.background};\n  width: 100%;\n  max-width: 25rem;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 3rem;\n  border-radius: 5px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst ButtonsRight = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  & > * {\n    margin-left: 1rem;\n  }\n\n  & > *:first-child {\n    margin-left: 0;\n  }\n`;\n\nconst Button = styled.button`\n  border: 1px solid ${colors.accent};\n  color: ${colors.accent};\n  border-radius: 5rem;\n  padding: 0.45rem 1.25rem;\n  font-weight: 500;\n  align-self: center;\n`;\n\nconst ButtonFilled = styled(Button)`\n  color: ${colors.background};\n  background-color: ${colors.accent};\n  border: 1px solid ${colors.accent};\n\n  &::disabled {\n    background-color: ${colors.disabled};\n    border: 1px solid ${colors.disabled};\n  }\n`;\n\nconst Subheading = styled.h3`\n  font-weight: 500;\n  font-size: 1.25rem;\n  line-height: 2.5rem;\n  display: flex;\n  align-items: center;\n\n  & > svg {\n    margin-right: 1rem;\n  }\n`;\n\nconst Input = styled.input`\n  margin: 0.75rem 0;\n  width: 100%;\n  padding: 0.75rem;\n  border-radius: 3px;\n  border: 1px solid ${colors.border};\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${colors.accent};\n  }\n\n  &::placeholder {\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 0.75rem;\n  }\n`;\n\nconst ButtonClose = styled.span`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  cursor: pointer;\n`;\n\nconst ModalText = styled.p`\n  font-size: 1rem;\n  line-height: 1.25rem;\n  margin: 1rem 0;\n`;\n\nconst Message = styled.div`\n  font-size: 0.75rem;\n  color: ${colors.secondary};\n  margin-bottom: 0.5rem;\n`;\n\nconst MessageError = styled(Message)`\n  color: ${colors.error};\n  top: -0.5rem;\n`;\n","/home/aureen/the_odin_project/breadit/src/components/user/settings/DeleteAccount.jsx",["574","575","576","577"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useUserSettings from \"../../../hooks/useUserSettings\";\n\n// Icons\nimport { ReactComponent as IconClose } from \"../../../assets/icons/general/icon-x.svg\";\nimport { ReactComponent as IconDelete } from \"../../../assets/icons/settings/icon-delete.svg\";\n\nfunction DeleteAccount() {\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { checkPassword, deleteAccount } = useUserSettings();\n  const { currentUser } = useAuth();\n\n  const clear = () => {\n    setPasswordError(\"\");\n  };\n\n  const closeModal = () => {\n    setPassword(\"\");\n    clear();\n    setIsModalOpen(false);\n  };\n\n  const handleDeleteAccount = async () => {\n    try {\n      await checkPassword(currentUser, currentUser.email, password);\n    } catch (err) {\n      switch (err) {\n        case \"auth/wrong-password\":\n          setPasswordError(\"The password is incorrect.\");\n          break;\n        default:\n          setPasswordError(\"The credential is invalid.\");\n      }\n    }\n    deleteAccount(currentUser);\n  };\n\n  return (\n    <>\n      <Button type=\"button\" onClick={() => setIsModalOpen(true)}>\n        Delete\n      </Button>\n\n      <SettingsModal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={{\n          overlay: {\n            backgroundColor: colors.overlay,\n          },\n        }}\n      >\n        <ButtonClose onClick={closeModal}>\n          <IconClose />\n        </ButtonClose>\n        <Subheading>\n          <IconDelete />\n          Delete your account\n        </Subheading>\n        <ModalText>\n          Are you sure you would like to delete your account? <br />\n          You will be unable to recover it.\n        </ModalText>\n        <Message>\n          Deactivating your account will not delete the content of posts and\n          comments you've made on Breadit. To do so please delete them\n          individually.\n        </Message>\n\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleDeleteAccount();\n          }}\n        >\n          <div>\n            <label htmlFor=\"delete_password\">\n              <Input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                id=\"delete_password\"\n                name=\"delete_password\"\n                placeholder=\"Current Password\"\n              />\n            </label>\n            <MessageError>{passwordError}</MessageError>\n          </div>\n\n          <ButtonsRight>\n            <Button type=\"button\">Cancel</Button>\n            <ButtonFilled type=\"submit\">Delete</ButtonFilled>\n          </ButtonsRight>\n        </form>\n      </SettingsModal>\n    </>\n  );\n}\n\nexport default DeleteAccount;\n\nconst colors = {\n  primary: \"black\",\n  secondary: \"grey\",\n  accent: \"red\",\n  disabled: \"blue\",\n  background: \"white\",\n  overlay: \"rgba(0, 0, 0, .8)\",\n};\n\nconst SettingsModal = styled(Modal)`\n  background: ${colors.background};\n  width: 100%;\n  max-width: 25rem;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 3rem;\n  border-radius: 5px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst ButtonsRight = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  & > * {\n    margin-left: 1rem;\n  }\n\n  & > *:first-child {\n    margin-left: 0;\n  }\n`;\n\nconst Button = styled.button`\n  border: 1px solid ${colors.accent};\n  color: ${colors.accent};\n  border-radius: 5rem;\n  padding: 0.45rem 1.25rem;\n  font-weight: 500;\n  align-self: center;\n`;\n\nconst ButtonFilled = styled(Button)`\n  color: ${colors.background};\n  background-color: ${colors.accent};\n  border: 1px solid ${colors.accent};\n\n  &::disabled {\n    background-color: ${colors.disabled};\n    border: 1px solid ${colors.disabled};\n  }\n`;\n\nconst Subheading = styled.h3`\n  font-weight: 500;\n  font-size: 1.25rem;\n  line-height: 2.5rem;\n  display: flex;\n  align-items: center;\n\n  & > svg {\n    margin-right: 1rem;\n  }\n`;\n\nconst Input = styled.input`\n  margin: 0.75rem 0;\n  width: 100%;\n  padding: 0.75rem;\n  border-radius: 3px;\n  border: 1px solid ${colors.border};\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${colors.accent};\n  }\n\n  &::placeholder {\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 0.75rem;\n  }\n`;\n\nconst ButtonClose = styled.span`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  cursor: pointer;\n`;\n\nconst ModalText = styled.p`\n  font-size: 1rem;\n  line-height: 1.25rem;\n  margin: 1rem 0;\n`;\n\nconst Message = styled.div`\n  font-size: 0.75rem;\n  color: ${colors.secondary};\n  margin-bottom: 0.5rem;\n`;\n\nconst MessageError = styled(Message)`\n  color: ${colors.error};\n  top: -0.5rem;\n`;\n","/home/aureen/the_odin_project/breadit/src/components/user/settings/About.jsx",["578"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useUserSettings from \"../../../hooks/useUserSettings\";\n\nfunction About({ prevAbout }) {\n  const [about, setAbout] = useState(prevAbout);\n  const [message, setMessage] = useState(\"\");\n  const { currentUser } = useAuth();\n  const { updateAbout } = useUserSettings();\n\n  const handleUpdateAbout = async () => {\n    try {\n      updateAbout(currentUser.uid, about);\n      setMessage(\"Your description was successfully updated.\");\n    } catch (err) {\n      setMessage(\"Sorry, we were unable to update your description.\");\n    }\n  };\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleUpdateAbout();\n      }}\n    >\n      <label htmlFor=\"about\">\n        <Textarea\n          id=\"about\"\n          name=\"about\"\n          value={about}\n          onChange={(e) => setAbout(e.target.value)}\n        />\n      </label>\n      <Message>{message}</Message>\n      <ButtonsRight>\n        <ButtonFilled type=\"submit\">Save</ButtonFilled>\n      </ButtonsRight>\n    </form>\n  );\n}\n\nAbout.propTypes = {\n  prevAbout: PropTypes.string,\n};\n\nAbout.defaultProps = {\n  prevAbout: \"\",\n};\n\nexport default About;\n\nconst colors = {\n  primary: \"black\",\n  secondary: \"grey\",\n  accent: \"red\",\n  disabled: \"blue\",\n  background: \"white\",\n  overlay: \"rgba(0, 0, 0, .8)\",\n};\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  min-height: 8rem;\n`;\n\nconst Message = styled.div`\n  font-size: 0.75rem;\n  color: ${colors.secondary};\n  margin-bottom: 0.5rem;\n`;\n\nconst ButtonsRight = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  & > * {\n    margin-left: 1rem;\n  }\n\n  & > *:first-child {\n    margin-left: 0;\n  }\n`;\n\nconst Button = styled.button`\n  border: 1px solid ${colors.accent};\n  color: ${colors.accent};\n  border-radius: 5rem;\n  padding: 0.45rem 1.25rem;\n  font-weight: 500;\n  align-self: center;\n`;\n\nconst ButtonFilled = styled(Button)`\n  color: ${colors.background};\n  background-color: ${colors.accent};\n  border: 1px solid ${colors.accent};\n\n  &::disabled {\n    background-color: ${colors.disabled};\n    border: 1px solid ${colors.disabled};\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/components/user/Nav.jsx",[],"/home/aureen/the_odin_project/breadit/src/hooks/useNotification.js",["579"],"import { firestore } from \"../firebase\";\nimport useUser from \"./useUser\";\n\nfunction useNotification() {\n  const { getUserByName } = useUser();\n\n  const createNotification = async (user, type, document, content) => {\n    const ref = await firestore.collection(\"notifications\").doc();\n    ref.set({\n      user: {\n        id: user.id,\n        name: user.name,\n      },\n      type,\n      document,\n      content,\n      date: new Date(),\n      read: false,\n      id: ref.id,\n    });\n  };\n\n  const deleteNotification = (id) => {\n    return firestore.collection(\"notifications\").doc(id).delete();\n  };\n\n  const readNotifications = async (userId) => {\n    const query = await firestore\n      .collection(\"notifications\")\n      .where(\"user.id\", \"==\", userId)\n      .where(\"read\", \"==\", false)\n      .get();\n    query.forEach((doc) => doc.ref.update({ read: true }));\n  };\n\n  const getAllNotifications = async (userId) => {\n    const notificationsArr = [];\n    const notifications = await firestore\n      .collection(\"notifications\")\n      .where(\"user.id\", \"==\", userId)\n      .orderBy(\"date\")\n      .get();\n    notifications.docs.forEach((notification) =>\n      notificationsArr.push(notification.data())\n    );\n    return notificationsArr;\n  };\n\n  const getNotifications = async (userId, limit) => {\n    const notificationsArr = [];\n    const notifications = await firestore\n      .collection(\"notifications\")\n      .where(\"user.id\", \"==\", userId)\n      .orderBy(\"date\")\n      .limit(limit)\n      .get();\n    notifications.docs.forEach((notification) =>\n      notificationsArr.push(notification.data())\n    );\n    return notificationsArr;\n  };\n\n  const getNotificationsNumber = async (userId) => {\n    const notifications = await firestore\n      .collection(\"notifications\")\n      .where(\"user.id\", \"==\", userId)\n      .where(\"read\", \"==\", false)\n      .get();\n    return notifications.docs.length;\n  };\n\n  const notifyMention = async (author, content, id, data, type) => {\n    const MENTION_REGEX = /\\bu\\/[-_a-zA-Z0-9]+\\b/gi;\n    let matches = content.match(MENTION_REGEX) || [];\n    matches = matches.map((match) => match.slice(2).toLowerCase());\n    matches = matches.filter((match) => match !== author.toLowerCase()); // Delete author\n    matches = Array.from(new Set(matches)); // Delete duplicates.\n\n    // Look for the users\n    let mentionedUsers = await Promise.all(\n      matches.map(async (match) => {\n        const user = await getUserByName(match);\n        return user;\n      })\n    );\n\n    // If they haven't been found, we delete them from the mentionedUsers array.\n    mentionedUsers = mentionedUsers.filter((user) => user !== undefined);\n\n    mentionedUsers.map((user) => {\n      createNotification(\n        {\n          id: user.id,\n          name: user.username,\n        },\n        \"mention\",\n        { type, id },\n        data\n      );\n    });\n  };\n\n  const deleteNotificationListener = (userId, callback) => {\n    return firestore\n      .collection(\"notifications\")\n      .where(\"user.id\", \"==\", userId)\n      .onSnapshot(callback);\n  };\n\n  return {\n    createNotification,\n    deleteNotification,\n    readNotifications,\n    getNotifications,\n    getAllNotifications,\n    getNotificationsNumber,\n    notifyMention,\n    deleteNotificationListener,\n  };\n}\n\nexport default useNotification;\n","/home/aureen/the_odin_project/breadit/src/routes/inbox/Inbox.jsx",[],"/home/aureen/the_odin_project/breadit/src/routes/inbox/Overview.jsx",["580","581","582","583","584","585"],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useScroll from \"../../hooks/useScroll\";\nimport useMessage from \"../../hooks/useMessage\";\nimport useNotification from \"../../hooks/useNotification\";\nimport usePost from \"../../hooks/usePost\";\nimport useComment from \"../../hooks/useComment\";\nimport Message from \"../../components/inbox/messages/Message\";\nimport PostNotification from \"../../components/inbox/notifications/PostNotification\";\nimport CommentNotification from \"../../components/inbox/notifications/CommentNotification\";\n\nfunction Overview() {\n  const [notifications, setNotifications] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [all, setAll] = useState([]);\n  const [overview, setOverview] = useState([]);\n  const { currentUser } = useAuth();\n  const { getAllMessages, deleteMessageListener } = useMessage();\n  const { getAllNotifications, deleteNotificationListener } = useNotification();\n  const { getCommentsNumber } = useComment();\n  const { getPost } = usePost();\n  const listRef = useRef();\n  const { limit } = useScroll(listRef, 20, 10);\n\n  const formatNotifications = async (notifications) => {\n    return Promise.all(\n      notifications.map(async (notification) => {\n        if (notification.document.type === \"comment\") {\n          const post = await getPost(notification.content.post);\n          return { ...notification, post: post.data() };\n        }\n        const comments = await getCommentsNumber(notification.content.id);\n        const newNotification = { ...notification };\n        newNotification.content.comments = comments;\n        return newNotification;\n      })\n    );\n  };\n\n  // Gets messages and notifications.\n  useEffect(() => {\n    (async () => {\n      const messages = await getAllMessages(currentUser.uid);\n      setMessages(messages);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      let notifications = await getAllNotifications(currentUser.uid);\n      notifications = await formatNotifications(notifications);\n      setNotifications(notifications);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      setAll([...messages, ...notifications].sort((a, b) => b.date - a.date));\n    })();\n  }, [messages, notifications]);\n\n  // Loads more message after scrolling\n  useEffect(() => {\n    setOverview([...all].slice(0, limit));\n  }, [all, limit]);\n\n  // Refresh the list when the user deletes a notification.\n  useEffect(() => {\n    const callback = (snapshot) => {\n      snapshot.docChanges().forEach(async (change) => {\n        if (change.type === \"removed\") {\n          let notifications = await getAllNotifications(currentUser.uid, limit);\n          notifications = await formatNotifications(notifications);\n          setNotifications(notifications);\n        }\n      });\n    };\n    const unsubscribe = deleteNotificationListener(currentUser.uid, callback);\n    return unsubscribe;\n  }, []);\n\n  // Refresh the list when the user deletes a message.\n  useEffect(() => {\n    const callback = (snapshot) => {\n      snapshot.docChanges().forEach(async (change) => {\n        if (change.type === \"modified\" && change.doc.data().deleted) {\n          const received = await getAllMessages(currentUser.uid, limit);\n          setMessages(received);\n        }\n      });\n    };\n    const unsubscribe = deleteMessageListener(currentUser.uid, callback);\n    return unsubscribe;\n  }, []);\n\n  return (\n    <List ref={listRef}>\n      {overview.map((doc) => {\n        if (messages.includes(doc)) {\n          return (\n            <Message\n              key={doc.id}\n              id={doc.id}\n              sender={doc.sender}\n              content={doc.content}\n              date={doc.date}\n              isSent={false}\n            />\n          );\n        }\n        if (notifications.includes(doc)) {\n          return doc.document.type === \"post\" ? (\n            <PostNotification key={doc.id} id={doc.id} content={doc.content} />\n          ) : (\n            <CommentNotification\n              key={doc.id}\n              id={doc.id}\n              type={doc.type}\n              date={doc.date}\n              content={doc.content}\n              post={doc.post}\n            />\n          );\n        }\n      })}\n    </List>\n  );\n}\n\nexport default Overview;\n\nconst List = styled.div`\n  & > * {\n    margin-bottom: 0.5rem;\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/routes/inbox/Notifications.jsx",["586","587","588"],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useScroll from \"../../hooks/useScroll\";\nimport usePost from \"../../hooks/usePost\";\nimport useNotification from \"../../hooks/useNotification\";\nimport useComment from \"../../hooks/useComment\";\nimport PostNotification from \"../../components/inbox/notifications/PostNotification\";\nimport CommentNotification from \"../../components/inbox/notifications/CommentNotification\";\n\nfunction Notifications() {\n  const [notifications, setNotifications] = useState([]);\n  const { currentUser } = useAuth();\n  const { getNotifications, deleteNotificationListener } = useNotification();\n  const { getCommentsNumber } = useComment();\n  const { getPost } = usePost();\n  const listRef = useRef();\n  const { limit } = useScroll(listRef, 20, 10);\n\n  const formatNotifications = async (notifications) => {\n    return Promise.all(\n      notifications.map(async (notification) => {\n        if (notification.document.type === \"comment\") {\n          const post = await getPost(notification.content.post);\n          return { ...notification, post: post.data() };\n        }\n        const comments = await getCommentsNumber(notification.content.id);\n        const newNotification = { ...notification };\n        newNotification.content.comments = comments;\n        return newNotification;\n      })\n    );\n  };\n\n  useEffect(() => {\n    (async () => {\n      let notifications = await getNotifications(currentUser.uid, limit);\n      notifications = await formatNotifications(notifications);\n      setNotifications(notifications);\n    })();\n  }, [limit]);\n\n  useEffect(() => {\n    const callback = (snapshot) => {\n      snapshot.docChanges().forEach(async (change) => {\n        if (change.type === \"removed\") {\n          let notifications = await getNotifications(currentUser.uid, limit);\n          notifications = await formatNotifications(notifications);\n          setNotifications(notifications);\n        }\n      });\n    };\n    const unsubscribe = deleteNotificationListener(currentUser.uid, callback);\n    return unsubscribe;\n  }, []);\n\n  return (\n    <div>\n      <List ref={listRef}>\n        {notifications.map((notification) => {\n          return notification.document.type === \"post\" ? (\n            <PostNotification\n              key={notification.id}\n              id={notification.id}\n              content={notification.content}\n            />\n          ) : (\n            <CommentNotification\n              key={notification.id}\n              id={notification.id}\n              type={notification.type}\n              date={notification.date}\n              content={notification.content}\n              post={notification.post}\n            />\n          );\n        })}\n      </List>\n    </div>\n  );\n}\n\nexport default Notifications;\n\nconst List = styled.div`\n  & > * {\n    margin-bottom: 0.5rem;\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/components/inbox/Nav.jsx",[],"/home/aureen/the_odin_project/breadit/src/routes/create/CreateMessage.jsx",["589"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useMessage from \"../../hooks/useMessage\";\nimport useUser from \"../../hooks/useUser\";\nimport TextEditor from \"../../components/shared/TextEditor\";\n\nfunction CreateMessage() {\n  const [recipient, setRecipient] = useState(\"\");\n  const [recipientError, setRecipientError] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const { currentUser } = useAuth();\n  const { getUserByName } = useUser();\n  const { sendMessage } = useMessage();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Check if the recipient exists\n    const user = await getUserByName(recipient);\n    if (!user) {\n      setRecipientError(\"This user does not exist.\");\n      return;\n    }\n\n    try {\n      setRecipientError(\"\");\n      setMessage(\"\");\n      await sendMessage(\n        {\n          id: currentUser.uid,\n          name: currentUser.displayName,\n        },\n        {\n          id: user.id,\n          name: user.username,\n        },\n        content\n      );\n      setMessage(\"Your message has been sent.\");\n      setRecipient(\"\");\n      setContent(\"\");\n    } catch (err) {\n      setMessage(\"Sorry, we were unable to send your message.\");\n    }\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Field>\n          <label htmlFor=\"recipient\">\n            <Input\n              type=\"text\"\n              id=\"recipient\"\n              name=\"recipient\"\n              value={recipient}\n              placeholder=\"Username\"\n              onChange={(e) => setRecipient(e.target.value)}\n            />\n          </label>\n          <Error>{recipientError}</Error>\n        </Field>\n\n        <Field>\n          <TextEditor type=\"post\" sendContent={setContent} />\n        </Field>\n\n        <Button type=\"submit\" disabled={!(recipient && content)}>\n          Send\n        </Button>\n        <Message>{message}</Message>\n      </Form>\n    </Container>\n  );\n}\n\nexport default CreateMessage;\n\nconst Container = styled.main``;\n\nconst Form = styled.form``;\n\nconst Field = styled.div``;\n\nconst Input = styled.input``;\n\nconst Message = styled.div``;\n\nconst Error = styled(Message)``;\n\nconst Button = styled.button``;\n","/home/aureen/the_odin_project/breadit/src/hooks/useMessage.js",[],"/home/aureen/the_odin_project/breadit/src/routes/inbox/messages/Messages.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/inbox/notifications/PostNotification.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/inbox/notifications/CommentNotification.jsx",[],"/home/aureen/the_odin_project/breadit/src/routes/inbox/messages/Received.jsx",[],"/home/aureen/the_odin_project/breadit/src/routes/inbox/messages/Sent.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/inbox/messages/Nav.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/inbox/messages/Message.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/header/LinkInbox.jsx",["590"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useMessage from \"../../hooks/useMessage\";\nimport useNotification from \"../../hooks/useNotification\";\n\n// Icons\nimport { ReactComponent as IconInbox } from \"../../assets/icons/header/icon-inbox.svg\";\n\nfunction LinkInbox() {\n  const { currentUser } = useAuth();\n  const [number, setNumber] = useState(0);\n  const { getNotificationsNumber, readNotifications } = useNotification();\n  const { getUnreadNumber, readMessages } = useMessage();\n\n  useEffect(() => {\n    (async () => {\n      const notifications = await getNotificationsNumber(currentUser.uid);\n      const messages = await getUnreadNumber(currentUser.uid);\n      setNumber(notifications + messages);\n    })();\n  }, []);\n\n  const handleRead = () => {\n    readNotifications(currentUser.uid);\n    readMessages(currentUser.uid);\n    setNumber(0);\n  };\n\n  return (\n    <LinkIcon to=\"/inbox\" data-tip=\"Inbox\" onClick={handleRead}>\n      {number !== 0 && <Number>{number}</Number>}\n      <IconInbox />\n    </LinkIcon>\n  );\n}\n\nexport default LinkInbox;\n\nconst LinkIcon = styled(Link)`\n  position: relative;\n`;\n\nconst Number = styled.div`\n  position: absolute;\n  top: -1rem;\n  right: -.5rem;\n  width: 1rem;\n  height: 1rem;\n  border-radius: 50%;\n  background: ${(props) => props.theme.accent};\n  color: white;\n  font-size: 0.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","/home/aureen/the_odin_project/breadit/src/components/feed/PostPreview.jsx",["591","592"],"/home/aureen/the_odin_project/breadit/src/components/shared/TextEditor.jsx",["593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608"],"/home/aureen/the_odin_project/breadit/src/components/user/aside/Profile.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/user/content/Comment.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/user/content/Post.jsx",["609","610","611","612","613"],"import React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport formatDistanceStrict from \"date-fns/formatDistanceStrict\";\nimport Modal from \"react-modal\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useVote from \"../../../hooks/useVote\";\nimport Entry from \"../../entry/Entry\";\n\n// Icons\nimport { ReactComponent as IconUp } from \"../../../assets/icons/general/icon-upvote.svg\";\nimport { ReactComponent as IconDown } from \"../../../assets/icons/general/icon-downvote.svg\";\nimport { ReactComponent as IconPost } from \"../../../assets/icons/general/icon-post.svg\";\nimport { ReactComponent as IconLink } from \"../../../assets/icons/general/icon-link.svg\";\nimport { ReactComponent as IconComment } from \"../../../assets/icons/general/icon-comment.svg\";\nimport { ReactComponent as IconSave } from \"../../../assets/icons/general/icon-save.svg\";\nimport { ReactComponent as IconHide } from \"../../../assets/icons/general/icon-hide.svg\";\nimport { ReactComponent as IconLinkSmall } from \"../../../assets/icons/general/icon-link-small.svg\";\n\nfunction Post({ author, id, title, subreadit, type, content, comments, date }) {\n  const { currentUser } = useAuth();\n  const [isEntryOpen, setIsEntryOpen] = useState(false);\n  const [isHidden, setIsHidden] = useState(false);\n  const { vote, votes, handleUpvote, handleDownvote } = useVote(\n    \"posts\",\n    id,\n    currentUser && currentUser.uid\n  );\n  const copyRef = useRef();\n\n  // Copy the post link\n  const copyLink = () => {\n    if (!copyRef) return;\n    copyRef.current.select();\n    copyRef.current.setSelectionRange(0, 99999);\n    document.execCommand(\"copy\");\n  };\n\n  return (\n    <>\n      {!isHidden && (\n        <Container>\n          <Vote>\n            <VoteButton\n              type=\"button\"\n              isUpvoted={vote === 1}\n              onClick={() => {\n                currentUser\n                  ? handleUpvote(\"posts\", id, currentUser.uid, vote)\n                  : setIsEntryOpen(true);\n              }}\n            >\n              <IconUp />\n            </VoteButton>\n            <span>{votes}</span>\n            <VoteButton\n              type=\"button\"\n              isDownvoted={vote === -1}\n              onClick={() => {\n                currentUser\n                  ? handleDownvote(\"posts\", id, currentUser.uid, vote)\n                  : setIsEntryOpen(true);\n              }}\n            >\n              <IconDown />\n            </VoteButton>\n          </Vote>\n          <Main to={`/b/${subreadit.name}/${id}`}>\n            <Link to={`/b/${subreadit.name}/${id}`}>\n              <Preview>\n                {type === \"link\" && <IconLink />}\n                {type === \"post\" && <IconPost />}\n                {type === \"image\" && <Image src={content[0]} alt={title} />}\n              </Preview>\n            </Link>\n            <div>\n              <Title>{title}</Title>\n              <Informations>\n                <Subreadit to={`/b/${subreadit.name}`}>\n                  b/\n                  {subreadit.name}\n                  &nbsp;\n                </Subreadit>\n                <span> • Posted by&nbsp;</span>\n                <InformationLink to={`/u/${author.id}`}>\n                  u/\n                  {author.name}\n                </InformationLink>\n                &nbsp;\n                <InformationLink to={`/b/${subreadit.name}/${id}`}>\n                  {formatDistanceStrict(\n                    new Date(date.seconds * 1000),\n                    new Date()\n                  )}\n                  &nbsp;ago\n                </InformationLink>\n              </Informations>\n              <Buttons>\n                <ButtonLink to={`/b/${subreadit.name}/${id}`}>\n                  <IconComment />\n                  {comments} Comment\n                  {comments !== 1 && \"s\"}\n                </ButtonLink>\n                <Button\n                  type=\"button\"\n                  onClick={(e) => {\n                    /* Avoid Link */\n                    e.preventDefault();\n                  }}\n                >\n                  <IconSave />\n                  Save\n                </Button>\n                <Button\n                  type=\"button\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setIsHidden(true);\n                  }}\n                >\n                  <IconHide />\n                  Hide\n                </Button>\n                <Button\n                  type=\"button\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    copyLink();\n                  }}\n                >\n                  <IconLinkSmall />\n                  Share\n                  <InputCopy\n                    type=\"text\"\n                    value={`https://breadit-296d8.web.app/b/${subreadit.name}/${id}`}\n                    ref={copyRef}\n                    readOnly\n                  />\n                </Button>\n              </Buttons>\n            </div>\n          </Main>\n\n          <EntryModal\n            isOpen={isEntryOpen}\n            onRequestClose={() => setIsEntryOpen(false)}\n          >\n            <Entry close={() => setIsEntryOpen(false)} />\n          </EntryModal>\n        </Container>\n      )}\n    </>\n  );\n}\n\nPost.propTypes = {\n  author: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  subreadit: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  content: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]).isRequired,\n  comments: PropTypes.number.isRequired,\n  date: PropTypes.shape({\n    seconds: PropTypes.number,\n  }).isRequired,\n};\n\nexport default Post;\n\nconst colors = {\n  background: \"white\",\n  primary: \"black\",\n  secondary: \"grey\",\n  preview: \"grey\",\n  border: \"grey\",\n  accent: \"red\",\n  voteBackground: \"rgb(247, 244, 240)\",\n  arrowBackground: \"rgb(237, 212, 194)\",\n  upvote: \"rgb(179, 72, 54)\",\n  downvote: \"rgb(70, 153, 147)\",\n  neutral: \"rgb(209, 163, 155)\",\n};\n\nconst Container = styled.article`\n  display: flex;\n  border: 1px solid ${colors.border};\n  background: ${colors.background};\n  cursor: pointer;\n\n  &:hover {\n    border: 1px solid ${colors.neutral};\n  }\n`;\n\nconst Vote = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: ${colors.voteBackground};\n  font-size: 0.75rem;\n  font-weight: 600;\n  padding: 0.25rem 0.5rem 0 0.5rem;\n\n  & > * {\n    margin-bottom: 0.25rem;\n  }\n`;\n\nconst VoteButton = styled.button`\n  color: ${(props) =>\n    props.isUpvoted\n      ? colors.upvote\n      : props.isDownvoted\n      ? colors.downvote\n      : colors.neutral};\n  cursor: pointer;\n  padding: 0;\n  border-radius: 0.15rem;\n  width: 1.5rem;\n  height: 1.5rem;\n\n  &:hover {\n    background: ${colors.arrowBackground};\n  }\n`;\n\nconst Main = styled(Link)`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  padding: 0 1rem;\n`;\n\nconst Preview = styled.div`\n  width: 5rem;\n  height: 3.5rem;\n  min-width: 5rem;\n  min-height: 3.5rem;\n  border: 1px solid ${colors.preview};\n  border-radius: 5px;\n  margin-right: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst Title = styled.div`\n  font-size: 1rem;\n  font-weight: 500;\n  line-height: 1.25rem;\n`;\n\nconst Informations = styled.div`\n  display: flex;\n  color: ${colors.secondary};\n  font-size: 0.75rem;\n`;\n\nconst InformationLink = styled(Link)`\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Subreadit = styled(Link)`\n  font-weight: 500;\n  color: ${colors.primary};\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Buttons = styled.div`\n  font-size: 0.75rem;\n  font-weight: 500;\n  color: ${colors.secondary};\n  display: flex;\n  align-items: stretch;\n  margin-top: 0.15rem;\n\n  & > * {\n    display: flex;\n    align-items: center;\n    padding: 0.15rem 0.5rem;\n    border-radius: 3px;\n  }\n\n  & > *:first-child {\n    margin-left: -0.15rem;\n  }\n\n  & > *:hover {\n    background: ${colors.voteBackground};\n  }\n`;\n\nconst Button = styled.button`\n  font-size: 0.75rem;\n  font-weight: 500;\n\n  & > *:first-child {\n    margin-right: 0.15rem;\n  }\n`;\n\nconst ButtonLink = styled(Link)`\n  & > *:first-child {\n    margin-right: 0.15rem;\n  }\n\n  & > a {\n    height: 100%;\n  }\n`;\n\nconst InputCopy = styled.input`\n  position: absolute;\n  top: -9999px;\n`;\n\nconst EntryModal = styled(Modal)`\n  width: 30rem;\n  height: 30rem;\n  border: 1px solid red;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;","/home/aureen/the_odin_project/breadit/src/components/feed/LinkPreview.jsx",["614","615","616","617","618"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport NestedPostPreview from \"./NestedPostPreview\";\n\n// Icons\nimport { ReactComponent as IconExternalLink } from \"../../assets/icons/general/icon-external-link.svg\";\nimport { ReactComponent as IconLink } from \"../../assets/icons/general/icon-link-med.svg\";\n\nfunction LinkPreview({ link, title }) {\n  const youtubeRegex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const breaditRegex = /^.*(breadit-296d8.web.app)\\/b\\/.+\\/([a-zA-Z0-9]+)/;\n\n  // Youtube Links\n  const getYoutubeId = (url) => {\n    const match = url.match(youtubeRegex);\n    return match && match[2].length === 11 ? match[2] : null;\n  };\n\n  const renderYoutubeLink = (link, title) => {\n    const videoId = getYoutubeId(link);\n    return (\n      <>\n        <Title>{title}</Title>\n        <Link href={link}>\n          <Url>{link}</Url>\n          <IconExternalLink />\n        </Link>\n        <VideoWrapper>\n          <iframe\n            title={link}\n            width=\"560\"\n            height=\"315\"\n            src={`https://www.youtube.com/embed/${videoId}`}\n            frameBorder=\"0\"\n            allowFullScreen\n          />\n        </VideoWrapper>\n      </>\n    );\n  };\n\n  // Breadit links\n  const renderBreaditLink = (url, title) => {\n    const match = url.match(breaditRegex);\n    if (match) {\n      return (\n        <>\n          <Title>{title}</Title>\n          <NestedPostPreview postId={match[2]} />\n        </>\n      );\n    }\n    return <></>;\n  };\n\n  return (\n    <div>\n      {/* Youtube links are detected through a regex and the video is embed. */}\n      {link.match(youtubeRegex) && renderYoutubeLink(link, title)}\n\n      {/* Breadit posts are detected through a regex and a post preview is displayed */}\n      {link.match(breaditRegex) && renderBreaditLink(link, title)}\n\n      {/* Any other type of link is only displayed along the title */}\n      {!link.match(youtubeRegex) && !link.match(breaditRegex) && (\n        <Row>\n          <div>\n            <Title>{title}</Title>\n            <Link href={link}>\n              <Url>{link}</Url>\n              <IconExternalLink />\n            </Link>\n          </div>\n          <a href={link}>\n            <Preview>\n              <IconLink />\n              <ExternalLinkIcon>\n                <IconExternalLink />\n              </ExternalLinkIcon>\n            </Preview>\n          </a>\n        </Row>\n      )}\n    </div>\n  );\n}\n\nLinkPreview.propTypes = {\n  link: PropTypes.string.isRequired,\n};\n\nexport default LinkPreview;\n\nconst Link = styled.a`\n  color: ${(props) => props.theme.accent};\n  font-size: 0.75rem;\n  display: flex;\n  align-items: center;\n  margin: 0 0 0.5rem 0.5rem;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Url = styled.span`\n  max-width: 12.5rem;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst Title = styled.h3`\n  font-size: 1.125rem;\n  font-weight: 500;\n  padding: 0.5rem;\n`;\n\nconst Row = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto;\n`;\n\nconst Preview = styled.div`\n  position: relative;\n  border: 1px solid ${(props) => props.theme.accent};\n  border-radius: 5px;\n  color: ${(props) => props.theme.accent};\n  width: 9rem;\n  height: 6rem;\n  margin-right: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ExternalLinkIcon = styled.div`\n  background: ${(props) => props.theme.accent};\n  color: ${(props) => props.theme.accent};\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  padding: 0.25rem;\n  border-radius: 4px;\n`;\n\nconst VideoWrapper = styled.div`\n  position: relative;\n  padding-bottom: 56.25%; /* 16:9 */\n  padding-top: 25px;\n  height: 0;\n\n  & iframe {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/components/feed/NestedPostPreview.jsx",["619","620","621","622","623","624","625","626","627","628","629"],"/* eslint-disable react/display-name */\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport formatDistanceStrict from \"date-fns/formatDistanceStrict\";\nimport { Link } from \"react-router-dom\";\nimport redraft from \"redraft\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useSubreadit from \"../../hooks/useSubreadit\";\nimport useComment from \"../../hooks/useComment\";\nimport usePost from \"../../hooks/usePost\";\nimport useVote from \"../../hooks/useVote\";\nimport Carousel from \"../content/shared/Carousel\";\nimport LinkPreview from \"./LinkPreview\";\nimport { renderers } from \"../shared/TextEditor\";\nimport \"../../styles/textEditor.css\";\n\nfunction NestedPostPreview({ postId }) {\n  const { currentUser } = useAuth();\n  const { getSubreaditById } = useSubreadit();\n  const { getPost } = usePost();\n  const { getCommentsNumber } = useComment();\n  const { votes } = useVote(\"posts\", postId, currentUser && currentUser.uid);\n  const [post, setPost] = useState();\n  const [subreadit, setSubreadit] = useState();\n  const [commentsNumber, setCommentsNumber] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const post = await getPost(postId);\n      setPost(post.data());\n      const subreadit = await getSubreaditById(post.data().subreadit);\n      setSubreadit(subreadit.data());\n      const comments = await getCommentsNumber(postId);\n      setCommentsNumber(comments);\n    })();\n  }, []);\n\n  // Helper functions to render content depending on its type\n  const renderText = (content, subreaditName, postId) => {\n    return (\n      <Link to={`/b/${subreaditName}/${postId}`}>\n        <Text>{redraft(JSON.parse(content), renderers)}</Text>\n      </Link>\n    );\n  };\n\n  const renderImages = (images, title) => {\n    return images.length > 1 ? (\n      <Carousel images={images} title={title} />\n    ) : (\n      <ImageContainer>\n        <Image src={images[0]} alt={title} />\n      </ImageContainer>\n    );\n  };\n\n  const renderLink = (link, title) => {\n    return <LinkPreview link={link} title={title} />;\n  };\n\n  return (\n    <>\n      {post && subreadit && (\n        <Link to={`/b/${subreadit.name}/${postId}`}>\n          <Container>\n            <Informations>\n              <Link to={`/b/${subreadit.name}`}>\n                <BoldPrimary>\n                  b/\n                  {subreadit.name}\n                </BoldPrimary>\n              </Link>\n              <span> • Posted by </span>\n              <Link to={`/user/${post.author.id}`}>\n                u/\n                {post.author.name}\n              </Link>\n{\" \"}\n              <Link to={`/b/${subreadit.name}/${postId}`}>\n                {formatDistanceStrict(\n                  new Date(post.date.seconds * 1000),\n                  new Date()\n                )}\n{\" \"}\n                ago\n              </Link>\n            </Informations>\n            {post.type !== \"link\" && (\n              <Link to={`/b/${subreadit.name}/${postId}`}>\n                <Title>{post.title}</Title>\n              </Link>\n            )}\n            <>\n              {post.type === \"post\" &&\n                renderText(post.content, subreadit.name, postId)}\n              {post.type === \"image\" && renderImages(post.content, post.title)}\n              {post.type === \"link\" && renderLink(post.content, post.title)}\n            </>\n            <Informations>\n              <Link to={`/b/${subreadit.name}/${postId}`}>{votes} points</Link>\n              <span> • </span>\n              <Link to={`/b/${subreadit.name}/${postId}`}>\n                {commentsNumber} comments\n              </Link>\n            </Informations>\n          </Container>\n        </Link>\n      )}\n    </>\n  );\n}\n\nNestedPostPreview.propTypes = {\n  postId: PropTypes.string.isRequired,\n};\nexport default NestedPostPreview;\n\nconst Container = styled.article`\n  border: 1px solid ${(props) => props.theme.neutral};\n  border-radius: 0.25rem;\n  margin: 1rem 0.5rem;\n\n  &:hover {\n    border: 1px solid ${(props) => props.theme.border};\n  }\n`;\n\nconst BoldPrimary = styled.div`\n  font-weight: 600;\n  color: ${(props) => props.theme.primary};\n`;\n\nconst Informations = styled.div`\n  display: flex;\n  font-size: 0.75rem;\n  color: ${(props) => props.theme.secondary};\n  padding: 0.5rem;\n\n  & > * {\n    margin-right: 0.25rem;\n  }\n\n  & > a:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Title = styled.h3`\n  font-size: 0.875rem;\n  font-weight: 500;\n  padding: 0 0.5rem 0.5rem 0.5rem;\n`;\n\nconst ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Image = styled.img`\n  max-height: 35rem;\n  max-width: 100%;\n  object-fit: cover;\n`;\n\nconst Text = styled.div`\n  position: relative;\n  max-height: 15rem;\n  overflow: hidden;\n  padding: 0 0.5rem;\n\n  &:before {\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    background: linear-gradient(transparent 10rem, white);\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/styles/global/globalStyles.js",[],"/home/aureen/the_odin_project/breadit/src/styles/themes/light.js",[],"/home/aureen/the_odin_project/breadit/src/components/content/post/Post.jsx",["630","631"],"/home/aureen/the_odin_project/breadit/src/components/content/comment/Comment.jsx",["632","633","634"],"/home/aureen/the_odin_project/breadit/src/components/content/post/Information.jsx",["635","636","637","638","639"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport formatDistanceStrict from \"date-fns/formatDistanceStrict\";\nimport { Link } from \"react-router-dom\";\nimport { useSubscription } from \"../../../contexts/SubscriptionContext\";\nimport useSubreadit from \"../../../hooks/useSubreadit\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\n\n// Icons\nimport { ReactComponent as IconPlus } from \"../../../assets/icons/general/icon-plus.svg\";\n\nfunction Information({ subreaditId, author, date, user }) {\n  const [subreadit, setSubreadit] = useState();\n  const { windowSize } = useWindowSize();\n  const { subscriptions } = useSubscription();\n  const { getSubreaditById, joinSubreadit } = useSubreadit();\n\n  useEffect(() => {\n    (async () => {\n      const subreadit = await getSubreaditById(subreaditId);\n      setSubreadit(subreadit.data());\n    })();\n  }, []);\n\n  return (\n    <>\n      {subreadit && (\n        <Container>\n          <Icon\n            src={subreadit.icon}\n            alt={`${subreadit.name}'s Icon`}\n          />\n          <SubreaditLink to={`/b/${subreadit.name}`}>\n            b/\n            {subreadit.name}\n          </SubreaditLink>\n          <Details>\n            {\" \"}\n            {windowSize.width > 768 && \"• \"}\n            Posted by{\" \"}\n            <Link to={`/user/${author}`}>\n              {\" \"}\n              u/\n              {author}{\" \"}\n            </Link>\n            {formatDistanceStrict(new Date(date.seconds * 1000), new Date())}{\" \"}\n            ago\n          </Details>\n          {!subscriptions.includes(subreadit.id) && (\n            <Button\n              onClick={(e) => {\n                e.preventDefault();\n                joinSubreadit(user.uid, subreadit);\n              }}\n            >\n              <IconPlus />\n              {windowSize.width > 768 && \"Join\"}\n            </Button>\n          )}\n        </Container>\n      )}\n    </>\n  );\n}\n\nexport default Information;\n\nInformation.propTypes = {\n  subreaditId: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  date: PropTypes.shape({\n    seconds: PropTypes.number,\n  }).isRequired,\n  user: PropTypes.shape({\n    uid: PropTypes.string,\n  }),\n};\n\nInformation.defaultProps = {\n  user: null,\n};\n\nconst Container = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template: repeat(2, auto) / auto 1fr auto;\n  font-size: 0.75rem;\n  color: ${(props) => props.theme.secondary};\n  padding: 0.5rem;\n\n  & > * {\n    margin-right: 0.25rem;\n  }\n\n  & > a:hover {\n    text-decoration: underline;\n  }\n\n  @media all and (min-width: 768px) {\n    grid-template: repeat(2, auto) / repeat(2, auto) 1fr auto;\n  }\n`;\n\nconst SubreaditLink = styled(Link)`\n  font-weight: 600;\n  color: ${(props) => props.theme.primary};\n  grid-row: 1;\n`;\n\nconst Details = styled.div`\n  grid-row: 2;\n  grid-column: 2;\n  line-height: 0.5rem;\n\n  @media all and (min-width: 768px) {\n    grid-row: 1;\n    grid-column: 3;\n  }\n`;\n\nconst Icon = styled.img`\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n  grid-row: 1 / span 2;\n  margin-right: 0.5rem;\n\n  @media all and (min-width: 768px) {\n    width: 1.5rem;\n    height: 1.5rem;\n    grid-row: 1;\n  }\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${(props) => props.theme.backgroundSecondary};\n  background-color: ${(props) => props.theme.accent};\n  border: 1px solid ${(props) => props.theme.accent};\n  border-radius: 5rem;\n  padding: 0.25rem;\n  font-weight: 500;\n  align-self: center;\n  text-align: center;\n  grid-row: 1 / span 2;\n  grid-column: -1;\n\n  @media all and (min-width: 768px) {\n    padding: 0.25rem 0.5rem 0.25rem 0.25rem;\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/hooks/useWindowSize.js",[],"/home/aureen/the_odin_project/breadit/src/components/content/post/Buttons.jsx",[],"/home/aureen/the_odin_project/breadit/src/components/content/shared/ModifyButtons.jsx",[],"/home/aureen/the_odin_project/breadit/src/utils/const.js",[],"/home/aureen/the_odin_project/breadit/src/components/content/shared/Carousel.jsx",["640","641","642"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport useCarousel from \"../../../hooks/useCarousel\";\n\n// Icons\nimport { ReactComponent as IconLeft } from \"../../../assets/icons/general/icon-left.svg\";\nimport { ReactComponent as IconRight } from \"../../../assets/icons/general/icon-right.svg\";\n\nfunction Carousel({ images, title }) {\n  const {\n    slides,\n    currentSlide,\n    transition,\n    transitionDuration,\n    previous,\n    next,\n    handleTransitionEnd,\n  } = useCarousel(images);\n  useCarousel(images);\n\n  return (\n    <Container>\n      <SlideNumber>\n        {currentSlide + 1}/{slides.length}\n      </SlideNumber>\n      <ButtonLeft\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          previous();\n        }}\n      >\n        <IconLeft />\n      </ButtonLeft>\n      <Slides\n        onTransitionEnd={handleTransitionEnd}\n        transition={transition}\n        transitionDuration={transitionDuration}\n        slides={slides.length}\n      >\n        {slides.map((image, index) => {\n          return (\n            <ImageContainer key={`${image}-${index}`}>\n              <Image src={image} alt={title} />\n            </ImageContainer>\n          );\n        })}\n      </Slides>\n      <ButtonRight\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          next();\n        }}\n      >\n        <IconRight />\n      </ButtonRight>\n    </Container>\n  );\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.images).isRequired,\n  title: PropTypes.string,\n};\n\nCarousel.defaultProps = {\n  title: \"\",\n};\n\nexport default Carousel;\n\nconst colors = {\n  \"button-shadow\": \"rgba(0, 0, 0, .2)\",\n  background: \"rgba(255, 255, 255)\",\n  \"slides-number\": \"rgba(0, 0, 0, .6)\",\n};\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst Slides = styled.div`\n  display: flex;\n  transition: transform ${(props) => props.transitionDuration}s linear;\n  transform: translateX(${(props) => props.transition}%);\n  width: ${(props) => props.slides * 100}%;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nconst Image = styled.img`\n  max-height: 35rem;\n  max-width: 100%;\n  object-fit: cover;\n  display: inline-block;\n  position: relative;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Button = styled.button`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  width: 2.5rem;\n  height: 2.5rem;\n  box-shadow: 0 0 10px ${colors[\"button-shadow\"]};\n  background: ${colors.background};\n  padding: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 1;\n`;\n\nconst ButtonLeft = styled(Button)`\n  left: 1rem;\n\n  @media all and (min-width: 768px) {\n    left: 2rem;\n  }\n`;\n\nconst ButtonRight = styled(Button)`\n  right: 1rem;\n\n  @media all and (min-width: 768px) {\n    right: 2rem;\n  }\n`;\n\nconst SlideNumber = styled.span`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  font-size: 0.75rem;\n  color: ${colors.background};\n  background: ${colors[\"slides-number\"]};\n  padding: 0.25rem 0.45rem;\n  border-radius: 50px;\n  z-index: 1;\n\n  @media all and (min-width: 768px) {\n    top: 1rem;\n    right: 1rem;\n  }\n`;\n","/home/aureen/the_odin_project/breadit/src/components/content/shared/Vote.jsx",["643","644","645","646"],"/home/aureen/the_odin_project/breadit/src/components/content/comment/Information.jsx",["647","648","649"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport formatDistanceStrict from \"date-fns/formatDistanceStrict\";\nimport { Link } from \"react-router-dom\";\nimport useUser from \"../../../hooks/useUser\";\n\nfunction Information({ author, date }) {\n  const [user, setUser] = useState();\n  const { getUser } = useUser();\n\n  // Gets the author informations (avatar, karma...)\n  useEffect(() => {\n    (async () => {\n      const user = await getUser(author.id);\n      setUser(user.data());\n    })();\n  }, []);\n\n  return (\n    <Container>\n      {user && <Icon src={user.avatar} alt={`${author.name}'s avatar`} />}\n      <AuthorLink to={`/u/${author.name}`}>{author.name}</AuthorLink>\n\n      <Secondary>\n        <span>&nbsp;•&nbsp;</span>\n        {formatDistanceStrict(new Date(date.seconds * 1000), new Date())}\n        {\" \"}\n      </Secondary>\n    </Container>\n  );\n}\n\nexport default Information;\n\nInformation.propTypes = {\n  author: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n  date: PropTypes.shape({\n    seconds: PropTypes.number,\n  }).isRequired,\n};\n\nconst Container = styled.div`\n  display: flex;\n  font-size: 0.75rem;\n`;\n\nconst Icon = styled.img`\n  width: 1.5rem;\n  height: 1.5rem;\n  border-radius: 50%;\n  margin-right: .5rem;\n`;\n\nconst AuthorLink = styled(Link)`\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Secondary = styled.div`\n  color: ${(props) => props.theme.secondary};\n`;\n","/home/aureen/the_odin_project/breadit/src/components/content/comment/Buttons.jsx",[],{"ruleId":"650","severity":2,"message":"651","line":3,"column":17,"nodeType":"652","endLine":3,"endColumn":28},{"ruleId":"653","replacedBy":"654"},{"ruleId":"655","replacedBy":"656"},{"ruleId":"657","replacedBy":"658"},{"ruleId":"659","replacedBy":"660"},{"ruleId":"661","replacedBy":"662"},{"ruleId":"663","severity":2,"message":"664","line":26,"column":18,"nodeType":"665","messageId":"666","endLine":26,"endColumn":27},{"ruleId":"663","severity":2,"message":"667","line":28,"column":10,"nodeType":"665","messageId":"666","endLine":28,"endColumn":19},{"ruleId":"668","severity":2,"message":"669","line":85,"column":49,"nodeType":"652","messageId":"670","endLine":85,"endColumn":50,"suggestions":"671"},{"ruleId":"668","severity":2,"message":"672","line":85,"column":51,"nodeType":"652","messageId":"670","endLine":85,"endColumn":52,"suggestions":"673"},{"ruleId":"668","severity":2,"message":"669","line":85,"column":90,"nodeType":"652","messageId":"670","endLine":85,"endColumn":91,"suggestions":"674"},{"ruleId":"668","severity":2,"message":"672","line":85,"column":92,"nodeType":"652","messageId":"670","endLine":85,"endColumn":93,"suggestions":"675"},{"ruleId":"668","severity":2,"message":"669","line":85,"column":123,"nodeType":"652","messageId":"670","endLine":85,"endColumn":124,"suggestions":"676"},{"ruleId":"668","severity":2,"message":"677","line":85,"column":127,"nodeType":"652","messageId":"670","endLine":85,"endColumn":128,"suggestions":"678"},{"ruleId":"668","severity":2,"message":"669","line":85,"column":146,"nodeType":"652","messageId":"670","endLine":85,"endColumn":147,"suggestions":"679"},{"ruleId":"680","severity":2,"message":"681","line":178,"column":15,"nodeType":"682","endLine":178,"endColumn":38},{"ruleId":"683","severity":2,"message":"684","line":185,"column":21,"nodeType":"685","messageId":"686","endLine":187,"endColumn":50},{"ruleId":"680","severity":2,"message":"681","line":249,"column":17,"nodeType":"682","endLine":249,"endColumn":39},{"ruleId":"663","severity":2,"message":"687","line":309,"column":7,"nodeType":"665","messageId":"666","endLine":309,"endColumn":13},{"ruleId":"688","severity":2,"message":"689","line":65,"column":20,"nodeType":"690","endLine":65,"endColumn":25,"fix":"691"},{"ruleId":"688","severity":2,"message":"689","line":79,"column":25,"nodeType":"690","endLine":79,"endColumn":30,"fix":"692"},{"ruleId":"688","severity":2,"message":"689","line":93,"column":30,"nodeType":"690","endLine":93,"endColumn":35,"fix":"693"},{"ruleId":"694","severity":2,"message":"695","line":17,"column":32,"nodeType":"665","messageId":"696","endLine":17,"endColumn":40},{"ruleId":"694","severity":2,"message":"697","line":31,"column":29,"nodeType":"665","messageId":"696","endLine":31,"endColumn":34},{"ruleId":"698","severity":2,"message":"699","line":31,"column":36,"nodeType":"700","messageId":"701"},{"ruleId":"694","severity":2,"message":"702","line":38,"column":26,"nodeType":"665","messageId":"696","endLine":38,"endColumn":34},{"ruleId":"694","severity":2,"message":"695","line":52,"column":25,"nodeType":"665","messageId":"696","endLine":52,"endColumn":33},{"ruleId":"694","severity":2,"message":"697","line":52,"column":35,"nodeType":"665","messageId":"696","endLine":52,"endColumn":40},{"ruleId":"694","severity":2,"message":"702","line":52,"column":42,"nodeType":"665","messageId":"696","endLine":52,"endColumn":50},{"ruleId":"694","severity":2,"message":"695","line":58,"column":31,"nodeType":"665","messageId":"696","endLine":58,"endColumn":39},{"ruleId":"694","severity":2,"message":"697","line":58,"column":41,"nodeType":"665","messageId":"696","endLine":58,"endColumn":46},{"ruleId":"694","severity":2,"message":"702","line":58,"column":48,"nodeType":"665","messageId":"696","endLine":58,"endColumn":56},{"ruleId":"703","severity":2,"message":"704","line":78,"column":20,"nodeType":null,"endLine":78,"endColumn":20,"fix":"705"},{"ruleId":"663","severity":2,"message":"706","line":8,"column":11,"nodeType":"665","messageId":"666","endLine":8,"endColumn":18},{"ruleId":"694","severity":2,"message":"707","line":11,"column":19,"nodeType":"665","messageId":"696","endLine":11,"endColumn":23},{"ruleId":"694","severity":2,"message":"708","line":11,"column":25,"nodeType":"665","messageId":"696","endLine":11,"endColumn":27},{"ruleId":"694","severity":2,"message":"709","line":11,"column":29,"nodeType":"665","messageId":"696","endLine":11,"endColumn":35},{"ruleId":"694","severity":2,"message":"707","line":20,"column":21,"nodeType":"665","messageId":"696","endLine":20,"endColumn":25},{"ruleId":"694","severity":2,"message":"708","line":20,"column":27,"nodeType":"665","messageId":"696","endLine":20,"endColumn":29},{"ruleId":"694","severity":2,"message":"709","line":20,"column":31,"nodeType":"665","messageId":"696","endLine":20,"endColumn":37},{"ruleId":"694","severity":2,"message":"707","line":29,"column":23,"nodeType":"665","messageId":"696","endLine":29,"endColumn":27},{"ruleId":"694","severity":2,"message":"708","line":29,"column":29,"nodeType":"665","messageId":"696","endLine":29,"endColumn":31},{"ruleId":"694","severity":2,"message":"709","line":29,"column":33,"nodeType":"665","messageId":"696","endLine":29,"endColumn":39},{"ruleId":"694","severity":2,"message":"707","line":39,"column":23,"nodeType":"665","messageId":"696","endLine":39,"endColumn":27},{"ruleId":"694","severity":2,"message":"708","line":39,"column":29,"nodeType":"665","messageId":"696","endLine":39,"endColumn":31},{"ruleId":"694","severity":2,"message":"707","line":48,"column":26,"nodeType":"665","messageId":"696","endLine":48,"endColumn":30},{"ruleId":"694","severity":2,"message":"708","line":48,"column":32,"nodeType":"665","messageId":"696","endLine":48,"endColumn":34},{"ruleId":"694","severity":2,"message":"709","line":48,"column":36,"nodeType":"665","messageId":"696","endLine":48,"endColumn":42},{"ruleId":"694","severity":2,"message":"707","line":53,"column":29,"nodeType":"665","messageId":"696","endLine":53,"endColumn":33},{"ruleId":"694","severity":2,"message":"708","line":53,"column":35,"nodeType":"665","messageId":"696","endLine":53,"endColumn":37},{"ruleId":"694","severity":2,"message":"707","line":62,"column":31,"nodeType":"665","messageId":"696","endLine":62,"endColumn":35},{"ruleId":"694","severity":2,"message":"708","line":62,"column":37,"nodeType":"665","messageId":"696","endLine":62,"endColumn":39},{"ruleId":"694","severity":2,"message":"709","line":62,"column":41,"nodeType":"665","messageId":"696","endLine":62,"endColumn":47},{"ruleId":"694","severity":2,"message":"710","line":62,"column":49,"nodeType":"665","messageId":"696","endLine":62,"endColumn":53},{"ruleId":"694","severity":2,"message":"707","line":92,"column":33,"nodeType":"665","messageId":"696","endLine":92,"endColumn":37},{"ruleId":"694","severity":2,"message":"708","line":92,"column":39,"nodeType":"665","messageId":"696","endLine":92,"endColumn":41},{"ruleId":"694","severity":2,"message":"709","line":92,"column":43,"nodeType":"665","messageId":"696","endLine":92,"endColumn":49},{"ruleId":"694","severity":2,"message":"710","line":92,"column":51,"nodeType":"665","messageId":"696","endLine":92,"endColumn":55},{"ruleId":"663","severity":2,"message":"711","line":1,"column":10,"nodeType":"665","messageId":"666","endLine":1,"endColumn":18},{"ruleId":"663","severity":2,"message":"712","line":1,"column":20,"nodeType":"665","messageId":"666","endLine":1,"endColumn":29},{"ruleId":"663","severity":2,"message":"713","line":4,"column":8,"nodeType":"665","messageId":"666","endLine":4,"endColumn":18},{"ruleId":"698","severity":2,"message":"699","line":8,"column":55,"nodeType":"700","messageId":"701"},{"ruleId":"703","severity":2,"message":"714","line":34,"column":4,"nodeType":null,"endLine":34,"endColumn":4,"fix":"715"},{"ruleId":"663","severity":2,"message":"716","line":36,"column":9,"nodeType":"665","messageId":"666","endLine":36,"endColumn":29},{"ruleId":"717","severity":2,"message":"718","line":40,"column":13,"nodeType":"665","messageId":"719","endLine":40,"endColumn":24},{"ruleId":"717","severity":2,"message":"720","line":40,"column":40,"nodeType":"665","messageId":"719","endLine":40,"endColumn":51},{"ruleId":"717","severity":2,"message":"721","line":41,"column":7,"nodeType":"665","messageId":"719","endLine":41,"endColumn":17},{"ruleId":"698","severity":2,"message":"722","line":42,"column":7,"nodeType":"723","messageId":"724","endLine":42,"endColumn":19},{"ruleId":"717","severity":2,"message":"725","line":46,"column":11,"nodeType":"665","messageId":"719","endLine":46,"endColumn":30},{"ruleId":"717","severity":2,"message":"721","line":50,"column":7,"nodeType":"665","messageId":"719","endLine":50,"endColumn":17},{"ruleId":"698","severity":2,"message":"722","line":51,"column":7,"nodeType":"723","messageId":"724","endLine":51,"endColumn":20},{"ruleId":"663","severity":2,"message":"726","line":55,"column":9,"nodeType":"665","messageId":"666","endLine":55,"endColumn":28},{"ruleId":"717","severity":2,"message":"718","line":57,"column":11,"nodeType":"665","messageId":"719","endLine":57,"endColumn":22},{"ruleId":"663","severity":2,"message":"727","line":60,"column":9,"nodeType":"665","messageId":"666","endLine":60,"endColumn":26},{"ruleId":"717","severity":2,"message":"728","line":61,"column":5,"nodeType":"665","messageId":"719","endLine":61,"endColumn":20},{"ruleId":"717","severity":2,"message":"718","line":65,"column":14,"nodeType":"665","messageId":"719","endLine":65,"endColumn":25},{"ruleId":"717","severity":2,"message":"729","line":66,"column":19,"nodeType":"665","messageId":"719","endLine":66,"endColumn":24},{"ruleId":"717","severity":2,"message":"728","line":67,"column":7,"nodeType":"665","messageId":"719","endLine":67,"endColumn":22},{"ruleId":"717","severity":2,"message":"728","line":69,"column":7,"nodeType":"665","messageId":"719","endLine":69,"endColumn":22},{"ruleId":"663","severity":2,"message":"730","line":73,"column":9,"nodeType":"665","messageId":"666","endLine":73,"endColumn":27},{"ruleId":"717","severity":2,"message":"731","line":74,"column":28,"nodeType":"665","messageId":"719","endLine":74,"endColumn":39},{"ruleId":"717","severity":2,"message":"732","line":75,"column":5,"nodeType":"665","messageId":"719","endLine":75,"endColumn":18},{"ruleId":"717","severity":2,"message":"718","line":75,"column":19,"nodeType":"665","messageId":"719","endLine":75,"endColumn":30},{"ruleId":"717","severity":2,"message":"733","line":76,"column":5,"nodeType":"665","messageId":"719","endLine":76,"endColumn":14},{"ruleId":"694","severity":2,"message":"734","line":37,"column":15,"nodeType":"665","messageId":"696","endLine":37,"endColumn":21},{"ruleId":"694","severity":2,"message":"734","line":44,"column":15,"nodeType":"665","messageId":"696","endLine":44,"endColumn":21},{"ruleId":"694","severity":2,"message":"735","line":19,"column":13,"nodeType":"665","messageId":"696","endLine":19,"endColumn":17},{"ruleId":"698","severity":2,"message":"736","line":23,"column":5,"nodeType":"723","messageId":"724","endLine":23,"endColumn":80},{"ruleId":"688","severity":2,"message":"737","line":42,"column":39,"nodeType":"652","endLine":43,"endColumn":23,"fix":"738"},{"ruleId":"703","severity":2,"message":"739","line":43,"column":47,"nodeType":null,"endLine":44,"endColumn":22,"fix":"740"},{"ruleId":"688","severity":2,"message":"741","line":43,"column":77,"nodeType":"652","endLine":43,"endColumn":79,"fix":"742"},{"ruleId":"688","severity":2,"message":"689","line":43,"column":79,"nodeType":"690","endLine":43,"endColumn":84,"fix":"743"},{"ruleId":"688","severity":2,"message":"744","line":44,"column":38,"nodeType":"652","endLine":44,"endColumn":49,"fix":"745"},{"ruleId":"688","severity":2,"message":"689","line":44,"column":49,"nodeType":"690","endLine":44,"endColumn":54,"fix":"746"},{"ruleId":"694","severity":2,"message":"747","line":14,"column":13,"nodeType":"665","messageId":"696","endLine":14,"endColumn":22},{"ruleId":"688","severity":2,"message":"748","line":29,"column":16,"nodeType":"690","endLine":29,"endColumn":42,"fix":"749"},{"ruleId":"688","severity":2,"message":"750","line":29,"column":42,"nodeType":"652","endLine":29,"endColumn":50,"fix":"751"},{"ruleId":"694","severity":2,"message":"752","line":21,"column":13,"nodeType":"665","messageId":"696","endLine":21,"endColumn":23},{"ruleId":"688","severity":2,"message":"753","line":42,"column":42,"nodeType":"652","endLine":43,"endColumn":23,"fix":"754"},{"ruleId":"663","severity":2,"message":"755","line":77,"column":7,"nodeType":"665","messageId":"666","endLine":77,"endColumn":13},{"ruleId":"694","severity":2,"message":"747","line":26,"column":13,"nodeType":"665","messageId":"696","endLine":26,"endColumn":22},{"ruleId":"688","severity":2,"message":"756","line":49,"column":22,"nodeType":"652","endLine":49,"endColumn":24,"fix":"757"},{"ruleId":"688","severity":2,"message":"758","line":49,"column":24,"nodeType":"690","endLine":49,"endColumn":39,"fix":"759"},{"ruleId":"688","severity":2,"message":"760","line":49,"column":39,"nodeType":"652","endLine":49,"endColumn":48,"fix":"761"},{"ruleId":"680","severity":2,"message":"681","line":59,"column":15,"nodeType":"682","endLine":59,"endColumn":44},{"ruleId":"703","severity":2,"message":"762","line":64,"column":67,"nodeType":null,"endLine":64,"endColumn":67,"fix":"763"},{"ruleId":"764","severity":2,"message":"765","line":64,"column":68,"nodeType":"682","fix":"766"},{"ruleId":"680","severity":2,"message":"681","line":74,"column":21,"nodeType":"682","endLine":74,"endColumn":44},{"ruleId":"694","severity":2,"message":"767","line":81,"column":35,"nodeType":"665","messageId":"696","endLine":81,"endColumn":40},{"ruleId":"703","severity":2,"message":"768","line":84,"column":29,"nodeType":null,"endLine":84,"endColumn":29,"fix":"769"},{"ruleId":"703","severity":2,"message":"770","line":90,"column":34,"nodeType":null,"endLine":90,"endColumn":43,"fix":"771"},{"ruleId":"694","severity":2,"message":"767","line":91,"column":33,"nodeType":"665","messageId":"696","endLine":91,"endColumn":38},{"ruleId":"680","severity":2,"message":"681","line":132,"column":15,"nodeType":"682","endLine":132,"endColumn":37},{"ruleId":"680","severity":2,"message":"681","line":151,"column":15,"nodeType":"682","endLine":151,"endColumn":39},{"ruleId":"663","severity":2,"message":"772","line":5,"column":11,"nodeType":"665","messageId":"666","endLine":5,"endColumn":31},{"ruleId":"694","severity":2,"message":"773","line":37,"column":15,"nodeType":"665","messageId":"696","endLine":37,"endColumn":28},{"ruleId":"698","severity":2,"message":"736","line":40,"column":5,"nodeType":"723","messageId":"724","endLine":40,"endColumn":24},{"ruleId":"703","severity":2,"message":"774","line":75,"column":17,"nodeType":null,"endLine":75,"endColumn":22,"fix":"775"},{"ruleId":"688","severity":2,"message":"776","line":48,"column":22,"nodeType":"690","endLine":48,"endColumn":34,"fix":"777"},{"ruleId":"688","severity":2,"message":"778","line":48,"column":34,"nodeType":"652","endLine":48,"endColumn":40,"fix":"779"},{"ruleId":"694","severity":2,"message":"780","line":28,"column":11,"nodeType":"665","messageId":"696","endLine":28,"endColumn":16},{"ruleId":"694","severity":2,"message":"780","line":22,"column":15,"nodeType":"665","messageId":"696","endLine":22,"endColumn":20},{"ruleId":"694","severity":2,"message":"780","line":25,"column":15,"nodeType":"665","messageId":"696","endLine":25,"endColumn":20},{"ruleId":"694","severity":2,"message":"780","line":51,"column":11,"nodeType":"665","messageId":"696","endLine":51,"endColumn":16},{"ruleId":"694","severity":2,"message":"781","line":54,"column":17,"nodeType":"665","messageId":"696","endLine":54,"endColumn":25},{"ruleId":"694","severity":2,"message":"780","line":21,"column":11,"nodeType":"665","messageId":"696","endLine":21,"endColumn":16},{"ruleId":"703","severity":2,"message":"782","line":58,"column":12,"nodeType":null,"endLine":58,"endColumn":19,"fix":"783"},{"ruleId":"694","severity":2,"message":"747","line":26,"column":13,"nodeType":"665","messageId":"696","endLine":26,"endColumn":22},{"ruleId":"694","severity":2,"message":"780","line":35,"column":15,"nodeType":"665","messageId":"696","endLine":35,"endColumn":20},{"ruleId":"694","severity":2,"message":"780","line":38,"column":15,"nodeType":"665","messageId":"696","endLine":38,"endColumn":20},{"ruleId":"703","severity":2,"message":"704","line":97,"column":14,"nodeType":null,"endLine":97,"endColumn":14,"fix":"784"},{"ruleId":"698","severity":2,"message":"736","line":30,"column":5,"nodeType":"723","messageId":"724","endLine":30,"endColumn":63},{"ruleId":"663","severity":2,"message":"785","line":17,"column":17,"nodeType":"665","messageId":"666","endLine":17,"endColumn":25},{"ruleId":"694","severity":2,"message":"786","line":32,"column":13,"nodeType":"665","messageId":"696","endLine":32,"endColumn":17},{"ruleId":"694","severity":2,"message":"781","line":40,"column":11,"nodeType":"665","messageId":"696","endLine":40,"endColumn":19},{"ruleId":"694","severity":2,"message":"781","line":58,"column":15,"nodeType":"665","messageId":"696","endLine":58,"endColumn":23},{"ruleId":"698","severity":2,"message":"736","line":68,"column":5,"nodeType":"723","messageId":"724","endLine":68,"endColumn":24},{"ruleId":"694","severity":2,"message":"786","line":20,"column":13,"nodeType":"665","messageId":"696","endLine":20,"endColumn":17},{"ruleId":"694","severity":2,"message":"787","line":28,"column":13,"nodeType":"665","messageId":"696","endLine":28,"endColumn":20},{"ruleId":"694","severity":2,"message":"788","line":44,"column":11,"nodeType":"665","messageId":"696","endLine":44,"endColumn":16},{"ruleId":"694","severity":2,"message":"788","line":55,"column":11,"nodeType":"665","messageId":"696","endLine":55,"endColumn":16},{"ruleId":"694","severity":2,"message":"788","line":74,"column":15,"nodeType":"665","messageId":"696","endLine":74,"endColumn":20},{"ruleId":"698","severity":2,"message":"736","line":77,"column":5,"nodeType":"723","messageId":"724","endLine":77,"endColumn":24},{"ruleId":"694","severity":2,"message":"788","line":20,"column":11,"nodeType":"665","messageId":"696","endLine":20,"endColumn":16},{"ruleId":"789","severity":2,"message":"790","line":82,"column":30,"nodeType":"665","messageId":"791","endLine":82,"endColumn":36},{"ruleId":"680","severity":2,"message":"681","line":104,"column":13,"nodeType":"682","endLine":104,"endColumn":45},{"ruleId":"680","severity":2,"message":"681","line":118,"column":13,"nodeType":"682","endLine":118,"endColumn":36},{"ruleId":"703","severity":2,"message":"792","line":256,"column":3,"nodeType":null,"endLine":256,"endColumn":3,"fix":"793"},{"ruleId":"663","severity":2,"message":"794","line":27,"column":9,"nodeType":"665","messageId":"666","endLine":27,"endColumn":21},{"ruleId":"663","severity":2,"message":"795","line":32,"column":9,"nodeType":"665","messageId":"666","endLine":32,"endColumn":21},{"ruleId":"703","severity":2,"message":"796","line":50,"column":23,"nodeType":null,"endLine":50,"endColumn":72,"fix":"797"},{"ruleId":"688","severity":2,"message":"798","line":50,"column":32,"nodeType":"652","endLine":50,"endColumn":39,"fix":"799"},{"ruleId":"688","severity":2,"message":"800","line":50,"column":39,"nodeType":"801","endLine":50,"endColumn":62,"fix":"802"},{"ruleId":"703","severity":2,"message":"803","line":65,"column":23,"nodeType":null,"endLine":65,"endColumn":95,"fix":"804"},{"ruleId":"688","severity":2,"message":"805","line":65,"column":32,"nodeType":"652","endLine":65,"endColumn":56,"fix":"806"},{"ruleId":"688","severity":2,"message":"800","line":65,"column":56,"nodeType":"801","endLine":65,"endColumn":79,"fix":"807"},{"ruleId":"688","severity":2,"message":"808","line":65,"column":79,"nodeType":"652","endLine":65,"endColumn":85,"fix":"809"},{"ruleId":"703","severity":2,"message":"810","line":129,"column":28,"nodeType":null,"endLine":130,"endColumn":3,"fix":"811"},{"ruleId":"789","severity":2,"message":"790","line":95,"column":30,"nodeType":"665","messageId":"791","endLine":95,"endColumn":36},{"ruleId":"680","severity":2,"message":"681","line":116,"column":13,"nodeType":"682","endLine":116,"endColumn":48},{"ruleId":"680","severity":2,"message":"681","line":130,"column":13,"nodeType":"682","endLine":130,"endColumn":43},{"ruleId":"680","severity":2,"message":"681","line":144,"column":13,"nodeType":"682","endLine":144,"endColumn":56},{"ruleId":"789","severity":2,"message":"790","line":54,"column":30,"nodeType":"665","messageId":"791","endLine":54,"endColumn":36},{"ruleId":"688","severity":2,"message":"812","line":66,"column":63,"nodeType":"801","endLine":66,"endColumn":69,"fix":"813"},{"ruleId":"814","severity":2,"message":"815","line":71,"column":23,"nodeType":"652"},{"ruleId":"680","severity":2,"message":"681","line":82,"column":13,"nodeType":"682","endLine":82,"endColumn":46},{"ruleId":"680","severity":2,"message":"681","line":29,"column":7,"nodeType":"682","endLine":29,"endColumn":30},{"ruleId":"816","severity":2,"message":"817","line":90,"column":31,"nodeType":"700","messageId":"818","endLine":90,"endColumn":33},{"ruleId":"694","severity":2,"message":"819","line":26,"column":38,"nodeType":"665","messageId":"696","endLine":26,"endColumn":51},{"ruleId":"694","severity":2,"message":"820","line":44,"column":13,"nodeType":"665","messageId":"696","endLine":44,"endColumn":21},{"ruleId":"694","severity":2,"message":"819","line":51,"column":11,"nodeType":"665","messageId":"696","endLine":51,"endColumn":24},{"ruleId":"694","severity":2,"message":"819","line":73,"column":15,"nodeType":"665","messageId":"696","endLine":73,"endColumn":28},{"ruleId":"816","severity":2,"message":"821","line":99,"column":27,"nodeType":"700","messageId":"822","endLine":99,"endColumn":29},{"ruleId":"698","severity":2,"message":"823","line":99,"column":27,"nodeType":"700","messageId":"701"},{"ruleId":"694","severity":2,"message":"819","line":20,"column":38,"nodeType":"665","messageId":"696","endLine":20,"endColumn":51},{"ruleId":"694","severity":2,"message":"819","line":37,"column":11,"nodeType":"665","messageId":"696","endLine":37,"endColumn":24},{"ruleId":"694","severity":2,"message":"819","line":47,"column":15,"nodeType":"665","messageId":"696","endLine":47,"endColumn":28},{"ruleId":"680","severity":2,"message":"681","line":53,"column":11,"nodeType":"682","endLine":53,"endColumn":38},{"ruleId":"703","severity":2,"message":"704","line":48,"column":11,"nodeType":null,"endLine":48,"endColumn":11,"fix":"824"},{"ruleId":"694","severity":2,"message":"786","line":27,"column":13,"nodeType":"665","messageId":"696","endLine":27,"endColumn":17},{"ruleId":"694","severity":2,"message":"825","line":33,"column":47,"nodeType":"665","messageId":"696","endLine":33,"endColumn":53},{"ruleId":"826","severity":2,"message":"827","line":51,"column":23,"nodeType":"828","endLine":51,"endColumn":35},{"ruleId":"826","severity":2,"message":"829","line":51,"column":37,"nodeType":"828","endLine":51,"endColumn":46},{"ruleId":"826","severity":2,"message":"830","line":51,"column":48,"nodeType":"828","endLine":51,"endColumn":56},{"ruleId":"826","severity":2,"message":"831","line":52,"column":32,"nodeType":"665","endLine":52,"endColumn":41},{"ruleId":"832","severity":2,"message":"833","line":69,"column":11,"nodeType":"834","messageId":"835","endLine":69,"endColumn":35},{"ruleId":"663","severity":2,"message":"836","line":74,"column":50,"nodeType":"665","messageId":"666","endLine":74,"endColumn":62},{"ruleId":"826","severity":2,"message":"830","line":78,"column":20,"nodeType":"828","endLine":78,"endColumn":28},{"ruleId":"826","severity":2,"message":"837","line":84,"column":66,"nodeType":"665","endLine":84,"endColumn":71},{"ruleId":"826","severity":2,"message":"838","line":84,"column":72,"nodeType":"665","endLine":84,"endColumn":76},{"ruleId":"694","severity":2,"message":"707","line":230,"column":13,"nodeType":"665","messageId":"696","endLine":230,"endColumn":17},{"ruleId":"694","severity":2,"message":"839","line":287,"column":23,"nodeType":"665","messageId":"696","endLine":287,"endColumn":32},{"ruleId":"694","severity":2,"message":"840","line":412,"column":24,"nodeType":"665","messageId":"696","endLine":412,"endColumn":35},{"ruleId":"826","severity":2,"message":"830","line":524,"column":21,"nodeType":"828","endLine":524,"endColumn":29},{"ruleId":"826","severity":2,"message":"841","line":524,"column":31,"nodeType":"828","endLine":524,"endColumn":44},{"ruleId":"703","severity":2,"message":"842","line":548,"column":17,"nodeType":null,"endLine":548,"endColumn":17,"fix":"843"},{"ruleId":"703","severity":2,"message":"774","line":583,"column":17,"nodeType":null,"endLine":583,"endColumn":22,"fix":"844"},{"ruleId":"683","severity":2,"message":"684","line":49,"column":17,"nodeType":"685","messageId":"686","endLine":51,"endColumn":42},{"ruleId":"683","severity":2,"message":"684","line":61,"column":17,"nodeType":"685","messageId":"686","endLine":63,"endColumn":42},{"ruleId":"688","severity":2,"message":"845","line":102,"column":29,"nodeType":"652","endLine":103,"endColumn":19,"fix":"846"},{"ruleId":"847","severity":2,"message":"848","line":216,"column":5,"nodeType":"849","messageId":"850","endLine":220,"endColumn":23},{"ruleId":"703","severity":2,"message":"792","line":341,"column":3,"nodeType":null,"endLine":341,"endColumn":3,"fix":"851"},{"ruleId":"852","severity":2,"message":"853","line":4,"column":1,"nodeType":"854","endLine":4,"endColumn":53},{"ruleId":"826","severity":2,"message":"855","line":10,"column":30,"nodeType":"828","endLine":10,"endColumn":35},{"ruleId":"694","severity":2,"message":"856","line":20,"column":30,"nodeType":"665","messageId":"696","endLine":20,"endColumn":34},{"ruleId":"694","severity":2,"message":"857","line":20,"column":36,"nodeType":"665","messageId":"696","endLine":20,"endColumn":41},{"ruleId":"694","severity":2,"message":"857","line":44,"column":35,"nodeType":"665","messageId":"696","endLine":44,"endColumn":40},{"ruleId":"852","severity":2,"message":"853","line":14,"column":1,"nodeType":"854","endLine":14,"endColumn":41},{"ruleId":"694","severity":2,"message":"786","line":30,"column":13,"nodeType":"665","messageId":"696","endLine":30,"endColumn":17},{"ruleId":"694","severity":2,"message":"747","line":32,"column":13,"nodeType":"665","messageId":"696","endLine":32,"endColumn":22},{"ruleId":"694","severity":2,"message":"825","line":40,"column":47,"nodeType":"665","messageId":"696","endLine":40,"endColumn":53},{"ruleId":"703","severity":2,"message":"858","line":78,"column":22,"nodeType":null,"endLine":79,"endColumn":1,"fix":"859"},{"ruleId":"860","severity":2,"message":"861","line":79,"column":1,"nodeType":"690","endLine":79,"endColumn":6,"fix":"862"},{"ruleId":"703","severity":2,"message":"858","line":84,"column":19,"nodeType":null,"endLine":85,"endColumn":1,"fix":"863"},{"ruleId":"860","severity":2,"message":"864","line":85,"column":1,"nodeType":"690","endLine":85,"endColumn":6,"fix":"865"},{"ruleId":"688","severity":2,"message":"866","line":101,"column":59,"nodeType":"690","endLine":101,"endColumn":66,"fix":"867"},{"ruleId":"688","severity":2,"message":"868","line":101,"column":66,"nodeType":"652","endLine":101,"endColumn":73,"fix":"869"},{"ruleId":"688","severity":2,"message":"870","line":104,"column":33,"nodeType":"652","endLine":105,"endColumn":15,"fix":"871"},{"ruleId":"694","severity":2,"message":"786","line":28,"column":13,"nodeType":"665","messageId":"696","endLine":28,"endColumn":17},{"ruleId":"703","severity":2,"message":"792","line":211,"column":3,"nodeType":null,"endLine":211,"endColumn":3,"fix":"872"},{"ruleId":"663","severity":2,"message":"873","line":24,"column":11,"nodeType":"665","messageId":"666","endLine":24,"endColumn":16},{"ruleId":"663","severity":2,"message":"874","line":24,"column":18,"nodeType":"665","messageId":"666","endLine":24,"endColumn":28},{"ruleId":"694","severity":2,"message":"787","line":36,"column":13,"nodeType":"665","messageId":"696","endLine":36,"endColumn":20},{"ruleId":"694","severity":2,"message":"747","line":21,"column":13,"nodeType":"665","messageId":"696","endLine":21,"endColumn":22},{"ruleId":"703","severity":2,"message":"875","line":30,"column":16,"nodeType":null,"endLine":33,"endColumn":10,"fix":"876"},{"ruleId":"688","severity":2,"message":"689","line":41,"column":22,"nodeType":"690","endLine":41,"endColumn":27,"fix":"877"},{"ruleId":"688","severity":2,"message":"689","line":45,"column":23,"nodeType":"690","endLine":45,"endColumn":28,"fix":"878"},{"ruleId":"688","severity":2,"message":"689","line":47,"column":78,"nodeType":"690","endLine":47,"endColumn":83,"fix":"879"},{"ruleId":"688","severity":2,"message":"880","line":25,"column":27,"nodeType":"652","endLine":25,"endColumn":28,"fix":"881"},{"ruleId":"688","severity":2,"message":"882","line":25,"column":28,"nodeType":"690","endLine":25,"endColumn":43,"fix":"883"},{"ruleId":"884","severity":2,"message":"885","line":44,"column":34,"nodeType":"886","endLine":44,"endColumn":53},{"ruleId":"847","severity":2,"message":"848","line":94,"column":5,"nodeType":"849","messageId":"850","endLine":98,"endColumn":30},{"ruleId":"703","severity":2,"message":"887","line":102,"column":36,"nodeType":null,"endLine":102,"endColumn":36,"fix":"888"},{"ruleId":"694","severity":2,"message":"889","line":104,"column":17,"nodeType":"665","messageId":"696","endLine":104,"endColumn":22},{"ruleId":"847","severity":2,"message":"848","line":105,"column":9,"nodeType":"849","messageId":"850","endLine":109,"endColumn":32},{"ruleId":"694","severity":2,"message":"735","line":15,"column":13,"nodeType":"665","messageId":"696","endLine":15,"endColumn":17},{"ruleId":"703","severity":2,"message":"890","line":27,"column":74,"nodeType":null,"endLine":28,"endColumn":9,"fix":"891"},{"ruleId":"703","severity":2,"message":"704","line":55,"column":17,"nodeType":null,"endLine":55,"endColumn":17,"fix":"892"},"import/extensions","Unexpected use of file extension \"jsx\" for \"./App.jsx\"","Literal","lines-around-directive",["893"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'setImages' is assigned a value but never used.","Identifier","unusedVar","'linkError' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\+.","unnecessaryEscape",["894","895"],"Unnecessary escape character: \\$.",["896","897"],["898","899"],["900","901"],["902","903"],"Unnecessary escape character: \\/.",["904","905"],["906","907"],"jsx-a11y/label-has-associated-control","A form label must be associated with a control.","JSXOpeningElement","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","'Header' is assigned a value but never used.","react/jsx-one-expression-per-line","`{\" \"}` must be placed on a new line","JSXExpressionContainer",{"range":"908","text":"909"},{"range":"910","text":"909"},{"range":"911","text":"909"},"no-shadow","'username' is already declared in the upper scope.","noShadow","'email' is already declared in the upper scope.","consistent-return","Expected to return a value at the end of async arrow function.","ArrowFunctionExpression","missingReturn","'password' is already declared in the upper scope.","prettier/prettier","Insert `0`",{"range":"912","text":"913"},"'getPost' is assigned a value but never used.","'type' is already declared in the upper scope.","'id' is already declared in the upper scope.","'userId' is already declared in the upper scope.","'vote' is already declared in the upper scope.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useStorage' is defined but never used.","Insert `;`",{"range":"914","text":"915"},"'handleUpdatePassword' is assigned a value but never used.","no-undef","'currentUser' is not defined.","undef","'newPassword' is not defined.","'setMessage' is not defined.","Async arrow function expected no return value.","ReturnStatement","unexpectedReturnValue","'setNewPasswordError' is not defined.","'handleDeleteAccount' is assigned a value but never used.","'handleUpdateAbout' is assigned a value but never used.","'setAboutMessage' is not defined.","'about' is not defined.","'handleUpdateAvatar' is assigned a value but never used.","'uploadImage' is not defined.","'updatePicture' is not defined.","'setAvatar' is not defined.","'slides' is already declared in the upper scope.","'user' is already declared in the upper scope.","Arrow function expected no return value.","` point                      ` must be placed on a new line",{"range":"916","text":"917"},"Replace `·post.votes.sum·!==·-1·&&·\"s\"}·•{\"·\"}⏎·····················` with `⏎························post.votes.sum·!==·-1·&&⏎························\"s\"}·•`",{"range":"918","text":"919"},"` •` must be placed on a new line",{"range":"920","text":"921"},{"range":"922","text":"909"},"` comments •` must be placed on a new line",{"range":"923","text":"924"},{"range":"925","text":"909"},"'subreadit' is already declared in the upper scope.","`{subreadit.members.length}` must be placed on a new line",{"range":"926","text":"927"},"` members` must be placed on a new line",{"range":"928","text":"929"},"'subreadits' is already declared in the upper scope.","` member                      ` must be placed on a new line",{"range":"930","text":"931"},"'colors' is assigned a value but never used.","`b/` must be placed on a new line",{"range":"932","text":"933"},"`{subreaditName}` must be placed on a new line",{"range":"934","text":"935"},"` Settings` must be placed on a new line",{"range":"936","text":"937"},"Insert `⏎···············`",{"range":"938","text":"939"},"react/jsx-closing-bracket-location","The closing bracket must be aligned with the line containing the opening tag (expected column 17 on the next line)",{"range":"940","text":"941"},"'rules' is already declared in the upper scope.","Insert `⏎························`",{"range":"942","text":"943"},"Replace `prevRules` with `(prevRules)`",{"range":"944","text":"945"},"'uploadSubreaditImage' is assigned a value but never used.","'subscriptions' is already declared in the upper scope.","Replace `props` with `(props)`",{"range":"946","text":"947"},"`{user.karma}` must be placed on a new line",{"range":"948","text":"949"},"` karma` must be placed on a new line",{"range":"950","text":"951"},"'posts' is already declared in the upper scope.","'comments' is already declared in the upper scope.","Replace `.25rem·` with `0.25rem·0`",{"range":"952","text":"953"},{"range":"954","text":"913"},"'setLimit' is assigned a value but never used.","'post' is already declared in the upper scope.","'comment' is already declared in the upper scope.","'saved' is already declared in the upper scope.","no-use-before-define","'colors' was used before it was defined.","usedBeforeDefined","Insert `⏎`",{"range":"955","text":"956"},"'deleteAvatar' is assigned a value but never used.","'deleteBanner' is assigned a value but never used.","Replace `<Message>Upload·<strong>Avatar</strong></Message>` with `(⏎············<Message>⏎··············Upload·<strong>Avatar</strong>⏎············</Message>⏎··········)`",{"range":"957","text":"958"},"`Upload ` must be placed on a new line",{"range":"959","text":"960"},"`strong` must be placed on a new line","JSXElement",{"range":"961","text":"962"},"Replace `<Message>Drag·and·Drop·or·Upload·<strong>Banner</strong>·Image</Message>` with `(⏎············<Message>⏎··············Drag·and·Drop·or·Upload·<strong>Banner</strong>·Image⏎············</Message>⏎··········)`",{"range":"963","text":"964"},"`Drag and Drop or Upload ` must be placed on a new line",{"range":"965","text":"966"},{"range":"967","text":"968"},"` Image` must be placed on a new line",{"range":"969","text":"970"},"Replace `⏎`;` with ``;⏎`",{"range":"971","text":"972"},"`br` must be placed on a new line",{"range":"973","text":"974"},"react/no-unescaped-entities","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'notifications' is already declared in the upper scope.","'messages' is already declared in the upper scope.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","Expected to return a value at the end of arrow function.",{"range":"975","text":"913"},"'postId' is already declared in the upper scope.","react/prop-types","'contentState' is missing in props validation","Property","'entityKey' is missing in props validation","'children' is missing in props validation","'contentState.getEntity' is missing in props validation","no-cond-assign","Unexpected assignment within a 'while' statement.","AssignmentExpression","unexpected","'contentState' is defined but never used.","'children[].props' is missing in props validation","'children[].props.text' is missing in props validation","'selection' is already declared in the upper scope.","'editorState' is already declared in the upper scope.","'decoratedText' is missing in props validation","Insert `⏎·····`",{"range":"976","text":"977"},{"range":"978","text":"947"},"` Comment                  ` must be placed on a new line",{"range":"979","text":"980"},"no-nested-ternary","Do not nest ternary expressions.","ConditionalExpression","noNestedTernary",{"range":"981","text":"956"},"import/no-cycle","Dependency cycle detected.","ImportDeclaration","'title' is missing in props validation","'link' is already declared in the upper scope.","'title' is already declared in the upper scope.","Delete `⏎`",{"range":"982","text":"983"},"react/jsx-indent","Expected indentation of 14 space characters but found 0.",{"range":"984","text":"985"},{"range":"986","text":"983"},"Expected indentation of 16 space characters but found 0.",{"range":"987","text":"988"},"`{votes}` must be placed on a new line",{"range":"989","text":"990"},"` points` must be placed on a new line",{"range":"991","text":"992"},"` comments              ` must be placed on a new line",{"range":"993","text":"994"},{"range":"995","text":"956"},"'saved' is assigned a value but never used.","'handleSave' is assigned a value but never used.","Replace `⏎············src={subreadit.icon}⏎············alt={`${subreadit.name}'s·Icon`}⏎·········` with `·src={subreadit.icon}·alt={`${subreadit.name}'s·Icon`}`",{"range":"996","text":"997"},{"range":"998","text":"909"},{"range":"999","text":"909"},{"range":"1000","text":"909"},"`/` must be placed on a new line",{"range":"1001","text":"1002"},"`{slides.length}` must be placed on a new line",{"range":"1003","text":"1004"},"react/no-array-index-key","Do not use Array index in keys","TemplateLiteral","Insert `⏎···`",{"range":"1005","text":"1006"},"'props' is already declared in the upper scope.","Delete `⏎········`",{"range":"1007","text":"983"},{"range":"1008","text":"913"},"padding-line-between-statements",{"messageId":"1009","fix":"1010","desc":"1011"},{"messageId":"1012","fix":"1013","desc":"1014"},{"messageId":"1009","fix":"1015","desc":"1011"},{"messageId":"1012","fix":"1016","desc":"1014"},{"messageId":"1009","fix":"1017","desc":"1011"},{"messageId":"1012","fix":"1018","desc":"1014"},{"messageId":"1009","fix":"1019","desc":"1011"},{"messageId":"1012","fix":"1020","desc":"1014"},{"messageId":"1009","fix":"1021","desc":"1011"},{"messageId":"1012","fix":"1022","desc":"1014"},{"messageId":"1009","fix":"1023","desc":"1011"},{"messageId":"1012","fix":"1024","desc":"1014"},{"messageId":"1009","fix":"1025","desc":"1011"},{"messageId":"1012","fix":"1026","desc":"1014"},[1546,1551],"\n{\" \"}",[1889,1894],[2359,2364],[1971,1971],"0",[966,966],";",[1444,1473],"\n{' '}\npoint\n",[1497,1556],"\n                        post.votes.sum !== -1 &&\n                        \"s\"} •",[1527,1529],"\n{' '}\n•",[1529,1534],[1572,1583],"\n{' '}\ncomments •",[1583,1588],[895,921],"\n{subreadit.members.length}",[921,929],"\n{' '}\nmembers\n",[1359,1389],"\n{' '}\nmember\n",[1624,1626],"\nb/",[1626,1641],"\n{subreaditName}",[1641,1650],"\n{' '}\nSettings\n",[2167,2167],"\n               ",[2167,2170],"\n                />",[2908,2908],"\n                        ",[3100,3109],"(prevRules)",[2172,2177],"(props)",[1803,1815],"\n{user.karma}",[1815,1821],"\n{' '}\nkarma\n",[1416,1423],"0.25rem 0",[2324,2324],[5826,5826],"\n",[1497,1546],"(\n            <Message>\n              Upload <strong>Avatar</strong>\n            </Message>\n          )",[1506,1513],"\nUpload",[1513,1536],"\n{' '}\n<strong>Avatar</strong>\n",[1943,2015],"(\n            <Message>\n              Drag and Drop or Upload <strong>Banner</strong> Image\n            </Message>\n          )",[1952,1976],"\nDrag and Drop or Upload",[1976,1999],"\n{' '}\n<strong>Banner</strong>",[1999,2005],"\n{' '}\nImage\n",[3056,3059],"`;\n",[1858,1864],"\n{' '}\n<br />",[1327,1327],[16022,16022],"\n     ",[16759,16764],[3823,3850],"\n{' '}\nComment\n",[8652,8652],[2609,2610],"",[2610,2610],"              ",[2815,2816],[2816,2816],"                ",[3449,3456],"\n{votes}",[3456,3463],"\n{' '}\npoints\n",[3593,3617],"\n{' '}\ncomments\n",[5899,5899],[1017,1105]," src={subreadit.icon} alt={`${subreadit.name}'s Icon`}",[1338,1343],[1445,1450],[1548,1553],[642,643],"\n/",[643,658],"\n{slides.length}",[2417,2417],"\n   ",[880,889],[1342,1342],"removeEscape",{"range":"1027","text":"983"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1028","text":"1029"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1030","text":"983"},{"range":"1031","text":"1029"},{"range":"1032","text":"983"},{"range":"1033","text":"1029"},{"range":"1034","text":"983"},{"range":"1035","text":"1029"},{"range":"1036","text":"983"},{"range":"1037","text":"1029"},{"range":"1038","text":"983"},{"range":"1039","text":"1029"},{"range":"1040","text":"983"},{"range":"1041","text":"1029"},[2953,2954],[2953,2953],"\\",[2955,2956],[2955,2955],[2994,2995],[2994,2994],[2996,2997],[2996,2996],[3027,3028],[3027,3027],[3031,3032],[3031,3031],[3050,3051],[3050,3050]]